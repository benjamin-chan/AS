1                                          The SAS System              17:50 Thursday, June 21, 2018

NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           0.45 seconds
      cpu time            0.29 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=calculateASPrevalence; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref UCB64 was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB64\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: W:\onenote\references\drug ndcs\sas data
143        footnote "&pgm.";
144        * footnote2 "%sysfunc(datetime(),datetime14.)";
145        title1 '--- AS project ---';
146        **********************************************************************;
147        options macrogen mlogic mprint symbolgen;
148        options nomacrogen nomlogic nomprint nosymbolgen;
2                                                                   The SAS System                                       17:50 Thursday, June 21, 2018

149        
150        
151        ods html
152          body = "output\&cmt..html"
153          style = Statistical;
NOTE: Writing HTML Body file: output\calculateASPrevalence.html
154        
155        
156        proc sql;
157          create table Work.numerASCohort as
158            select "MPCD"       as database, count(distinct patid) as numerASCohort from UCB.cohortastdmpcd  union corr
159            select "Marketscan" as database, count(distinct patid) as numerASCohort from UCB.cohortastducb   union corr
160            select "Medicare"   as database, count(distinct patid) as numerASCohort from UCB.cohortastd_sabr ;
NOTE: Data set UCB.COHORTASTDMPCD is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTDUCB is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Table WORK.NUMERASCOHORT created, with 3 rows and 2 columns.

161          select * from Work.numerASCohort;
                                                                  --- AS project ---                                 17:50 Thursday, June 21, 2018   1

                                                                                  numer
                                                               database        ASCohort
                                                               ------------------------
                                                               MPCD                5078
                                                               Marketscan         22625
                                                               Medicare           35349
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
162        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.50 seconds
      cpu time            0.18 seconds
      

163        
164        
165        /*
166        Denominator
167        12 months of continuous enrollment
168        6+ months enrollment during calendar year
169        Age 65+ at start of enrollment window
170         */
171        %let varlist = patid, enr_start_date, enr_end_date, intck("month", calculated date1, calculated date2) + 1 as monthsEnrolled;
172        %let where = 6 <= calculated monthsEnrolled & 12 <= intck("month", enr_start_date, enr_end_date) + 1;
173        proc sql;
174          create table Work.denom1 as
175            select A.*,
176                   int((A.date1 - B.birth_date) / 365.25) as ageAtEnrollmentStart
177            from (select distinct 2006 as year, max(enr_start_date, "01JAN2006"D) format = mmddyy10. as date1, min("31DEC2006"D, enr_end_date)
177      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
178                  select distinct 2007 as year, max(enr_start_date, "01JAN2007"D) format = mmddyy10. as date1, min("31DEC2007"D, enr_end_date)
178      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
179                  select distinct 2008 as year, max(enr_start_date, "01JAN2008"D) format = mmddyy10. as date1, min("31DEC2008"D, enr_end_date)
179      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
180                  select distinct 2009 as year, max(enr_start_date, "01JAN2009"D) format = mmddyy10. as date1, min("31DEC2009"D, enr_end_date)
180      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
181                  select distinct 2010 as year, max(enr_start_date, "01JAN2010"D) format = mmddyy10. as date1, min("31DEC2010"D, enr_end_date)
181      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
182                  select distinct 2011 as year, max(enr_start_date, "01JAN2011"D) format = mmddyy10. as date1, min("31DEC2011"D, enr_end_date)
182      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
183                  select distinct 2012 as year, max(enr_start_date, "01JAN2012"D) format = mmddyy10. as date1, min("31DEC2012"D, enr_end_date)
183      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
184                  select distinct 2013 as year, max(enr_start_date, "01JAN2013"D) format = mmddyy10. as date1, min("31DEC2013"D, enr_end_date)
184      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
185                  select distinct 2014 as year, max(enr_start_date, "01JAN2014"D) format = mmddyy10. as date1, min("31DEC2014"D, enr_end_date)
185      ! format = mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where ) A inner join
186                 stdc5p.std_demog_2006_2014 B on (A.patid = B.patid)
187            where 65 <= calculated ageAtEnrollmentStart
188            order by patid, year;
NOTE: Data set STDC5P.STD_DEMOG_2006_2014 is in a format that is native to another host. Cross Environment Data Access will be used. This will 
      require additional CPU resources and may reduce performance.
NOTE: Table WORK.DENOM1 created, with 6616426 rows and 8 columns.

189          create table Work.denom2 as
190            select distinct
191                   A.patid,
192                   A.enr_start_date,
3                                                                   The SAS System                                       17:50 Thursday, June 21, 2018

193                   A.enr_end_date,
194                   intck("month", A.enr_start_date, A.enr_end_date) + 1 as monthsEnrolled,
195                   int((A.enr_start_date - B.birth_date) / 365.25) as ageAtEnrollmentStart
196            from stdc5p.std_enrollment A inner join
197                 stdc5p.std_demog_2006_2014 B on (A.patid = B.patid)
198            where 12 <= calculated monthsEnrolled &
199                  65 <= calculated ageAtEnrollmentStart;
NOTE: Data set STDC5P.STD_DEMOG_2006_2014 is in a format that is native to another host. Cross Environment Data Access will be used. This will 
      require additional CPU resources and may reduce performance.
NOTE: Table WORK.DENOM2 created, with 1270259 rows and 5 columns.

200        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           43.85 seconds
      cpu time            1:44.28
      

201        
202        /*
203        Two 720.xx diagnosis codes between 7-365 days apart
204        Both from rheumatologists
205        Both from ambulatory visits
206         */
207        %let varlist = patid, begin_date, dx_type, dx, enc_type, prov_type;
208        %let where = dx_type = "09" & dx like "720%" & enc_type = "AV";
209        proc sql;
210          create table Work.temp1 as
211            select &varlist from stdc5p.std_dx_2006 where &where union corr
212            select &varlist from stdc5p.std_dx_2007 where &where union corr
213            select &varlist from stdc5p.std_dx_2008 where &where union corr
214            select &varlist from stdc5p.std_dx_2009 where &where union corr
215            select &varlist from stdc5p.std_dx_2010 where &where union corr
216            select &varlist from stdc5p.std_dx_2011 where &where union corr
217            select &varlist from stdc5p.std_dx_2012 where &where union corr
218            select &varlist from stdc5p.std_dx_2013 where &where union corr
219            select &varlist from stdc5p.std_dx_2014 where &where
220            order by patid, begin_date;
NOTE: Data set STDC5P.STD_DX_2006 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2007 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2008 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2009 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2010 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2011 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2012 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2013 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2014 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.TEMP1 created, with 373492 rows and 6 columns.

221          select dx, count(*) as n from Work.temp1 group by dx;
                                                                  --- AS project ---                                 17:50 Thursday, June 21, 2018   2

                                                             DX                         n
                                                             ----------------------------
                                                             720                       11
                                                             7200                   38716
                                                             72001                      1
                                                             72003                      2
                                                             7201                   57421
                                                             72010                      1
                                                             7202                  264516
                                                             7204                       4
                                                             7206                       1
                                                             72060                      1
                                                             7207                       1
                                                             72071                      1
                                                             72079                      2
                                                             7208                       3
                                                             72081                    540
                                                             72089                   1807
                                                             7209                   10460
                                                             72090                      4
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
222        quit;
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           11:12.69
      cpu time            9:43.19
4                                                                   The SAS System                                       17:50 Thursday, June 21, 2018

      

223        proc sql;
224          create table Work.temp2 as
225            select distinct
226                   coalesce(A.patid, B.patid) as patid,
227                   year(B.begin_date) as year,
228                   A.begin_date format = mmddyy10. as date1,
229                   B.begin_date format = mmddyy10. as date2,
230                   A.prov_type as prov_type1,
231                   B.prov_type as prov_type2,
232                   int((B.begin_date - C.birth_date) / 365.25) as ageAtASDate
233            from Work.temp1 A inner join
234                 Work.temp1 B on (A.patid = B.patid &
235                                  intnx("year", B.begin_date, -1, "sameday") < A.begin_date < B.begin_date - 7) inner join
236                 stdc5p.std_demog_2006_2014 C on (A.patid = C.patid)
237            where (A.prov_type = "66" & B.prov_type = "66");
NOTE: Data set STDC5P.STD_DEMOG_2006_2014 is in a format that is native to another host. Cross Environment Data Access will be used. This will 
      require additional CPU resources and may reduce performance.
NOTE: Table WORK.TEMP2 created, with 65023 rows and 7 columns.

238          create table Work.numer1 as
239            select A.*, B.year, B.ageAtEnrollmentStart
240            from (select patid, min(year) as yearEarliestDiagnosis from Work.temp2 group by patid) A inner join
241                 Work.denom1 B on (A.patid = B.patid & A.yearEarliestDiagnosis <= B.year);
NOTE: Table WORK.NUMER1 created, with 5213 rows and 4 columns.

242          create table Work.numer2 as
243            select A.*, B.ageAtEnrollmentStart
244            from (select patid, min(date2) format = mmddyy10. as dateEarliestDiagnosis from Work.temp2 group by patid) A inner join
245                 Work.denom2 B on (A.patid = B.patid & B.enr_start_date <= A.dateEarliestDiagnosis <= B.enr_end_date);
NOTE: Table WORK.NUMER2 created, with 898 rows and 3 columns.

246          select "Work.numer1" as table, min(ageAtEnrollmentStart) as minAge, max(ageAtEnrollmentStart) as maxAge, count(*) as countRows from
246      ! Work.numer1 union corr
247          select "Work.numer2" as table, min(ageAtEnrollmentStart) as minAge, max(ageAtEnrollmentStart) as maxAge, count(*) as countRows from
247      ! Work.numer2 ;
                                                                  --- AS project ---                                 17:50 Thursday, June 21, 2018   3

                                                      table          minAge    maxAge  countRows
                                                      ------------------------------------------
                                                      Work.numer1        65       101       5213
                                                      Work.numer2        65        93        898
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
248        quit;
NOTE: The PROCEDURE SQL printed page 3.
NOTE: PROCEDURE SQL used (Total process time):
      real time           4.22 seconds
      cpu time            6.36 seconds
      

249        
250        /*
251        Prevalence
252         */
253        proc sql;
254          create table Work.prev as
255            select put(coalesce(A.year, B.year), 4.) as year,
256                   A.numer as numer5pct,
257                   B.denom as denom5pct,
258                   A.numer * 20 as numerEstimated,
259                   B.denom * 20 as denomEstimated,
260                   A.numer / B.denom format = percent10.3 as prev
261            from (select year, count(distinct patid) as numer from Work.numer1 group by year) A inner join
262                 (select year, count(distinct patid) as denom from Work.denom1 group by year) B on (A.year = B.year)
263            union corr
264            select "OVERALL 2006-2014" as year,
265                   A.numer as numer5pct,
266                   B.denom as denom5pct,
267                   A.numer * 20 as numerEstimated,
268                   B.denom * 20 as denomEstimated,
269                   A.numer / B.denom format = percent10.3 as prev
270            from (select count(distinct patid) as numer from Work.numer2) A,
271                 (select count(distinct patid) as denom from Work.denom2) B;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK.PREV created, with 10 rows and 6 columns.

272          select * from Work.prev;
                                                                  --- AS project ---                                 17:50 Thursday, June 21, 2018   4

                                                                                   numer         denom
                                   year               numer5pct  denom5pct     Estimated     Estimated        prev
                                   -------------------------------------------------------------------------------
                                   2006                     118     637960          2360      12759200     0.018% 
                                   2007                     250     687896          5000      13757920     0.036% 
                                   2008                     350     687227          7000      13744540     0.051% 
                                   2009                     453     687127          9060      13742540     0.066% 
                                   2010                     525     695742         10500      13914840     0.075% 
                                   2011                     654     719161         13080      14383220     0.091% 
                                   2012                     772     756610         15440      15132200     0.102% 
                                   2013                     991     871076         19820      17421520     0.114% 
                                   2014                    1100     873627         22000      17472540     0.126% 
                                   OVERALL 2006-2014        898    1212058         17960      24241160     0.074% 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
273        quit;
5                                                                   The SAS System                                       17:50 Thursday, June 21, 2018

NOTE: The PROCEDURE SQL printed page 4.
NOTE: PROCEDURE SQL used (Total process time):
      real time           6.09 seconds
      cpu time            8.86 seconds
      

274        
275        
276        proc export
277          data = Work.prev
278          outfile = "data\processed\prevalenceAS.csv"
279          dbms = csv
280          replace;
281          delimiter = ",";
282        run;

283         /**********************************************************************
284         *   PRODUCT:   SAS
285         *   VERSION:   9.4
286         *   CREATOR:   External File Interface
287         *   DATE:      21JUN18
288         *   DESC:      Generated SAS Datastep Code
289         *   TEMPLATE SOURCE:  (None Specified.)
290         ***********************************************************************/
291            data _null_;
292            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
293            %let _EFIREC_ = 0;     /* clear export record count macro variable */
294            file 'data\processed\prevalenceAS.csv' delimiter=',' DSD DROPOVER lrecl=32767;
295            if _n_ = 1 then        /* write column names or labels */
296             do;
297               put
298                  "year"
299               ','
300                  "numer5pct"
301               ','
302                  "denom5pct"
303               ','
304                  "numerEstimated"
305               ','
306                  "denomEstimated"
307               ','
308                  "prev"
309               ;
310             end;
311           set  WORK.PREV   end=EFIEOD;
312               format year $17. ;
313               format numer5pct best12. ;
314               format denom5pct best12. ;
315               format numerEstimated best12. ;
316               format denomEstimated best12. ;
317               format prev percent10.3 ;
318             do;
319               EFIOUT + 1;
320               put year $ @;
321               put numer5pct @;
322               put denom5pct @;
323               put numerEstimated @;
324               put denomEstimated @;
325               put prev ;
326               ;
327             end;
328            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
329            if EFIEOD then call symputx('_EFIREC_',EFIOUT);
330            run;

NOTE: The file 'data\processed\prevalenceAS.csv' is:
      Filename=U:\studies\AS\pgms\bchan\data\processed\prevalenceAS.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=21Jun2018:18:02:19,
      Create Time=21Jun2018:18:02:19

NOTE: 11 records were written to the file 'data\processed\prevalenceAS.csv'.
6                                                                   The SAS System                                       17:50 Thursday, June 21, 2018

      The minimum record length was 36.
      The maximum record length was 59.
NOTE: There were 10 observations read from the data set WORK.PREV.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

10 records created in data\processed\prevalenceAS.csv from WORK.PREV.
  
  
NOTE: "data\processed\prevalenceAS.csv" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.23 seconds
      cpu time            0.18 seconds
      

331        
332        
333        
334        
335        ods html close;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           12:08.78
      cpu time            11:43.92
      
