1                                                          The SAS System                               10:54 Wednesday, May 9, 2018

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

WARNING: Unable to copy SASUSER registry to WORK registry. Because of this, you will not see registry customizations during this 
         session.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           6.09 seconds
      cpu time            0.31 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=calculateASPrevalence; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: W:\onenote\references\drug ndcs\sas data
128        footnote "&pgm.";
129        * footnote2 "%sysfunc(datetime(),datetime14.)";
2                                                                   The SAS System                                        10:54 Wednesday, May 9, 2018

130        title1 '--- AS project ---';
131        **********************************************************************;
132        options macrogen mlogic mprint symbolgen;
133        options nomacrogen nomlogic nomprint nosymbolgen;
134        
135        
136        ods html
137          body = "output\&cmt..html"
138          style = Statistical;
NOTE: Writing HTML Body file: output\calculateASPrevalence.html
139        
140        
141        proc sql;
142          create table Work.numerASCohort as
143            select "MPCD"       as database, count(distinct patid) as numerASCohort from UCB.cohortastdmpcd  union corr
144            select "Marketscan" as database, count(distinct patid) as numerASCohort from UCB.cohortastducb   union corr
145            select "Medicare"   as database, count(distinct patid) as numerASCohort from UCB.cohortastd_sabr ;
NOTE: Data set UCB.COHORTASTDMPCD is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTDUCB is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Table WORK.NUMERASCOHORT created, with 3 rows and 2 columns.

146          select * from Work.numerASCohort;
                                                                  --- AS project ---                                  10:54 Wednesday, May 9, 2018   1

                                                                                  numer
                                                               database        ASCohort
                                                               ------------------------
                                                               MPCD                5078
                                                               Marketscan         22625
                                                               Medicare           35349
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
147        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           2.04 seconds
      cpu time            0.15 seconds
      

148        
149        
150        /*
151        Denominator
152        12 months of enrollment during calendar year
153         */
154        %let varlist = patid, enr_start_date, enr_end_date, intck("month", calculated date1, calculated date2) + 1 as monthsEnrolled;
155        %let where = calculated monthsEnrolled = 12;
156        proc sql;
157          create table Work.denom1 as
158            select distinct 2006 as year, max(enr_start_date, "01JAN2006"D) format = mmddyy10. as date1, min("31DEC2006"D, enr_end_date) format =
158      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
159            select distinct 2007 as year, max(enr_start_date, "01JAN2007"D) format = mmddyy10. as date1, min("31DEC2007"D, enr_end_date) format =
159      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
160            select distinct 2008 as year, max(enr_start_date, "01JAN2008"D) format = mmddyy10. as date1, min("31DEC2008"D, enr_end_date) format =
160      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
161            select distinct 2009 as year, max(enr_start_date, "01JAN2009"D) format = mmddyy10. as date1, min("31DEC2009"D, enr_end_date) format =
161      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
162            select distinct 2010 as year, max(enr_start_date, "01JAN2010"D) format = mmddyy10. as date1, min("31DEC2010"D, enr_end_date) format =
162      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
163            select distinct 2011 as year, max(enr_start_date, "01JAN2011"D) format = mmddyy10. as date1, min("31DEC2011"D, enr_end_date) format =
163      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
164            select distinct 2012 as year, max(enr_start_date, "01JAN2012"D) format = mmddyy10. as date1, min("31DEC2012"D, enr_end_date) format =
164      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
165            select distinct 2013 as year, max(enr_start_date, "01JAN2013"D) format = mmddyy10. as date1, min("31DEC2013"D, enr_end_date) format =
165      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
166            select distinct 2014 as year, max(enr_start_date, "01JAN2014"D) format = mmddyy10. as date1, min("31DEC2014"D, enr_end_date) format =
166      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where
167            order by patid, year;
NOTE: Table WORK.DENOM1 created, with 7699865 rows and 7 columns.

168          create table Work.denom2 as
169            select distinct patid, enr_start_date, enr_end_date, intck("month", enr_start_date, enr_end_date) + 1 as monthsEnrolled
170            from stdc5p.std_enrollment
171            where 12 <= calculated monthsEnrolled;
NOTE: Table WORK.DENOM2 created, with 1831369 rows and 4 columns.

172        quit;
NOTE: PROCEDURE SQL used (Total process time):
3                                                                   The SAS System                                        10:54 Wednesday, May 9, 2018

      real time           24.08 seconds
      cpu time            39.00 seconds
      

173        
174        /*
175        Two 720.xx diagnosis codes between 7-365 days apart
176        Both from rheumatologists
177        Both from ambulatory visits
178         */
179        %let varlist = patid, begin_date, dx_type, dx, enc_type, prov_type;
180        %let where = dx_type = "09" & dx like "720%" & enc_type = "AV";
181        proc sql;
182          create table Work.temp1 as
183            select &varlist from stdc5p.std_dx_2006 where &where union corr
184            select &varlist from stdc5p.std_dx_2007 where &where union corr
185            select &varlist from stdc5p.std_dx_2008 where &where union corr
186            select &varlist from stdc5p.std_dx_2009 where &where union corr
187            select &varlist from stdc5p.std_dx_2010 where &where union corr
188            select &varlist from stdc5p.std_dx_2011 where &where union corr
189            select &varlist from stdc5p.std_dx_2012 where &where union corr
190            select &varlist from stdc5p.std_dx_2013 where &where union corr
191            select &varlist from stdc5p.std_dx_2014 where &where
192            order by patid, begin_date;
NOTE: Data set STDC5P.STD_DX_2006 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2007 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2008 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2009 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2010 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2011 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2012 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2013 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2014 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.TEMP1 created, with 373492 rows and 6 columns.

193          select dx, count(*) as n from Work.temp1 group by dx;
                                                                  --- AS project ---                                  10:54 Wednesday, May 9, 2018   2

                                                             DX                         n
                                                             ----------------------------
                                                             720                       11
                                                             7200                   38716
                                                             72001                      1
                                                             72003                      2
                                                             7201                   57421
                                                             72010                      1
                                                             7202                  264516
                                                             7204                       4
                                                             7206                       1
                                                             72060                      1
                                                             7207                       1
                                                             72071                      1
                                                             72079                      2
                                                             7208                       3
                                                             72081                    540
                                                             72089                   1807
                                                             7209                   10460
                                                             72090                      4
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
194        quit;
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           10:39.75
      cpu time            9:24.52
      

195        proc sql;
196          create table Work.temp2 as
197            select distinct
198                   coalesce(A.patid, B.patid) as patid,
199                   year(B.begin_date) as year,
200                   A.begin_date format = mmddyy10. as date1,
201                   B.begin_date format = mmddyy10. as date2,
202                   A.prov_type as prov_type1,
203                   B.prov_type as prov_type2,
204                   int((B.begin_date - C.birth_date) / 365.25) as ageAtASDate
205            from Work.temp1 A inner join
4                                                                   The SAS System                                        10:54 Wednesday, May 9, 2018

206                 Work.temp1 B on (A.patid = B.patid &
207                                  intnx("year", B.begin_date, -1, "sameday") < A.begin_date < B.begin_date - 7) inner join
208                 stdc5p.std_demog_2006_2014 C on (A.patid = C.patid)
209            where (A.prov_type = "66" & B.prov_type = "66");
NOTE: Data set STDC5P.STD_DEMOG_2006_2014 is in a format that is native to another host. Cross Environment Data Access will be used. This will 
      require additional CPU resources and may reduce performance.
NOTE: Table WORK.TEMP2 created, with 65023 rows and 7 columns.

210          create table Work.numer1 as
211            select A.*, B.year
212            from (select patid, min(year) as yearEarliestDiagnosis from Work.temp2 group by patid) A inner join
213                 Work.denom1 B on (A.patid = B.patid & A.yearEarliestDiagnosis <= B.year);
NOTE: Table WORK.NUMER1 created, with 7448 rows and 3 columns.

214          create table Work.numer2 as
215            select A.*
216            from (select patid, min(date2) format = mmddyy10. as dateEarliestDiagnosis from Work.temp2 group by patid) A inner join
217                 Work.denom2 B on (A.patid = B.patid & B.enr_start_date <= A.dateEarliestDiagnosis <= B.enr_end_date);
NOTE: Table WORK.NUMER2 created, with 1615 rows and 2 columns.

218        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           3.83 seconds
      cpu time            5.92 seconds
      

219        
220        /*
221        Prevalence
222         */
223        proc sql;
224          create table Work.prev as
225            select put(coalesce(A.year, B.year), 4.) as year,
226                   A.numer as numer5pct,
227                   B.denom as denom5pct,
228                   A.numer * 20 as numerEstimated,
229                   B.denom * 20 as denomEstimated,
230                   A.numer / B.denom format = percent10.3 as prev
231            from (select year, count(distinct patid) as numer from Work.numer1 group by year) A inner join
232                 (select year, count(distinct patid) as denom from Work.denom1 group by year) B on (A.year = B.year)
233            union corr
234            select "OVERALL 2006-2014" as year,
235                   A.numer as numer5pct,
236                   B.denom as denom5pct,
237                   A.numer * 20 as numerEstimated,
238                   B.denom * 20 as denomEstimated,
239                   A.numer / B.denom format = percent10.3 as prev
240            from (select count(distinct patid) as numer from Work.numer2) A,
241                 (select count(distinct patid) as denom from Work.denom2) B;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK.PREV created, with 10 rows and 6 columns.

242          select * from Work.prev;
                                                                  --- AS project ---                                  10:54 Wednesday, May 9, 2018   3

                                                                                   numer         denom
                                   year               numer5pct  denom5pct     Estimated     Estimated        prev
                                   -------------------------------------------------------------------------------
                                   2006                     145     501031          2900      10020620     0.029% 
                                   2007                     391     816970          7820      16339400     0.048% 
                                   2008                     527     825445         10540      16508900     0.064% 
                                   2009                     668     830967         13360      16619340     0.080% 
                                   2010                     793     844528         15860      16890560     0.094% 
                                   2011                     950     879996         19000      17599920     0.108% 
                                   2012                    1103     921994         22060      18439880     0.120% 
                                   2013                    1384    1032827         27680      20656540     0.134% 
                                   2014                    1487    1046107         29740      20922140     0.142% 
                                   OVERALL 2006-2014       1615    1734873         32300      34697460     0.093% 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
243        quit;
NOTE: The PROCEDURE SQL printed page 3.
NOTE: PROCEDURE SQL used (Total process time):
      real time           7.37 seconds
      cpu time            10.88 seconds
      

244        
245        
246        proc export
247          data = Work.prev
248          outfile = "data\processed\prevalenceAS.csv"
249          dbms = csv
250          replace;
251          delimiter = ",";
252        run;

253         /**********************************************************************
254         *   PRODUCT:   SAS
5                                                                   The SAS System                                        10:54 Wednesday, May 9, 2018

255         *   VERSION:   9.4
256         *   CREATOR:   External File Interface
257         *   DATE:      09MAY18
258         *   DESC:      Generated SAS Datastep Code
259         *   TEMPLATE SOURCE:  (None Specified.)
260         ***********************************************************************/
261            data _null_;
262            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
263            %let _EFIREC_ = 0;     /* clear export record count macro variable */
264            file 'data\processed\prevalenceAS.csv' delimiter=',' DSD DROPOVER lrecl=32767;
265            if _n_ = 1 then        /* write column names or labels */
266             do;
267               put
268                  "year"
269               ','
270                  "numer5pct"
271               ','
272                  "denom5pct"
273               ','
274                  "numerEstimated"
275               ','
276                  "denomEstimated"
277               ','
278                  "prev"
279               ;
280             end;
281           set  WORK.PREV   end=EFIEOD;
282               format year $17. ;
283               format numer5pct best12. ;
284               format denom5pct best12. ;
285               format numerEstimated best12. ;
286               format denomEstimated best12. ;
287               format prev percent10.3 ;
288             do;
289               EFIOUT + 1;
290               put year $ @;
291               put numer5pct @;
292               put denom5pct @;
293               put numerEstimated @;
294               put denomEstimated @;
295               put prev ;
296               ;
297             end;
298            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
299            if EFIEOD then call symputx('_EFIREC_',EFIOUT);
300            run;

NOTE: The file 'data\processed\prevalenceAS.csv' is:
      Filename=U:\studies\AS\pgms\bchan\data\processed\prevalenceAS.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=09May2018:11:06:02,
      Create Time=09May2018:10:48:13

NOTE: 11 records were written to the file 'data\processed\prevalenceAS.csv'.
      The minimum record length was 36.
      The maximum record length was 59.
NOTE: There were 10 observations read from the data set WORK.PREV.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

10 records created in data\processed\prevalenceAS.csv from WORK.PREV.
  
  
NOTE: "data\processed\prevalenceAS.csv" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.29 seconds
      cpu time            0.15 seconds
      

301        
6                                                                   The SAS System                                        10:54 Wednesday, May 9, 2018

302        
303        
304        
305        ods html close;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           11:39.86
      cpu time            10:21.53
      
