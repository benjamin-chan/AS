1                                         The SAS System                12:35 Friday, May 18, 2018

NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           4.78 seconds
      cpu time            0.31 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=calculateASPrevalence; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: W:\onenote\references\drug ndcs\sas data
128        footnote "&pgm.";
129        * footnote2 "%sysfunc(datetime(),datetime14.)";
130        title1 '--- AS project ---';
131        **********************************************************************;
132        options macrogen mlogic mprint symbolgen;
133        options nomacrogen nomlogic nomprint nosymbolgen;
134        
135        
136        ods html
2                                                                   The SAS System                                          12:35 Friday, May 18, 2018

137          body = "output\&cmt..html"
138          style = Statistical;
NOTE: Writing HTML Body file: output\calculateASPrevalence.html
139        
140        
141        proc sql;
142          create table Work.numerASCohort as
143            select "MPCD"       as database, count(distinct patid) as numerASCohort from UCB.cohortastdmpcd  union corr
144            select "Marketscan" as database, count(distinct patid) as numerASCohort from UCB.cohortastducb   union corr
145            select "Medicare"   as database, count(distinct patid) as numerASCohort from UCB.cohortastd_sabr ;
NOTE: Data set UCB.COHORTASTDMPCD is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTDUCB is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Table WORK.NUMERASCOHORT created, with 3 rows and 2 columns.

146          select * from Work.numerASCohort;
                                                                  --- AS project ---                                    12:35 Friday, May 18, 2018   1

                                                                                  numer
                                                               database        ASCohort
                                                               ------------------------
                                                               MPCD                5078
                                                               Marketscan         22625
                                                               Medicare           35349
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
147        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.43 seconds
      cpu time            0.20 seconds
      

148        
149        
150        /*
151        Denominator
152        12 months of continuous enrollment
153        6+ months enrollment during calendar year
154         */
155        %let varlist = patid, enr_start_date, enr_end_date, intck("month", calculated date1, calculated date2) + 1 as monthsEnrolled;
156        %let where = 6 <= calculated monthsEnrolled & 12 <= intck("month", enr_start_date, enr_end_date) + 1;
157        proc sql;
158          create table Work.denom1 as
159            select distinct 2006 as year, max(enr_start_date, "01JAN2006"D) format = mmddyy10. as date1, min("31DEC2006"D, enr_end_date) format =
159      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
160            select distinct 2007 as year, max(enr_start_date, "01JAN2007"D) format = mmddyy10. as date1, min("31DEC2007"D, enr_end_date) format =
160      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
161            select distinct 2008 as year, max(enr_start_date, "01JAN2008"D) format = mmddyy10. as date1, min("31DEC2008"D, enr_end_date) format =
161      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
162            select distinct 2009 as year, max(enr_start_date, "01JAN2009"D) format = mmddyy10. as date1, min("31DEC2009"D, enr_end_date) format =
162      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
163            select distinct 2010 as year, max(enr_start_date, "01JAN2010"D) format = mmddyy10. as date1, min("31DEC2010"D, enr_end_date) format =
163      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
164            select distinct 2011 as year, max(enr_start_date, "01JAN2011"D) format = mmddyy10. as date1, min("31DEC2011"D, enr_end_date) format =
164      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
165            select distinct 2012 as year, max(enr_start_date, "01JAN2012"D) format = mmddyy10. as date1, min("31DEC2012"D, enr_end_date) format =
165      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
166            select distinct 2013 as year, max(enr_start_date, "01JAN2013"D) format = mmddyy10. as date1, min("31DEC2013"D, enr_end_date) format =
166      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where union corr
167            select distinct 2014 as year, max(enr_start_date, "01JAN2014"D) format = mmddyy10. as date1, min("31DEC2014"D, enr_end_date) format =
167      ! mmddyy10. as date2, &varlist from stdc5p.std_enrollment where &where
168            order by patid, year;
NOTE: Table WORK.DENOM1 created, with 8633842 rows and 7 columns.

169          create table Work.denom2 as
170            select distinct patid, enr_start_date, enr_end_date, intck("month", enr_start_date, enr_end_date) + 1 as monthsEnrolled
171            from stdc5p.std_enrollment
172            where 12 <= calculated monthsEnrolled;
NOTE: Table WORK.DENOM2 created, with 1831369 rows and 4 columns.

173        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           33.04 seconds
      cpu time            1:14.00
      

174        
175        /*
3                                                                   The SAS System                                          12:35 Friday, May 18, 2018

176        Two 720.xx diagnosis codes between 7-365 days apart
177        Both from rheumatologists
178        Both from ambulatory visits
179         */
180        %let varlist = patid, begin_date, dx_type, dx, enc_type, prov_type;
181        %let where = dx_type = "09" & dx like "720%" & enc_type = "AV";
182        proc sql;
183          create table Work.temp1 as
184            select &varlist from stdc5p.std_dx_2006 where &where union corr
185            select &varlist from stdc5p.std_dx_2007 where &where union corr
186            select &varlist from stdc5p.std_dx_2008 where &where union corr
187            select &varlist from stdc5p.std_dx_2009 where &where union corr
188            select &varlist from stdc5p.std_dx_2010 where &where union corr
189            select &varlist from stdc5p.std_dx_2011 where &where union corr
190            select &varlist from stdc5p.std_dx_2012 where &where union corr
191            select &varlist from stdc5p.std_dx_2013 where &where union corr
192            select &varlist from stdc5p.std_dx_2014 where &where
193            order by patid, begin_date;
NOTE: Data set STDC5P.STD_DX_2006 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2007 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2008 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2009 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2010 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2011 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2012 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2013 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set STDC5P.STD_DX_2014 is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.TEMP1 created, with 373492 rows and 6 columns.

194          select dx, count(*) as n from Work.temp1 group by dx;
                                                                  --- AS project ---                                    12:35 Friday, May 18, 2018   2

                                                             DX                         n
                                                             ----------------------------
                                                             720                       11
                                                             7200                   38716
                                                             72001                      1
                                                             72003                      2
                                                             7201                   57421
                                                             72010                      1
                                                             7202                  264516
                                                             7204                       4
                                                             7206                       1
                                                             72060                      1
                                                             7207                       1
                                                             72071                      1
                                                             72079                      2
                                                             7208                       3
                                                             72081                    540
                                                             72089                   1807
                                                             7209                   10460
                                                             72090                      4
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
195        quit;
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           11:15.57
      cpu time            9:44.17
      

196        proc sql;
197          create table Work.temp2 as
198            select distinct
199                   coalesce(A.patid, B.patid) as patid,
200                   year(B.begin_date) as year,
201                   A.begin_date format = mmddyy10. as date1,
202                   B.begin_date format = mmddyy10. as date2,
203                   A.prov_type as prov_type1,
204                   B.prov_type as prov_type2,
205                   int((B.begin_date - C.birth_date) / 365.25) as ageAtASDate
206            from Work.temp1 A inner join
207                 Work.temp1 B on (A.patid = B.patid &
208                                  intnx("year", B.begin_date, -1, "sameday") < A.begin_date < B.begin_date - 7) inner join
209                 stdc5p.std_demog_2006_2014 C on (A.patid = C.patid)
210            where (A.prov_type = "66" & B.prov_type = "66");
NOTE: Data set STDC5P.STD_DEMOG_2006_2014 is in a format that is native to another host. Cross Environment Data Access will be used. This will 
      require additional CPU resources and may reduce performance.
4                                                                   The SAS System                                          12:35 Friday, May 18, 2018

NOTE: Table WORK.TEMP2 created, with 65023 rows and 7 columns.

211          create table Work.numer1 as
212            select A.*, B.year
213            from (select patid, min(year) as yearEarliestDiagnosis from Work.temp2 group by patid) A inner join
214                 Work.denom1 B on (A.patid = B.patid & A.yearEarliestDiagnosis <= B.year);
NOTE: Table WORK.NUMER1 created, with 7919 rows and 3 columns.

215          create table Work.numer2 as
216            select A.*
217            from (select patid, min(date2) format = mmddyy10. as dateEarliestDiagnosis from Work.temp2 group by patid) A inner join
218                 Work.denom2 B on (A.patid = B.patid & B.enr_start_date <= A.dateEarliestDiagnosis <= B.enr_end_date);
NOTE: Table WORK.NUMER2 created, with 1615 rows and 2 columns.

219        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           4.07 seconds
      cpu time            6.03 seconds
      

220        
221        /*
222        Prevalence
223         */
224        proc sql;
225          create table Work.prev as
226            select put(coalesce(A.year, B.year), 4.) as year,
227                   A.numer as numer5pct,
228                   B.denom as denom5pct,
229                   A.numer * 20 as numerEstimated,
230                   B.denom * 20 as denomEstimated,
231                   A.numer / B.denom format = percent10.3 as prev
232            from (select year, count(distinct patid) as numer from Work.numer1 group by year) A inner join
233                 (select year, count(distinct patid) as denom from Work.denom1 group by year) B on (A.year = B.year)
234            union corr
235            select "OVERALL 2006-2014" as year,
236                   A.numer as numer5pct,
237                   B.denom as denom5pct,
238                   A.numer * 20 as numerEstimated,
239                   B.denom * 20 as denomEstimated,
240                   A.numer / B.denom format = percent10.3 as prev
241            from (select count(distinct patid) as numer from Work.numer2) A,
242                 (select count(distinct patid) as denom from Work.denom2) B;
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK.PREV created, with 10 rows and 6 columns.

243          select * from Work.prev;
                                                                  --- AS project ---                                    12:35 Friday, May 18, 2018   3

                                                                                   numer         denom
                                   year               numer5pct  denom5pct     Estimated     Estimated        prev
                                   -------------------------------------------------------------------------------
                                   2006                     229     830317          4580      16606340     0.028% 
                                   2007                     417     896578          8340      17931560     0.047% 
                                   2008                     563     900910         11260      18018200     0.062% 
                                   2009                     702     904231         14040      18084620     0.078% 
                                   2010                     830     921241         16600      18424820     0.090% 
                                   2011                    1009     956052         20180      19121040     0.106% 
                                   2012                    1169    1003251         23380      20065020     0.117% 
                                   2013                    1449    1123450         28980      22469000     0.129% 
                                   2014                    1551    1097812         31020      21956240     0.141% 
                                   OVERALL 2006-2014       1615    1734873         32300      34697460     0.093% 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
244        quit;
NOTE: The PROCEDURE SQL printed page 3.
NOTE: PROCEDURE SQL used (Total process time):
      real time           6.80 seconds
      cpu time            10.73 seconds
      

245        
246        
247        proc export
248          data = Work.prev
249          outfile = "data\processed\prevalenceAS.csv"
250          dbms = csv
251          replace;
252          delimiter = ",";
253        run;

254         /**********************************************************************
255         *   PRODUCT:   SAS
256         *   VERSION:   9.4
257         *   CREATOR:   External File Interface
258         *   DATE:      18MAY18
259         *   DESC:      Generated SAS Datastep Code
260         *   TEMPLATE SOURCE:  (None Specified.)
261         ***********************************************************************/
5                                                                   The SAS System                                          12:35 Friday, May 18, 2018

262            data _null_;
263            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
264            %let _EFIREC_ = 0;     /* clear export record count macro variable */
265            file 'data\processed\prevalenceAS.csv' delimiter=',' DSD DROPOVER lrecl=32767;
266            if _n_ = 1 then        /* write column names or labels */
267             do;
268               put
269                  "year"
270               ','
271                  "numer5pct"
272               ','
273                  "denom5pct"
274               ','
275                  "numerEstimated"
276               ','
277                  "denomEstimated"
278               ','
279                  "prev"
280               ;
281             end;
282           set  WORK.PREV   end=EFIEOD;
283               format year $17. ;
284               format numer5pct best12. ;
285               format denom5pct best12. ;
286               format numerEstimated best12. ;
287               format denomEstimated best12. ;
288               format prev percent10.3 ;
289             do;
290               EFIOUT + 1;
291               put year $ @;
292               put numer5pct @;
293               put denom5pct @;
294               put numerEstimated @;
295               put denomEstimated @;
296               put prev ;
297               ;
298             end;
299            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
300            if EFIEOD then call symputx('_EFIREC_',EFIOUT);
301            run;

NOTE: The file 'data\processed\prevalenceAS.csv' is:
      Filename=U:\studies\AS\pgms\bchan\data\processed\prevalenceAS.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=18May2018:12:47:39,
      Create Time=18May2018:12:47:39

NOTE: 11 records were written to the file 'data\processed\prevalenceAS.csv'.
      The minimum record length was 36.
      The maximum record length was 59.
NOTE: There were 10 observations read from the data set WORK.PREV.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.00 seconds
      

10 records created in data\processed\prevalenceAS.csv from WORK.PREV.
  
  
NOTE: "data\processed\prevalenceAS.csv" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.42 seconds
      cpu time            0.14 seconds
      

302        
303        
304        
305        
306        ods html close;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
6                                                                   The SAS System                                          12:35 Friday, May 18, 2018

      real time           12:17.72
      cpu time            11:16.10
      
