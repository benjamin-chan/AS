1                                                          The SAS System                              11:11 Tuesday, April 17, 2018

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

WARNING: Unable to copy SASUSER registry to WORK registry. Because of this, you will not see registry customizations during this 
         session.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           4.72 seconds
      cpu time            0.42 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=calculateASPrevalence; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: h:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: W:\onenote\references\drug ndcs\sas data
127        footnote "&pgm.";
128        * footnote2 "%sysfunc(datetime(),datetime14.)";
2                                                                   The SAS System                                       11:11 Tuesday, April 17, 2018

129        title1 '--- AS project ---';
130        **********************************************************************;
131        options macrogen mlogic mprint symbolgen;
132        options nomacrogen nomlogic nomprint nosymbolgen;
133        
134        
135        ods html
136          body = "output\&cmt..html"
137          style = Statistical;
NOTE: Writing HTML Body file: output\calculateASPrevalence.html
138        
139        
140        
141        
142        proc sql;
143        /* Denominator enrolled at any time during year */
144          create table Work.denom as
145            select "Medicare" as database, 2006 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
145      ! <= 2006 <= year(enr_end_date) union corr
146            select "Medicare" as database, 2007 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
146      ! <= 2007 <= year(enr_end_date) union corr
147            select "Medicare" as database, 2008 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
147      ! <= 2008 <= year(enr_end_date) union corr
148            select "Medicare" as database, 2009 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
148      ! <= 2009 <= year(enr_end_date) union corr
149            select "Medicare" as database, 2010 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
149      ! <= 2010 <= year(enr_end_date) union corr
150            select "Medicare" as database, 2011 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
150      ! <= 2011 <= year(enr_end_date) union corr
151            select "Medicare" as database, 2012 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
151      ! <= 2012 <= year(enr_end_date) union corr
152            select "Medicare" as database, 2013 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
152      ! <= 2013 <= year(enr_end_date) union corr
153            select "Medicare" as database, 2014 as year, count(distinct patid) * 20 as denom from stdc5p.std_enrollment where year(enr_start_date)
153      ! <= 2014 <= year(enr_end_date) ;
NOTE: Table WORK.DENOM created, with 9 rows and 3 columns.

154        /* Numerator is entered AS cohort on or before year & enrolled at any time during year */
155          create table Work.numer as
156            select "Medicare" as database, 2006 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2006 &
156      ! year(enr_start_date) <= 2006 <= year(enr_end_date) union corr
157            select "Medicare" as database, 2007 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2007 &
157      ! year(enr_start_date) <= 2007 <= year(enr_end_date) union corr
158            select "Medicare" as database, 2008 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2008 &
158      ! year(enr_start_date) <= 2008 <= year(enr_end_date) union corr
159            select "Medicare" as database, 2009 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2009 &
159      ! year(enr_start_date) <= 2009 <= year(enr_end_date) union corr
160            select "Medicare" as database, 2010 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2010 &
160      ! year(enr_start_date) <= 2010 <= year(enr_end_date) union corr
161            select "Medicare" as database, 2011 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2011 &
161      ! year(enr_start_date) <= 2011 <= year(enr_end_date) union corr
162            select "Medicare" as database, 2012 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2012 &
162      ! year(enr_start_date) <= 2012 <= year(enr_end_date) union corr
163            select "Medicare" as database, 2013 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2013 &
163      ! year(enr_start_date) <= 2013 <= year(enr_end_date) union corr
164            select "Medicare" as database, 2014 as year, count(distinct patid) as numer from UCB.cohortastd_sabr where year(asDate) <= 2014 &
164      ! year(enr_start_date) <= 2014 <= year(enr_end_date) ;
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
3                                                                   The SAS System                                       11:11 Tuesday, April 17, 2018

      additional CPU resources and may reduce performance.
NOTE: Data set UCB.COHORTASTD_SABR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.NUMER created, with 9 rows and 3 columns.

165          create table Work.prev as
166            select A.database, A.year, A.numer, B.denom, A.numer / B.denom as prev
167            from Work.numer A inner join
168                 Work.denom B on (A.database = B.database & A.year = B.year);
NOTE: Table WORK.PREV created, with 9 rows and 5 columns.

169          select * from Work.prev;
                                                                  --- AS project ---                                 11:11 Tuesday, April 17, 2018   1

                                                   database      year     numer     denom      prev
                                                   ------------------------------------------------
                                                   Medicare      2006      4805  19395780  0.000248
                                                   Medicare      2007      7253  19778100  0.000367
                                                   Medicare      2008      9260  19767460  0.000468
                                                   Medicare      2009     10796  19742060  0.000547
                                                   Medicare      2010     12751  20104940  0.000634
                                                   Medicare      2011     15003  20818580  0.000721
                                                   Medicare      2012     18474  21762000  0.000849
                                                   Medicare      2013     23896  24424380  0.000978
                                                   Medicare      2014     27016  25168460  0.001073
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                              calculateASPrevalence.sas
170        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           10.43 seconds
      cpu time            23.91 seconds
      

171        
172        
173        proc export
174          data = Work.prev
175          outfile = "data\processed\prevalenceAS.csv"
176          dbms = csv
177          replace;
178          delimiter = ",";
179        run;

180         /**********************************************************************
181         *   PRODUCT:   SAS
182         *   VERSION:   9.4
183         *   CREATOR:   External File Interface
184         *   DATE:      17APR18
185         *   DESC:      Generated SAS Datastep Code
186         *   TEMPLATE SOURCE:  (None Specified.)
187         ***********************************************************************/
188            data _null_;
189            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
190            %let _EFIREC_ = 0;     /* clear export record count macro variable */
191            file 'data\processed\prevalenceAS.csv' delimiter=',' DSD DROPOVER lrecl=32767;
192            if _n_ = 1 then        /* write column names or labels */
193             do;
194               put
195                  "database"
196               ','
197                  "year"
198               ','
199                  "numer"
200               ','
201                  "denom"
202               ','
203                  "prev"
204               ;
205             end;
206           set  WORK.PREV   end=EFIEOD;
207               format database $8. ;
208               format year best12. ;
209               format numer best12. ;
210               format denom best12. ;
211               format prev best12. ;
212             do;
213               EFIOUT + 1;
4                                                                   The SAS System                                       11:11 Tuesday, April 17, 2018

214               put database $ @;
215               put year @;
216               put numer @;
217               put denom @;
218               put prev ;
219               ;
220             end;
221            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
222            if EFIEOD then call symputx('_EFIREC_',EFIOUT);
223            run;

NOTE: The file 'data\processed\prevalenceAS.csv' is:
      Filename=U:\studies\AS\pgms\bchan\data\processed\prevalenceAS.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=17Apr2018:11:12:08,
      Create Time=17Apr2018:11:06:34

NOTE: 10 records were written to the file 'data\processed\prevalenceAS.csv'.
      The minimum record length was 30.
      The maximum record length was 41.
NOTE: There were 9 observations read from the data set WORK.PREV.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

9 records created in data\processed\prevalenceAS.csv from WORK.PREV.
  
  
NOTE: "data\processed\prevalenceAS.csv" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.25 seconds
      cpu time            0.17 seconds
      

224        
225        
226        
227        
228        ods html close;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           28.31 seconds
      cpu time            25.03 seconds
      
