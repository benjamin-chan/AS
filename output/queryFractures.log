1                                                          The SAS System                           06:53 Friday, September 29, 2017

NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M1) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70058223.
NOTE: This session is executing on the W32_ES08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 13.1
      SAS/ETS 13.1
      SAS/OR 13.1
      SAS/IML 13.1
      SAS/QC 13.1

NOTE: Additional host information:

 W32_ES08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any of the shared folders.

 


NOTE: SAS initialization used:
      real time           0.77 seconds
      cpu time            0.14 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=queryFractures; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: h:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
92         footnote "&pgm.";
93         * footnote2 "%sysfunc(datetime(),datetime14.)";
94         title1 '--- AS project ---';
95         **********************************************************************;
96         options macrogen mlogic mprint symbolgen;
97         options nomacrogen nomlogic nomprint nosymbolgen;
98         
99         
100        ods html
101          body = "output\&cmt..html"
102          style = Statistical;
NOTE: Writing HTML Body file: output\queryFractures.html
2                                                                   The SAS System                                    06:53 Friday, September 29, 2017

103        
104        
105        /*
106        FRACTURES
107        
108        See "ALGORITHMS TO ENHANCE SPECIFICITY OF FRACTURE IDENTIFICATION_ 100316.docx"
109        
110        Adapted from Lang's code in "001_fx_data.sas"
111        
112        
113        From: Chen, Lang [mailto:langchen@uabmc.edu]
114        Sent: Monday, July 24, 2017 8:56 AM
115        To: Benjamin Chan <chanb@ohsu.edu>
116        Subject: RE: fracture identification algorithm
117        
118        Here it is.
119        For 001_fx_data, find all fx related claim and run the algorithm.
120        Please ignore any code after line 476
121        Modify code from line 1 -50
122        
123        For 002_fx_epi_data
124        Define fx episode.
125        
126        Final output data is fx_dgns_&firstyr._&lastyr._4. Please let me if you have any questions.
127         */
128        
129        
130        /*
131        START OF 001_fx_data.sas
132         */
133        
134        
135        /*Assign "Broad" fracture site (fx_site) for all ICD9 diagnoses, outputting separately, so some records are cloned, then combining into one
135      !  file */
136        /*No longer using matched trauma files here*/
137        
138        %macro comballfxdgns;
139            data fx_dgns;
140                set UCB.tempFracDxMPCD (where = (diagCodeType = "Fracture code"))
141                    UCB.tempFracDxUCB (where = (diagCodeType = "Fracture code"))
142                    UCB.tempFracDxSABR (where = (diagCodeType = "Fracture code"));
143                    length fx_site $30 ;
144                    fx_site = '';
145                    if strip(DX) in: ('800' '801' '802' '803' '804') then           do; fx_site='(800-804) skull/face'; output; end;
146                    if strip(DX) in: ('805', '806') or strip(DX)='73313' then       do; fx_site='(805, 806, 73313) spine'; output; end;
147                    if strip(DX) in: ('807') then                                           do; fx_site='(807) rib/sternum/trachea'; output; end;
148                    if strip(DX) in: ('808') then                                           do; fx_site='(808) pelvis'; output; end;
149                    if strip(DX) in: ('809') then                                           do; fx_site='(809) trunk bones'; output; end;
150                    if strip(DX) in: ('810') then                                           do; fx_site='(810) clavicle'; output; end;
151                    if strip(DX) in: ('811') then                                           do; fx_site='(811) scapula'; output; end;
152                    if strip(DX) in: ('812') or strip(DX)='73311' then              do; fx_site='(812, 73311) humerus'; output; end;
153                    if strip(DX) in: ('813') or strip(DX)='73312' then              do; fx_site='(813, 73312) radius_ulna'; output; end;
154                    if strip(DX) in: ('814') then                                           do; fx_site='(814) carpal'; output; end;
155                    if strip(DX) in: ('815' '816' '817') then                           do; fx_site='(815-817) hand/fingers'; output; end;
156                    if strip(DX) in: ('818' '819') then                                     do; fx_site='(818-819) arms mult'; output; end;
157                    if strip(DX) in: ('820') or strip(DX) = '73314' then                do; fx_site='(820, 73314) hip'; output; end;
158                    if strip(DX) in: ('821') or strip(DX)='73315' then              do; fx_site='(821, 73315) femur'; output; end;
159                    if strip(DX) in: ('822') then                                           do; fx_site='(822) patella'; output; end;
160                    if strip(DX) in: ('823') or strip(DX)='73316' then              do; fx_site='(823, 73316) tib_fib'; output; end;
161                    if strip(DX) in: ('824') then                                           do; fx_site='(824) ankle'; output; end;
162                    if strip(DX) in: ('825') then                                           do; fx_site='(825) tarsal_metatarsal'; output; end;
163                    if strip(DX) in: ('826') then                                           do; fx_site='(826) foot_phalanges'; output; end;
164                    if strip(DX) in: ('827') then                                           do; fx_site='(827) lower_limb'; output; end;
165                    if strip(DX) in: ('828') then                                           do; fx_site='(828) legs+arm/rib'; output; end;
166                    if strip(DX) in: ('829') then                                           do; fx_site='(829) fx_nos'; output; end;
167                    if strip(DX) in ('73310' '73319' '7331') then                 do; fx_site='(7331) pathologic nos/nec'; output; end;
168            data fx_excare;
169                set UCB.tempFracDxMPCD (where = (diagCodeType = "Extended care code"))
170                    UCB.tempFracDxUCB (where = (diagCodeType = "Extended care code"))
171                    UCB.tempFracDxSABR (where = (diagCodeType = "Extended care code"));
172                    length fx_site $30 ;
173                    fx_site = '';
3                                                                   The SAS System                                    06:53 Friday, September 29, 2017

174                    /*Expanded Diagnosis Codes - Fracture Aftercare Codes*/
175                    if strip(DX) in ('V5410' 'V5420') then                          do; fx_site='(812, 73311) humerus'; output;
176                                                                                                     fx_site='(813, 73312) radius_ulna'; output;
176      ! end;
177                    if strip(DX) in ('V5411' 'V5421') then                          do; fx_site='(812, 73311) humerus'; output; end;
178                    if strip(DX) in ('V5412' 'V5422') then                          do; fx_site='(813, 73312) radius_ulna'; output;
179                                                                                                     fx_site='(814) carpal'; output; end;
180                    if strip(DX) in ('V5413' 'V5423') then                          do; fx_site='(820, 73314) hip'; output; end;
181                    if strip(DX) in ('V5414' 'V5424') then                          do; fx_site='(820, 73314) hip'; output;
182                                                                                                     fx_site='(821, 73315) femur'; output;
183                                                                                                     fx_site='(822) patella'; output;
184                                                                                                     fx_site='(824) ankle'; output;
185                                                                                                     fx_site='(823, 73316) tib_fib'; output; end;
186                    if strip(DX) in ('V5415' 'V5425') then                          do; fx_site='(820, 73314) hip'; output;
187                                                                                                     fx_site='(821, 73315) femur'; output;
188                                                                                                     fx_site='(822) patella'; output; end;
189                    if strip(DX) in ('V5416' 'V5426') then                          do; fx_site='(824) ankle'; output;
190                                                                                                     fx_site='(822) patella'; output;
191                                                                                                     fx_site='(823, 73316) tib_fib'; output; end;
192                    if strip(DX) in ('V5417' 'V5427') then                          do; fx_site='(805, 806, 73313) spine'; output; end;
193                    if strip(DX) in: ('V542') then                                       do; fx_site='(7331) pathologic nos/nec'; output; end;
194                    if strip(DX) in: ('V541') then                                       do; fx_site='(829) fx_nos'; output; end;
195            run;
196        
197            /* proc sort data=fx_dgns; by patid BEGIN_DATE fx_site; run;
198            proc sort data=fx_excare; by patid BEGIN_DATE fx_site; run; */
199        %mend;
200        %comballfxdgns;
ERROR: File UCB.TEMPFRACDXMPCD.DATA does not exist.
ERROR: File UCB.TEMPFRACDXUCB.DATA does not exist.
ERROR: File UCB.TEMPFRACDXSABR.DATA does not exist.

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      200:82    200:207   200:239   200:81    200:219   200:106   200:236   200:108   200:234   200:8     200:108   200:133   200:237   200:111
      200:242   200:119   200:144   200:244   200:19    200:117   200:243   200:19    200:119   200:243   200:130   200:8     200:137   200:23
      200:148   
NOTE: The SAS System stopped processing this step because of errors.
NOTE: SAS set option OBS=0 and will continue to check statements. This might cause NOTE: No observations in data set.
WARNING: The data set WORK.FX_DGNS may be incomplete.  When this step was stopped there were 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      


ERROR: File UCB.TEMPFRACDXMPCD.DATA does not exist.
ERROR: File UCB.TEMPFRACDXUCB.DATA does not exist.
ERROR: File UCB.TEMPFRACDXSABR.DATA does not exist.

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      200:98    200:166   200:36    200:36    200:157   200:69    200:36    200:161   200:36    200:171   
NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.FX_EXCARE may be incomplete.  When this step was stopped there were 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

201        
202        /*Now, assign a more specific fracture site (e.g., closed, other) (site) that is used in the CQ algorithms*/
203        /*Since Expanded Diagnosis Codes (V Codes) apply to sub-categories of each broad fracture site, clone records for these so they appear in
203      ! both places*/
204        
205        data fx_dgns_2;
206            set fx_dgns;
207        
208            length site $30;
209        
210            site="";
211        
212            *Spine-closed and Spine-other;
213            if fx_site='(805, 806, 73313) spine' then
4                                                                   The SAS System                                    06:53 Friday, September 29, 2017

214                do;
215                    site = 'spine_cls'; /*Includes V Codes and 73313 here*/
216                    if substr(strip(DX),1,3) in ('805' '806') and substr(strip(DX),1,4) ^in ('8050', '8052', '8054', '8058') then
217                        site = 'spine_oth';
218                end;
219        
220            *Pelvis-closed and Pelvis-other... No V Codes;
221            if fx_site='(808) pelvis' then
222                do;
223                    site = 'pelvis_cls';
224                    if substr(strip(DX),1,3)='808' and substr(strip(DX),1,4) ^in ('8080', '8082', '8084', '8088') then
225                        site = 'pelvis_oth';
226                end;
227        
228            *Clavicle-closed and Clavicle-other.... No V Codes;
229            if fx_site='(810) clavicle' then
230                do;
231                    site = 'clv_cls';
232                    if substr(strip(DX),1,3) = '810' and substr(strip(DX),1,4) ^in ('8100') then
233                        site = 'clv_oth';
234                end;
235        
236            *Humerus-closed and Humerus-other;
237            if fx_site='(812, 73311) humerus' then
238                do;
239                    site = 'hmrs_cls'; /*Includes V Codes and 73311 here*/
240                    if substr(strip(DX),1,3)= '812' and substr(strip(DX),1,4) ^in ('8120', '8122', '8124') then
241                        site = 'hmrs_oth';
242                end;
243        
244            *Distal radius/ulna and Radius/ulna-other;
245            if fx_site='(813, 73312) radius_ulna' then
246                do;
247                 site = 'dist4arm'; /*Includes V Codes and 73312 here*/
248                    if substr(strip(DX),1,3) = '813' and substr(strip(DX),1,4) ^in ('8134', '8135') then
249                        site = 'rad_ul_oth';
250                end;
251        
252            *Carpal... V Codes present but only one category;
253            if fx_site='(814) carpal' then
254                do;
255                    site = 'carpal';
256                 end;
257        
258            *Hip-closed and Hip-other;
259            if fx_site='(820, 73314) hip' then
260                    do;
261                    site = 'hip_cls'; /*Includes V Codes and 73314 here*/
262                    if substr(strip(DX),1,3)='820' and substr(strip(DX),1,4) ^in ('8200', '8202', '8208') then
263                        site = 'hip_oth';
264                end;
265        
266            *Other femur-closed and Other femur-other;
267            if fx_site='(821, 73315) femur' then
268                do;
269                    site = 'oth_fem_cls'; /*Includes V Codes and 73315 here*/
270                    if substr(strip(DX),1,3)='821' and substr(strip(DX),1,4) ^in ('8210', '8212') then
271                        site = 'oth_fem_oth';
272                end;
273        
274            *Tib/fib-closed and Tib/fib-other;
275            if fx_site='(823, 73316) tib_fib' then
276                do;
277                    site = 'tib_fib_cls'; /*Includes V Codes and 73316 here*/
278                    if substr(strip(DX),1,3)='823' and substr(strip(DX),1,4) ^in ('8230', '8232', '8238') then
279                        site = 'tib_fib_oth';
280                end;
281        
282            *Ankle... V Codes present but only one category;
283            if fx_site='(824) ankle' then
284                do;
285                    site = 'ankle';
5                                                                   The SAS System                                    06:53 Friday, September 29, 2017

286                end;
287        
288            /*Assign site for other fx_sites that do not have CQ algorithm and thus no sub categories*/
289            if site = "" then do;
290                site = fx_site;
291            end;
292        
293            label site = 'CQ Algorithm Fracture Site (Specific)';
294        
295        run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      216:29   216:72   224:29   224:61   232:29   232:63   240:29   240:62   248:29   248:63   262:29   262:61   270:29   270:61   278:29   278:61
NOTE: The data set WORK.FX_DGNS_2 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

296        
297        /*###########################################################################################################*/
298        /***************************************************Intermediate Fracture Diagnosis File**********************/
299        /*Combine CQ diagnosis files*******************************************************/
300        data fx_dgns_3;
301            set fx_dgns_2
302        /*    fx_excare_*/
303                ;
304        run;

NOTE: The data set WORK.FX_DGNS_3 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

305        
306        proc freq data=fx_dgns_3;
307            tables fx_site site;
308        run;

NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

309        
310        proc sort data=fx_dgns_3;
311            by patid ENCOUNTERID fx_site site;
ERROR: Variable PATID not found.
ERROR: Variable ENCOUNTERID not found.
312        run;

NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
313        
314        
315        /*###########################################################################################################*/
316        /*************************************************************************************************************/
317        /*Look for repair procedures and assign treatment site*******************/
318        /*This code has been updated to include hip/femur replacement with matching diagnosis code, also looked in claim strip(DX) not just primary
318      !  strip(DX)
319        /*Not accepting contiguous sites until later*/
320        /*Excluding procedures from DME files*/
321        /*******************************Select All Spine Imaging Codes from STD Procedure Files for CQ=4/5 algorithms*/
322        
323        %macro fx_prcd;
324            data fx_prcd spine_xray;
325                set UCB.tempFracPxMPCD
326                    UCB.tempFracPxUCB
6                                                                   The SAS System                                    06:53 Friday, September 29, 2017

327                    UCB.tempFracPxSABR;
328        
329                    length tx_site $30;
330                    length HLAT $1;
331        
332                    if strip(px) in ('21300' '21310' '21315' '21320' '21325' '21330' '21335' '21336' '21337' '21338' '21339' '21340' '21343'
332      ! '21344' '21345' '21346' '21347' '21348'
333                                         '21355' '21356' '21360' '21365' '21366' '21385' '21386' '21387' '21390' '21395' '21400' '21401' '21406'
333      ! '21407' '21408' '21421' '21422' '21423'
334                                         '21431' '21432' '21433' '21435' '21436' '21440' '21445' '21450' '21451' '21452' '21453' '21454' '21461'
334      ! '21462' '21465' '21470'
335                                         '62000' '62005' '62010')  and lengthn(strip(px)) = 5 then do;
336                        tx_site='(800-804) skull/face'; output fx_prcd; end;
337        
338                    if strip(px) in ('22305' '22310' '22315' '22318' '22319' '22325' '22326' '22327' '22328' '22520' '22521' '22522' '22523'
338      ! '22524' '22525' '76012' '76013'
339                                         'S2360' 'S2361' 'S2362' 'S2363' '72291' '72292')  and lengthn(strip(px)) = 5 then do;
340                        tx_site = '(805, 806, 73313) spine'; output fx_prcd; end;
341        
342                    if  strip(px) in ('21493' '21494' '21495' '21800' '21805' '21810' '21820' '21825' ) then do;
343                        tx_site='(807) rib/sternum/trachea'; output fx_prcd; end;
344        
345                    if strip(px) in ('27193' '27194' '27215' '27216' '27217' '27218' '27220' '27222' '27226' '27227' '27228')  and
345      ! lengthn(strip(px)) = 5 then do;
346                        tx_site = '(808) pelvis'; output fx_prcd; end;
347        
348                    if strip(px) in ('23500' '23505' '23515')  and lengthn(strip(px)) = 5 then do;
349                        tx_site = '(810) clavicle'; output fx_prcd; end;
350        
351                    if strip(px) in ('23570' '23575' '23585') then do;
352                        tx_site= '(811) scapula'; output fx_prcd; end;
353        
354                    if strip(px) in ('23600' '23605' '23615' '23616' '23620' '23625' '23630' '23665' '24500' '24505' '24515' '24516' '24530'
354      ! '24535' '24538' '24545' '24546' '24560'
355                                 '24565' '24566' '24575' '24576' '24577' '24579' '24582')  and lengthn(strip(px)) = 5 then do;
356                        tx_site = '(812, 73311) humerus'; output fx_prcd; end;
357        
358                    if strip(px) in ('25600' '25605' '25606' '25607' '25608' '25609' '25620' '25650' '25651' '25652')  and lengthn(strip(px)) = 5
358      ! then do;
359                        tx_site = '(813, 73312) radius_ulna'; output fx_prcd; end; /*Procedure codes are the same for both categories*/
360        
361                    if strip(px) in ('24650' '24655' '24665' '24666' '24670' '24675' '24685' '25500' '25505' '25515' '25520' '25525' '25526'
361      ! '25530' '25535' '25545' '25560' '25565'
362                                 '25574' '25575')  and lengthn(strip(px)) = 5 then do;
363                        tx_site = '(813, 73312) radius_ulna'; output fx_prcd; end; /*Procedure codes are the same for both categories*/
364        
365                    if strip(px) in ('25622' '25624' '25628' '25630' '25635' '25645' '25680' '25685')  and lengthn(strip(px)) = 5 then do;
366                        tx_site = '(814) carpal'; output fx_prcd; end;
367        
368                    if strip(px) in ('26600' '26605' '26607' '26608' '26615' '26645' '26650' '26665' '26720' '26725' '26727' '26735' '26740'
368      ! '26742' '26746' '26750' '26755' '26756' '26765' )
369                               and lengthn(strip(px)) = 5 then do;
370                        tx_site='(815-817) hand/fingers'; output fx_prcd; end;
371        
372                    if '27230' <= strip(px) <= '27248' and lengthn(strip(px)) = 5 then do;
373                        tx_site = '(820, 73314) hip'; output fx_prcd; end;
374        
375                    if '27500' <= strip(px) <= '27514'  and lengthn(strip(px)) = 5 then do;
376                        tx_site = '(821, 73315) femur'; output fx_prcd; end;
377        
378                    if strip(px) in ('27520' '27524')  and lengthn(strip(px)) = 5 then do;
379                        tx_site = '(822) patella'; output fx_prcd; end;
380        
381                    if ('27530' <= strip(px) <= '27536' or '27750' <= strip(px) <= '27759' or '27780' <= strip(px) <= '27784' or '27824' <=
381      ! strip(px) <= '27828') and lengthn(strip(px)) = 5  then do;
382                        tx_site = '(823, 73316) tib_fib'; output fx_prcd; end;
383        
384                    if strip(px) in ('27760' '27762' '27766' '27786' '27788' '27792' '27808' '27810' '27814' '27816' '27818' '27822' '27823'
384      ! '28430' '28435' '28436' '28445')  and lengthn(strip(px)) = 5 then do;
385                        tx_site = '(824) ankle'; output fx_prcd; end;
386        
387                    if strip(px) in ('28320' '28322' '28400' '28405' '28406' '28415' '28420' ) and lengthn(strip(px)) = 5 then do;
7                                                                   The SAS System                                    06:53 Friday, September 29, 2017

388                        tx_site='(825) tarsal_metatarsal'; output fx_prcd; end;
389        
390                 /********************************Hip/Femur Additions - must be matched with DGNS to be included*/
391                 /*Hip replacement codes*/
392                    /*Hip*/
393                    if strip(px) in ('27130' '27125') and lengthn(strip(px)) = 5  then do;
394                        HLAT='1'; tx_site = '(820, 73314) hip'; output fx_prcd; end;
395        
396                    /*Codes below are the only ICD9 Procedure Codes that we are using for "repair"*/
397                    if strip(px) in ('8151' '8152') and lengthn(strip(px)) = 4 then do;
398                        HLAT = '1'; tx_site = '(820, 73314) hip'; output fx_prcd; end;
399        
400                    /*Femur repair codes, assigned to both Hip and Femur treatment sites... CHECK - MAYBE WE NEED TO DO THIS THE OTHER WAY AS
400      ! WELL*/
401                    /*Hip*/
402                    if strip(px) in ('7855' '7905' '7915' '7925' '7935' '7965') and lengthn(strip(px)) = 4 then do;
403                        HLAT = '1'; tx_site = '(820, 73314) hip'; output fx_prcd; end;
404        
405                    /*Femur*/
406                    if strip(px) in ('7855' '7905' '7915' '7925' '7935' '7965') and lengthn(strip(px)) = 4 then do;
407                        HLAT = '1'; tx_site = '(821, 73315) femur'; output fx_prcd; end;
408                     /*spine image*/
409                        if '72010' <= strip(px) <= '72159' or '72240' <= strip(px) <= '72285' or strip(px) = '72295' then do;   /*Spine Imaging
409      ! Codes*/
410                        tx_site='(805, 806, 73313) spine';
411                        output spine_xray; end;
412        
413            run;
414        
415            data fx_prcd;
416                set fx_prcd;
417                /*To add laterality info*/
418        /*        array hcpcs{*} hcpcs_1st_mdfr_cd hcpcs_2nd_mdfr_cd hcpcs_3rd_mdfr_cd hcpcs_4th_mdfr_cd ; */
419                if HLAT='1' then do;
420                    repair_right='0'; repair_left='0';
421                end;
422        /*        if HLAT='1' then */
423        /*            do i=1 to dim(hcpcs);*/
424        /*                if hcpcs{i} = 'RT' then repair_right='1';*/
425        /*                else if hcpcs{i} = 'LT' then repair_left='1';*/
426        /*            end;*/
427            run;
428            proc sort data=fx_prcd nodupkey; by patid ENCOUNTERID px_date tx_site; run;
429        
430            data spine_xray;
431                set spine_xray;
432                keep patid px_date tx_site  ENCOUNTERID begin_date;
433            run;
434            proc sort data=spine_xray nodupkey; by patid px_date; run;
435        %mend;
436        %fx_prcd;


ERROR: File UCB.TEMPFRACPXMPCD.DATA does not exist.
ERROR: File UCB.TEMPFRACPXUCB.DATA does not exist.
ERROR: File UCB.TEMPFRACPXSABR.DATA does not exist.

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      436:203   436:21    436:132   436:128   436:248   436:174   436:38    436:141   436:193   436:45    436:174   436:175   436:58    436:166
      436:38    436:251   436:124   436:216   436:98    436:53    436:177   436:210   436:76    436:110   436:219   436:16    436:134   436:169
      436:204   436:239   436:20    436:132   436:46    436:149   436:233   436:130   436:173   436:55    436:96    436:246   436:64    436:204
      436:20    436:169   436:204   436:228   
NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.FX_PRCD may be incomplete.  When this step was stopped there were 0 observations and 3 variables.
WARNING: The data set WORK.SPINE_XRAY may be incomplete.  When this step was stopped there were 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      



8                                                                   The SAS System                                    06:53 Friday, September 29, 2017

NOTE: The data set WORK.FX_PRCD has 0 observations and 5 variables.
WARNING: Data set WORK.FX_PRCD was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

ERROR: Variable PATID not found.
ERROR: Variable ENCOUNTERID not found.
ERROR: Variable PX_DATE not found.

NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



WARNING: The variable patid in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable px_date in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable ENCOUNTERID in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable begin_date in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: The data set WORK.SPINE_XRAY has 0 observations and 1 variables.
WARNING: Data set WORK.SPINE_XRAY was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

ERROR: Variable PATID not found.
ERROR: Variable PX_DATE not found.

NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
437        
438        
439        


440        data trauma (rename=(begin_date=trauma_dt));
441                set UCB.tempFracDxMPCD (where = (diagCodeType = "Trauma code"))
442                    UCB.tempFracDxUCB (where = (diagCodeType = "Trauma code"))
443                    UCB.tempFracDxSABR (where = (diagCodeType = "Trauma code"));
ERROR: File UCB.TEMPFRACDXMPCD.DATA does not exist.
ERROR: File UCB.TEMPFRACDXUCB.DATA does not exist.
ERROR: File UCB.TEMPFRACDXSABR.DATA does not exist.
444        run;

WARNING: The variable begin_date in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.TRAUMA may be incomplete.  When this step was stopped there were 0 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445        proc sort data= trauma(keep=patid trauma_dt) nodupkey; by patid trauma_dt;run;
ERROR: The variable patid in the DROP, KEEP, or RENAME list has never been referenced.
ERROR: The variable trauma_dt in the DROP, KEEP, or RENAME list has never been referenced.
ERROR: No data set open to look up variables.
ERROR: No data set open to look up variables.

NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
446        
9                                                                   The SAS System                                    06:53 Friday, September 29, 2017

447        
448        /*subset the spine xray procedure claim for patients with fx diagnosis code only*/
449        /*so SAS will not run out of memory*/


450        data fx_spine_xray(keep=patid tx_site px_date ENCOUNTERID begin_date);
451        if _n_=1 then do;
452          declare hash hid(dataset:"fx_dgns_3(where=(fx_site='(805, 806, 73313) spine')))", multidata:"N", hashexp:20);
453          rc=hid.defineKey("patid");
454          rc=hid.defineDone();
455        end;
456        set spine_xray;
457        rc=hid.find();
458        if rc=0;
459        run;

WARNING: The variable patid in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable px_date in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable ENCOUNTERID in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable begin_date in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: The data set WORK.FX_SPINE_XRAY has 0 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

460        /*subset the Trauma code for patients with fx diagnosis code only*/
461        /*so SAS will not run out of memory*/
462        data fx_trauma(drop=rc);
463        if _n_=1 then do;
464          declare hash hid(dataset:"fx_dgns_3", multidata:"N", hashexp:20);
465          rc=hid.defineKey("patid");
466          rc=hid.defineDone();
467        end;
468        set trauma;
469        rc=hid.find();
470        if rc=0;
471        run;

NOTE: The data set WORK.FX_TRAUMA has 0 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

472        /************************************Link Fracture Claims (ICD9 Diagnosis) with Repair Claims (CPT/HCPCS, some ICD9 procedure
472      ! code)***************/
473        
474        data fx_dgns_4(drop=rc: px_date tx_site xray_date trauma_dt);
475        if _n_=1 then do;
476          declare hash hid(dataset:"fx_prcd", multidata:"N", hashexp:20);
477          rc=hid.defineKey("patid", "px_date", "tx_site");
478        /*  rc=hid.defineData("px_date", "tx_site");*/
479          rc=hid.defineDone();
480          declare hash hxray(dataset:"fx_spine_xray(rename=px_date=xray_date)", multidata:"Y", hashexp:20);
481          rc=hxray.defineKey("patid", "tx_site");
482          rc=hxray.defineData("xray_date");
483          rc=hxray.defineDone();
484          declare hash htrauma(dataset:"fx_trauma", multidata:"Y", hashexp:20);
485          rc=htrauma.defineKey("patid");
486          rc=htrauma.defineData("trauma_dt");
487          rc=htrauma.defineDone();
488        end;
489        if 0 then set fx_prcd(keep=patid px_date tx_site)
490                      fx_spine_xray(keep=patid px_date tx_site rename=px_date=xray_date)
491                      fx_trauma;
ERROR: The variable patid in the DROP, KEEP, or RENAME list has never been referenced.
ERROR: The variable px_date in the DROP, KEEP, or RENAME list has never been referenced.
ERROR: Variable px_date is not on file WORK.FX_SPINE_XRAY.
ERROR: Invalid DROP, KEEP, or RENAME option on file WORK.FX_SPINE_XRAY.
492        set fx_dgns_3;
493        length cq $4 spine_image trauma_date 4 trauma $1;
10                                                                  The SAS System                                    06:53 Friday, September 29, 2017

494        format spine_image trauma_date mmddyy10.;
495        cq="0000";
496        rc=hid.find(key:patid, key:begin_date,key:fx_site);
497        if rc^=0 then do;
498            px_date=.;
499            tx_site=" ";
500        end;
501        if enc_type="IP" then do;
502        /*CQ = 1 Inpatient claim with primary diagnosis code */
503            if pdx="P" then substr(cq,1,1)="1";
504        /*CQ = 2 Inpatient claim with secondary diagnosis code*/
505            else substr(cq,2,1)="2";
506        end; else do;
507        /*CQ = 3 outpatient diagnosis code AND carrier line with repair/replace HCPCS*/
508            if rc=0 then substr(cq,3,1)="3";
509            rc1=hxray.find(key:patid, key:fx_site);
510            do while (rc1 = 0);
511                if begin_date-10 <=xray_date<= begin_date then do;
512                    if enc_type in ("AV" "IF" "NH" "HH" "ER" "ED") then do;
513        /*CQ = 4 outpatient [Physician E&M codes] diagnosis code with spine image/x-ray within 10 day early*/
514                        substr(cq,4,1)="4";
515                        spine_image=min(spine_image,xray_date);
516                    end;
517                end;
518                rc1=hxray.find_next(key:patid, key:fx_site);
519            end;
520        end;
521        /*is there trauma dx within 14 days*/
522        rc2=htrauma.find(key:patid);
523        do while (rc2 = 0) ;
524            if 0<=abs(trauma_dt-begin_date)<=14 then do;
525                    trauma="1";
526                    trauma_date=min(trauma_date,trauma_dt);
527           end ;
528           rc2=htrauma.find_next(key:patid) ;
529        end;
530        
531        run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.FX_DGNS_4 may be incomplete.  When this step was stopped there were 0 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

532        proc freq data=fx_dgns_4; tables enc_type*cq fx_site*cq trauma/missing;run;

NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

533        
534        *goto 002_fx_epi.sas;
535        
536        
537        
538        
539        /*
540        START OF 002_fx_data.sas
541         */
542        
543        /*all the claims to define episode sequence */
544        data _dat0(keep=
545        PATID ENCOUNTERID ADMIT_DATE DISCHARGE_DATE BEGIN_DATE END_DATE DX DX_TYPE PDX  /* SOURCE */ ENC_TYPE fx_site px px_date
546        site cq spine_image trauma_date trauma );
547        set fx_dgns_4 fx_excare Fx_prcd(rename=tx_site=fx_site);
548        run;

WARNING: The variable ENCOUNTERID in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable ADMIT_DATE in the DROP, KEEP, or RENAME list has never been referenced.
11                                                                  The SAS System                                    06:53 Friday, September 29, 2017

WARNING: The variable DISCHARGE_DATE in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable END_DATE in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable DX_TYPE in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable px_date in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: The data set WORK._DAT0 has 0 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

549        proc sort data=_dat0; by PATID fx_site BEGIN_DATE END_DATE; run;
ERROR: Variable END_DATE not found.

NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      
550        /*for each claim define start and end date applicable to IP NH and NH*/


551        data _dat1;
552        set _dat0;
553        length start_date end_date 4;
554        format start_date end_date mmddyy10.;
555        by PATID fx_site BEGIN_DATE END_DATE;
556        start_date=min(ADMIT_DATE, BEGIN_DATE);
557        end_date=max(DISCHARGE_DATE, End_DATE);
558        run;

NOTE: The data set WORK._DAT1 has 0 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

559        proc sort data=_dat1; by PATID fx_site start_date end_date; run;

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

560        
561        /* generate unique episode sequence ID */
562        data _dat2(drop=end_date_max lag_end_date_max _gap);
563        set _dat1;
564        length lag_end_date_max end_date_max 4;
565        format lag_end_date_max end_date_max mmddyy10.;
566        
567        by PATID fx_site start_date end_date;
568        retain seq 0;
569        
570        /*if current claims end date > all previouse claim end date in sequence, then update*/
571        end_date_max=max(end_date,end_date_max);
572        lag_end_date_max=lag(end_date_max);
573        
574        if first.fx_site then lag_end_date_max=.;
575        _gap=start_date-lag_end_date_max;
576        
577        /*if current claims start date >90 days after all previouse claim end date in sequence,
578        then start new sequence*/
579        if first.fx_site or start_date-lag_end_date_max>90 then do;
580            end_date_max=end_date;
581        
582            seq+1;
583        end;
584        run;

NOTE: The data set WORK._DAT2 has 0 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
12                                                                  The SAS System                                    06:53 Friday, September 29, 2017

      cpu time            0.00 seconds
      

585        proc sort data=_dat2; by seq;run;

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

586        proc sql;
587        /*episode sequence start date*/
588        create table seq_start as
589        select patid, seq, min(start_date) as seq_start_date length=4 format=mmddyy10.
590         from _dat2
591         where substr(dx,1,4) not in ('V541' 'V542')
592         group by patid, seq
593         order by patid, seq;
ERROR: Function SUBSTR requires a character expression as argument 1.
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
594        /*episode sequence end date*/
595        create table seq_end as
596        select patid, seq,
597         max(start_date) as seq_end_date length=4 format=mmddyy10. from _dat2
598         group by patid, seq
599         order by patid, seq;
NOTE: Statement not executed due to NOEXEC option.
600        quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      
601        /*episode sequence case qualifier indicator and trauma*/


602        data seq_cq(keep=patid seq seq_cq seq_trauma fx_site);
603        set _dat2;
604        by patid seq;
605        length seq_cq $4 seq_trauma $1;
606        retain seq_cq seq_trauma;
607        if first.seq then do;
608            seq_cq="0000";
609            seq_trauma="0";
610        end;
611        if trauma="1" then seq_trauma=trauma;
612        do i=1 to 4;
613        if substr(cq,i,1)>substr(seq_cq,i,1) then substr(seq_cq,i,1)=substr(cq,i,1);
614        end;
615        if last.seq then output;
616        run;

NOTE: The data set WORK.SEQ_CQ has 0 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

617        proc freq data=seq_cq; tables seq_cq seq_trauma fx_site; run;

NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

618        
619        data seq_cq_date;
620        merge seq_cq seq_start seq_end;
ERROR: File WORK.SEQ_START.DATA does not exist.
ERROR: File WORK.SEQ_END.DATA does not exist.
621        by patid seq;
622        length site_order $1;
13                                                                  The SAS System                                    06:53 Friday, September 29, 2017

623        if fx_site='(820, 73314) hip' then site_order='1';
624        if fx_site='(821, 73315) femur' then site_order='2';
625        if fx_site='(808) pelvis' then site_order='3';
626        if fx_site='(805, 806, 73313) spine' then site_order='4';
627        if fx_site='(812, 73311) humerus' then site_order='5';
628        if fx_site='(813, 73312) radius_ulna' then site_order='6';
629        if fx_site='(823, 73316) tib_fib' then site_order='7';
630        if fx_site='(824) ankle' then site_order='8';
631        if fx_site='(810) clavicle' then site_order='9';
632        run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.SEQ_CQ_DATE may be incomplete.  When this step was stopped there were 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

633        
634        data _tmp_combo;
635        set seq_cq_date;
636        where site_order^=" " and seq_cq^="0000" and seq_cq^=" ";
637        run;

NOTE: The data set WORK._TMP_COMBO has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

638        
639        * define combo or alone fx;
640        data seq_COMBO(
641        keep=patid seq seq_cq seq_start_date alone_combo fx_site site_order)
642        ;
643        if _n_=1 then do;
644            declare hash hpid(dataset:"_tmp_combo(where=(seq_cq^='0000' and seq_cq^=' ')
645                    rename=(seq_start_date=seq_start_date2  fx_site= fx_site_combo seq=seq_COMBO))", ordered: 'a', multidata:"Y");
646            rc=hpid.defineKey("patid");
647            rc=hpid.defineData("patid","seq_start_date2", "fx_site_combo", "seq_COMBO");
648            rc=hpid.defineDone();
649        end;
650        if 0 then set _tmp_combo(rename=(seq_start_date=seq_start_date2 fx_site= fx_site_combo seq=seq_COMBO));
ERROR: Variable seq_start_date is not on file WORK._TMP_COMBO.
ERROR: Invalid DROP, KEEP, or RENAME option on file WORK._TMP_COMBO.
651        set _tmp_combo(where=(seq_cq^="0000" and seq_cq^=" ") );
652        by patid seq;
653        length  index_fx_begin 4 alone_combo $5;
654        alone_combo="alone";
655            format index_fx_begin mmddyy10.;
656            index_fx_begin=seq_start_date;
657        
658         rc=hpid.find(key:patid);
659        
660         do while (rc = 0);
661         if rc=0 and abs(seq_start_date-seq_start_date2) <=30 and fx_site_combo^=fx_site then alone_combo= 'combo';
662         rc=hpid.find_next();
663         *hpid.has_next(result:r);
664        end;
665        if alone_combo="alone" then do;
666            seq_start_date2=.; fx_site_combo=" "; seq_COMBO=.;
667        end;
668        run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.SEQ_COMBO may be incomplete.  When this step was stopped there were 0 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

669        proc freq data=seq_COMBO; tables alone_combo; run;
14                                                                  The SAS System                                    06:53 Friday, September 29, 2017


NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

670        
671        proc sort data = Work.seq_COMBO;
672          by patid seq_start_date;
673        run;

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

674        
675        data combo_seq;
676        set seq_COMBO;
677        by patid seq_start_date;
678        length combo_fx_site $30. combo_seq 4;
679        retain combo_seq 0 combo_fx_site;
680        if first.patid or seq_start_date-lag(seq_start_date) then combo_seq=1+combo_seq;
681        where seq_cq^='0000' and seq_cq^=' ';
682        if combo_fx_site=" " or ""<site_order<lag(site_order) then combo_fx_site=fx_site;
683        run;

NOTE: The data set WORK.COMBO_SEQ has 0 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

684        
685        proc sort data = Work.seq_COMBO;
686          by patid seq;
687        run;

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

688        
689        data FX_CLM_DB;
690        merge _dat2 seq_start seq_end seq_cq(drop=fx_site) seq_COMBO(keep=patid seq alone_combo);
ERROR: File WORK.SEQ_START.DATA does not exist.
ERROR: File WORK.SEQ_END.DATA does not exist.
691        by patid seq;
692        run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.FX_CLM_DB may be incomplete.  When this step was stopped there were 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

693        
694        proc sql;
695        select count(distinct seq) from FX_CLM_DB;
                                                                  --- AS project ---                              06:53 Friday, September 29, 2017   1

                                                                               
                                                                       --------
                                                                              0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                                  queryFractures.sas
696        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

697        
698        
699        
700        
15                                                                  The SAS System                                    06:53 Friday, September 29, 2017

701        /*
702        Collapse to fracture episodes
703        
704        Q: Why are some seq_start_date values missing?
705         */
706        proc sort
707          data = Work.fx_clm_db
708          out = Work.fractureEpisodes (drop = seq
709                                       rename = (seq_start_date = fractureEpisodeStart
710                                                 seq_end_date = fractureEpisodeEnd
711                                                 fx_site = fractureSite))
712          nodupkey;
713          by patid seq seq_start_date seq_end_date fx_site;
ERROR: Variable SEQ_START_DATE not found.
ERROR: Variable SEQ_END_DATE not found.
714        run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.FRACTUREEPISODES may be incomplete.  When this step was stopped there were 0 observations and 0 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
715        


716        proc sql;
717          create table DT.fractureEpisodesPrev as
718            select A.database,
719                   A.exposure,
720                   A.indexGNN,
721                   A.indexDate,
722                   A.ASCohortDate,
723                   A.indexID,
724                   A.age,
725                   A.sex,
726                   B.*,
727                   case
728                     when prxmatch("/spine/", B.fractureSite) then "Clinical vertebral fracture"
729                     when prxmatch("/(hip)|(pelvis)|(femur)|(humerus)|(radius)|(ulna)/", B.fractureSite) then "Non-vertebral osteoporotic fracture"
730                     else ""
731                     end as fractureType
732            from DT.indexLookup A inner join
733                 Work.fractureEpisodes B on (A.patid = B.patid);
ERROR: Table WORK.FRACTUREEPISODES doesn't have any columns. PROC SQL requires each of its tables to have at least 1 column.
ERROR: Column patid could not be found in the table/view identified with the correlation name B.
ERROR: Column patid could not be found in the table/view identified with the correlation name B.
ERROR: Column fractureSite could not be found in the table/view identified with the correlation name B.
ERROR: Column fractureSite could not be found in the table/view identified with the correlation name B.
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
734          create table Work.summaryFractureEpisodesPrev as
735            select "DT.fractureEpisodesPrev" as table,
736                   fractureType, fractureSite,
737                   count(distinct patid) as countDistinctPatid,
738                   count(*) as countFractureEpisodes
739            from DT.fractureEpisodesPrev
740            group by fractureType, fractureSite;
NOTE: Statement not executed due to NOEXEC option.
741          select * from Work.summaryFractureEpisodesPrev;
ERROR: File WORK.SUMMARYFRACTUREEPISODESPREV.DATA does not exist.
742          select "DT.fractureEpisodesPrev" as table,
743                 sum(countDistinctPatid) as sumDistinctPatid,
744                 sum(countFractureEpisodes) as sumFractureEpisodes
745            from Work.summaryFractureEpisodesPrev;
ERROR: File WORK.SUMMARYFRACTUREEPISODESPREV.DATA does not exist.
746        
747          create table DT.fractureEpisodesInc as
748            select A.database,
749                   A.ENR_END_DATE,
750                   A.DEATH_DATE,
751                   A.exposure,
752                   A.exposureStart,
16                                                                  The SAS System                                    06:53 Friday, September 29, 2017

753                   A.exposureEnd,
754                   A.daysExposed,
755                   A.exposureID,
756                   B.*,
757                   case
758                     when prxmatch("/spine/", B.fractureSite) then "Clinical vertebral fracture"
759                     when prxmatch("/(hip)|(pelvis)|(femur)|(humerus)|(radius)|(ulna)/", B.fractureSite) then "Non-vertebral osteoporotic fracture"
760                     else ""
761                     end as fractureType
762            from DT.exposureTimeline A inner join
763                 Work.fractureEpisodes B on (A.patid = B.patid  & A.exposureStart <= B.fractureEpisodeStart <= A.exposureEnd);
NOTE: Statement not executed due to NOEXEC option.
764          create table Work.summaryFractureEpisodesInc as
765            select "DT.fractureEpisodesInc" as table,
766                   fractureType, fractureSite,
767                   count(distinct patid) as countDistinctPatid,
768                   count(*) as countFractureEpisodes
769            from DT.fractureEpisodesInc
770            group by fractureType, fractureSite;
NOTE: Statement not executed due to NOEXEC option.
771          select * from Work.summaryFractureEpisodesInc;
ERROR: File WORK.SUMMARYFRACTUREEPISODESINC.DATA does not exist.
772          select "DT.fractureEpisodesInc" as table,
773                 sum(countDistinctPatid) as sumDistinctPatid,
774                 sum(countFractureEpisodes) as sumFractureEpisodes
775            from Work.summaryFractureEpisodesInc;
ERROR: File WORK.SUMMARYFRACTUREEPISODESINC.DATA does not exist.
776        quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.17 seconds
      cpu time            0.01 seconds
      
777        
778        
779        
780        
781        /*
782        CLEAN UP
783        
784        proc sql;
785          drop table UCB.tempFracDxMPCD;
786          drop table UCB.tempFracDxUCB;
787          drop table UCB.tempFracDxSABR;
788          drop table UCB.tempFracPxMPCD;
789          drop table UCB.tempFracPxUCB;
790          drop table UCB.tempFracPxSABR;
791        quit;
792         */
793        
794        


795        proc export
796          data = Work.summaryFractureEpisodes
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
797          outfile = "data\processed\&cmt..csv"
798          dbms = csv
799          replace;

800          delimiter = '09'x;
             _________
             180

ERROR 180-322: Statement is not valid or it is used out of proper order.

801        run;
802        
803        
17                                                                  The SAS System                                    06:53 Friday, September 29, 2017

804        ods html close;
ERROR: Errors printed on pages 3,5,7,8,9,11,12,13,14,15,16.

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           2.30 seconds
      cpu time            0.57 seconds
      
