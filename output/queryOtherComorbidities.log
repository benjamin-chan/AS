1                                                          The SAS System                               10:32 Friday, April 27, 2018

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

WARNING: Unable to copy SASUSER registry to WORK registry. Because of this, you will not see registry customizations during this 
         session.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           4.69 seconds
      cpu time            0.32 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=queryOtherComorbidities; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: W:\onenote\references\drug ndcs\sas data
128        footnote "&pgm.";
129        * footnote2 "%sysfunc(datetime(),datetime14.)";
2                                                                   The SAS System                                        10:32 Friday, April 27, 2018

130        title1 '--- AS project ---';
131        **********************************************************************;
132        options macrogen mlogic mprint symbolgen;
133        options nomacrogen nomlogic nomprint nosymbolgen;
134        
135        
136        ods html
137          body = "output\&cmt..html"
138          style = Statistical;
NOTE: Writing HTML Body file: output\queryOtherComorbidities.html
139        
140        
141        
142        
143        /*
144        From: Yang, Shuo [mailto:shuoyang@uabmc.edu]
145        Sent: Tuesday, April 10, 2018 8:28 AM
146        To: Chen, Lang <langchen@uabmc.edu>; Benjamin Chan <chanb@ohsu.edu>
147        Subject: RE: Marketscan provider codes
148        
149        Hi Ben,
150        
151        Please see below formats that I created from marketscan data dictionary.
152        
153        Best,
154        
155        Shawn
156         */
157        proc format;
157      !                   /*<-- $PROVIDERTYPE. (from STDPROV) */
158              value $providerType
159                    '1'='Acute Care Hospital'
160                    '10'='Birthing Center'
161                    '100'='Pediatric Otolaryngology'
162                    '105'='Pediatric Critical Care Med'
163                    '120'='Chiropractor/DCM'
164                    '130'='Podiatry'
165                    '140'='Pain Mgmt/Pain Medicine'
166                    '145'='Pediatric Anesthesiology'
167                    '15'='Treatment Center'
168                    '150'='Anesthesiology'
169                    '160'='Nuclear Medicine'
170                    '170'='Mental Health/Chemical Dep NEC'
171                    '175'='Mental Health Facilities'
172                    '180'='Chemical Depend Treatment Ctr'
173                    '185'='Pediatric Radiology'
174                    '20'='Mental Health/Chemical Dep NEC'
175                    '200'='Medical Doctor - MD (NEC)'
176                    '202'='Osteopathic Medicine'
177                    '204'='Internal Medicine (NEC)'
178                    '206'='MultiSpecialty Physician Group'
179                    '208'='Convalescent Care Facility'
180                    '21'='Pulmonary Disease'
181                    '210'='Intermediate Care Facility'
182                    '215'='Residential Treatment Center'
183                    '22'='Rheumatology'
184                    '220'='Emergency Medicine'
185                    '225'='Hospitalist'
186                    '227'='Palliative Medicine'
187                    '23'='Mental Hlth/Chem Dep Day Care'
188                    '230'='Allergy & Immunology'
189                    '240'='Family Practice'
190                    '245'='Special Care Facility (NEC)'
191                    '25'='Rehabilitation Facilities'
192                    '250'='Dentist - MD & DDS (NEC)'
193                    '260'='Dental Specialist'
194                    '265'='Critical Care Medicine'
195                    '270'='Endocrinology & Metabolism'
196                    '275'='Gastroenterology'
197                    '280'='Hematology'
198                    '285'='Infectious Disease'
199                    '290'='Nephrology'
3                                                                   The SAS System                                        10:32 Friday, April 27, 2018

200                    '295'='Pathology'
201                    '30'='Longterm Care (NEC)'
202                    '300'='Pediatric Pathology'
203                    '31'='Extended Care Facility'
204                    '32'='Geriatric Hospital'
205                    '320'='Radiology'
206                    '325'='Genetics'
207                    '33'='Convalescent Care Facility'
208                    '330'='Ophthalmology'
209                    '34'='Preventative Medicine'
210                    '340'='Otolaryngology'
211                    '35'='Psychiatry'
212                    '350'='Physical Medicine & Rehab'
213                    '355'='Plastic/Maxillofacial Surgery'
214                    '36'='Continuing Care Retirement Com'
215                    '360'='Proctology'
216                    '365'='Urology'
217                    '37'='Day/Night Care Center'
218                    '38'='Hospice Facility'
219                    '380'='Dermatology'
220                    '40'='Other Facility (NEC)'
221                    '400'='Pediatrician (NEC)'
222                    '41'='Infirmary'
223                    '410'='Pediatric Specialist (NEC)'
224                    '413'='Pediatric Nephrology'
225                    '415'='Pediatric Ophthalmology'
226                    '418'='Pediatric Orthopaedics'
227                    '42'='Special Care Facility (NEC)'
228                    '420'='Geriatric Medicine'
229                    '423'='Cardiovascular Dis/Cardiology'
230                    '425'='Neurology'
231                    '428'='Pediatric Emergency Medicine'
232                    '430'='Pediatric Allergy & Immunology'
233                    '433'='Pediatric Endocrinology'
234                    '435'='Neonatal-Perinatal Medicine'
235                    '438'='Pediatric Gastroenterology'
236                    '440'='Pediatric Cardiology'
237                    '443'='Pediatric Hematology-Oncology'
238                    '448'='Pediatric Infectious Diseases'
239                    '450'='Pediatric Rheumatology'
240                    '453'='Sports Medicine (Pediatrics)'
241                    '455'='Pediatric Urology'
242                    '458'='Child Psychiatry'
243                    '460'='Pediatric Medical Toxicology'
244                    '5'='Ambulatory Surgery Centers'
245                    '500'='Surgeon (NEC)'
246                    '505'='Surgical Specialist (NEC)'
247                    '510'='Colon & Rectal Surgery'
248                    '520'='Neurological Surgery'
249                    '530'='Orthopaedic Surgery'
250                    '535'='Abdominal Surgery'
251                    '540'='Cardiovascular Surgery'
252                    '545'='Dermatologic Surgery'
253                    '550'='General Vascular Surgery'
254                    '555'='Head and Neck Surgery'
255                    '560'='Pediatric Surgery'
256                    '565'='Surgical Critical Care'
257                    '570'='Transplant Surgery'
258                    '575'='Traumatic Surgery'
259                    '580'='Cardiothoracic Surgery'
260                    '585'='Thoracic Surgery'
261                    '6'='Urgent Care Facility'
262                    '805'='Dental Technician'
263                    '810'='Dietitian'
264                    '815'='Medical Technician'
265                    '820'='Midwife'
266                    '822'='Nursing Services'
267                    '824'='Psychiatric Nurse'
268                    '825'='Nurse Practitioner'
269                    '827'='Nurse Anesthetist'
270                    '830'='Optometrist'
271                    '835'='Optician'
4                                                                   The SAS System                                        10:32 Friday, April 27, 2018

272                    '840'='Pharmacist'
273                    '845'='Physician Assistant'
274                    '850'='Therapy (Physical)'
275                    '853'='Therapists (Supportive)'
276                    '855'='Therapists (Alternative)'
277                    '857'='Renal Dialysis Therapy'
278                    '860'='Psychologist'
279                    '865'='Acupuncturist'
280                    '870'='Spiritual Healers'
281                    '900'='Health Educator/Agency'
282                    '905'='Transportation'
283                    '910'='Health Resort'
284                    '915'='Hearing Labs'
285                    '920'='Home Health Organiz/Agency'
286                    '925'='Imaging Center'
287                    '930'='Laboratory'
288                    '935'='Pharmacy'
289                    '940'='Supply Center'
290                    '945'='Vision Center'
291                    '950'='Public Health Agency'
292                    '955'='Unknown Clinic'
293                    '960'='Case Manager'
294        ;
NOTE: Format $PROVIDERTYPE has been output.
295        run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

296        
297        
298        
299        
300        proc import out = Work.comorbidityLookup
301                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Covariates Codebook-20170410.xlsx"
302                    dbms = xlsx
303                    replace;
304          sheet = "Comorbidity";
305          getnames = yes;
306          datarow = 2;
307        run;

NOTE:    Variable Name Change.  Compact Definion -> Compact_Definion                
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 1112 observations and 6 variables.
NOTE: WORK.COMORBIDITYLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
      

308        proc sql;
309          alter table Work.comorbidityLookup
310            add code varchar;
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 7 columns.
311          update Work.comorbidityLookup
312            set code = dequote(icd9_list);
NOTE: 1112 rows were updated in WORK.COMORBIDITYLOOKUP.

313          alter table Work.comorbidityLookup
314            drop compact_definion, icd9_list, billable, description, F;
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 2 columns.
315          delete from Work.comorbidityLookup
316            where missing(code);
NOTE: 1009 rows were deleted from WORK.COMORBIDITYLOOKUP.

317          insert into Work.comorbidityLookup
318            values ("COPD or emphysema", "4910" )
319            values ("COPD or emphysema", "4911" )
5                                                                   The SAS System                                        10:32 Friday, April 27, 2018

320            values ("COPD or emphysema", "49120")
321            values ("COPD or emphysema", "49121")
322            values ("COPD or emphysema", "49122")
323            values ("COPD or emphysema", "4918" )
324            values ("COPD or emphysema", "4919" )
325            values ("COPD or emphysema", "4920" )
326            values ("COPD or emphysema", "4928" )
327            values ("COPD or emphysema", "496"  )
328            values ("COPD or emphysema", "49320")
329            values ("COPD or emphysema", "49321")
330            values ("COPD or emphysema", "49322");
NOTE: 13 rows were inserted into WORK.COMORBIDITYLOOKUP.

331        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.32 seconds
      cpu time            0.06 seconds
      

332        
333        
334        proc sql;
335        
336          %let select1 = select A.*, B.comorbidity;
337          %let join1 = inner join Work.comorbidityLookup B on (A.code = B.code);
338          create table DT.comorbiditiesOther as
339            select distinct
340                   C.database, C.exposure, C.patid, C.ASCohortDate, C.indexGNN, C.indexDate, C.indexID,
341                   C.age, C.sex,
342                   C.comorbidity,
343                   1 as indPreExposure
344            from (&select1 from UCB.tempPrevDxAll A &join1) C;
NOTE: Data set UCB.TEMPPREVDXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.COMORBIDITIESOTHER created, with 75789 rows and 11 columns.

345        
346          select comorbidity, database, exposure, sum(indPreExposure) as sumIndPreExposure
347            from DT.comorbiditiesOther
348            group by comorbidity, database, exposure;
                                                                  --- AS project ---                                  10:32 Friday, April 27, 2018   1

                                                                                                      sumIndPre
                                       Comorbidity                        database    exposure         Exposure
                                       ------------------------------------------------------------------------
                                       COPD or emphysema                  MPCD        DMARD                  37
                                       COPD or emphysema                  MPCD        NSAID                  63
                                       COPD or emphysema                  MPCD        No exposure           252
                                       COPD or emphysema                  MPCD        TNF                    61
                                       COPD or emphysema                  Marketscan  DMARD                 117
                                       COPD or emphysema                  Marketscan  NSAID                 378
                                       COPD or emphysema                  Marketscan  No exposure           501
                                       COPD or emphysema                  Marketscan  TNF                   259
                                       COPD or emphysema                  Medicare    DMARD                1856
                                       COPD or emphysema                  Medicare    NSAID                4801
                                       COPD or emphysema                  Medicare    No exposure          4641
                                       COPD or emphysema                  Medicare    TNF                  1741
                                       Diabetes                           MPCD        DMARD                  69
                                       Diabetes                           MPCD        NSAID                 121
                                       Diabetes                           MPCD        No exposure           401
                                       Diabetes                           MPCD        TNF                   135
                                       Diabetes                           Marketscan  DMARD                 268
                                       Diabetes                           Marketscan  NSAID                 669
                                       Diabetes                           Marketscan  No exposure           859
                                       Diabetes                           Marketscan  TNF                   636
                                       Diabetes                           Medicare    DMARD                2040
                                       Diabetes                           Medicare    NSAID                5212
                                       Diabetes                           Medicare    No exposure          5191
                                       Diabetes                           Medicare    TNF                  2117
                                       Hypertention                       MPCD        DMARD                 192
                                       Hypertention                       MPCD        NSAID                 359
                                       Hypertention                       MPCD        No exposure           863
                                       Hypertention                       MPCD        TNF                   437
                                       Hypertention                       Marketscan  DMARD                 864
                                       Hypertention                       Marketscan  NSAID                1996
                                       Hypertention                       Marketscan  No exposure          2449
                                       Hypertention                       Marketscan  TNF                  2152
                                       Hypertention                       Medicare    DMARD                4321
                                       Hypertention                       Medicare    NSAID               10763
                                       Hypertention                       Medicare    No exposure         11119
                                       Hypertention                       Medicare    TNF                  4484
                                       Metabolic syndrome                 MPCD        DMARD                   5
                                       Metabolic syndrome                 MPCD        NSAID                  14
                                       Metabolic syndrome                 MPCD        No exposure            21
                                       Metabolic syndrome                 MPCD        TNF                    13
                                       Metabolic syndrome                 Marketscan  DMARD                  43
                                       Metabolic syndrome                 Marketscan  NSAID                  57
                                       Metabolic syndrome                 Marketscan  No exposure            66
                                       Metabolic syndrome                 Marketscan  TNF                    79
                                       Metabolic syndrome                 Medicare    DMARD                 130
                                       Metabolic syndrome                 Medicare    NSAID                 343
                                       Metabolic syndrome                 Medicare    No exposure           228
                                       Metabolic syndrome                 Medicare    TNF                   171
                                       Non-alcoholic fatty liver disease  MPCD        DMARD                   6
                                       Non-alcoholic fatty liver disease  MPCD        NSAID                   9
                                       Non-alcoholic fatty liver disease  MPCD        No exposure            16
                                       Non-alcoholic fatty liver disease  MPCD        TNF                    23
                                       Non-alcoholic fatty liver disease  Marketscan  DMARD                  34
                                       Non-alcoholic fatty liver disease  Marketscan  NSAID                 117
                                       Non-alcoholic fatty liver disease  Marketscan  No exposure           126
                                       Non-alcoholic fatty liver disease  Marketscan  TNF                   168
                                       Non-alcoholic fatty liver disease  Medicare    DMARD                 261
                                       Non-alcoholic fatty liver disease  Medicare    NSAID                 639
                                       Non-alcoholic fatty liver disease  Medicare    No exposure           456
                                       Non-alcoholic fatty liver disease  Medicare    TNF                   340
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
349        
350        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           8.53 seconds
      cpu time            8.79 seconds
      

351        
352        
353        
354        /*
355        BEGIN Fenglong's comorbidities code
356        
357        From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
358        Sent: Wednesday, November 29, 2017 1:32 PM
359        To: Benjamin Chan <chanb@ohsu.edu>
360        Subject: Attachment from my EndNote Library
361        
362        Hi, Ben
363        
364        Here are variable list included in our infection risk score model.
365        
366        Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
367        ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
368        
369        please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
369      ! variables.
370        
371        Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
372        
6                                                                   The SAS System                                        10:32 Friday, April 27, 2018

373        Please let me know if you have any question.
374        
375        Fenglong
376         */
377        /*
378        Only use ICD-9 codes from previous 12 months for Charlson
379         */
380        /*
381        Last execution: 1/2/2018 (commit 56f369)
382        DO NOT EXECUTE AGAIN
383        Due to server upgrade (32-bit to 64-bit SAS), subsequent execution results in error:
384        "ERROR: Foreign datasets cannot be modified."
385         */
386        /*
387        proc sql;
388          create table UCB.tempPrevDx12mPrior as
389            select *
390            from UCB.tempPrevDxAll
391            where intnx("year", indexDate, -1, "same") < begin_date <= indexDate
392            order by indexID, indexDate;
393          create table UCB.tempPrevPx12mPrior as
394            select *
395            from UCB.tempPrevPxAll
396            where intnx("year", indexDate, -1, "same") < px_date <= indexDate
397            order by indexID, indexDate;
398          create table UCB.tempPrevRx12mPrior as
399            select A.*, B.etc_name, B.source
400            from UCB.tempPrevRxAll A left join
401                 DT.lookupNDC B on (A.ndc = B.ndc)
402            where intnx("year", indexDate, -1, "same") < dispense_date <= indexDate
403            order by indexID, indexDate;
404        quit;
405        
406        %include "lib\charlson.sas" / source2;
407        %include "lib\indicationDx.sas" / source2;
408        %include "lib\indicationPx.sas" / source2;
409        %include "lib\indicationRx.sas" / source2;
410        %include "lib\NumCnt.sas" / source2;
411        %include "lib\ciras.sas" / source2;
412        
413        %let CovariateListDx= hepatitisC fluVaccineDx JointSurgDx ulcer obese smoke
414                              lipidDx uveitis growthFail mammoDx PSAdx PapDx endoDx Sjogrens MI heartFailure stroke TIA EAM
415                              fistula_abscessDx hemaCa solidCa
416                              Hypertension angina fracture osteo icd7100; *covariate in 3rd line are from malignancy WG;
417        %indicationDx(indexID, indexDate);
418        
419        %let CovariateListPx = InflamMarker RehabVisit RF platelet LFT FluVaccine jointSurg lipidPx Coronary_Revas
420                               intraArticularInj MammoPx PSApx PAPpx endoPx FOBT J3490
421                               fistula_abscessPx ercpPx barium_ugiPx barium_colonPx;
422        %indicationPx(indexID, indexDate);
423        
424        %let CovariateListRx= chemo lipid dm folate fungus HTN naproxen narcotics nsaid sedative steroid tb thyroid viral
425                             dementia statin NSAIDcox BBlocker op_PPI op_bisphosp op_other
426                             thiazide thiazolidinedione anticoagulant
427                   antithrom antibiotics antipsych antidepres anticonvul calcium Adrenergic;
428        %indicationRx(indexID, indexDate);
429        proc means data = Work.indRx;
430          var &CovariateListRx;
431        run;
432        
433        %charlson(inputds = ,
434                  idVar = indexID,
435                  IndexDateVarName = indexDate,
436                  outputds = CCI,
437                  IndexVarName = Charlson,
438                  inpatonly = B,
439                  malig = N);
440        
441        %ciras(DT.indexLookup, indexID, indexDate);
442        
443        
444        proc sql;
7                                                                   The SAS System                                        10:32 Friday, April 27, 2018

445          create table DT.charlsonIndex as select * from Work._WithCharlson;
446          create table DT.CIRAS as select * from Work.CIRAS;
447          create table DT.indRx as select * from Work.indRx;
448        quit;
449        proc contents data = DT.charlsonIndex order = varnum;
450        run;
451        proc contents data = DT.CIRAS order = varnum;
452        run;
453        proc contents data = DT.indRx order = varnum;
454        run;
455         */
456        /*
457        END Fenglong's comorbidities code
458         */
459        
460        
461        
462        
463        proc import out = Work.biologicsLookup
464                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Medicine - DMARDs & BIOs  -
464      ! 20170409.xlsx"
465                    dbms = xlsx
466                    replace;
467          sheet = "Sheet1";
468          getnames = yes;
469          datarow = 2;
470        run;

NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 789 observations and 8 variables.
NOTE: WORK.BIOLOGICSLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
      

471        proc sql;
472          delete from Work.biologicsLookup
473            where category ^= "Biologic";
NOTE: 715 rows were deleted from WORK.BIOLOGICSLOOKUP.

474          select category, subcate as subcategory, gnn, count(*) as n
475            from Work.biologicsLookup
476            group by category, subcate, gnn;
                                                                  --- AS project ---                                  10:32 Friday, April 27, 2018   2

                                                   Category  SubCate   GNN                        n
                                                   ------------------------------------------------
                                                   Biologic            BELIMUMAB                  2
                                                   Biologic            VEDOLIZUMAB                3
                                                   Biologic  Anti-IL6  TOCILIZUMAB                6
                                                   Biologic  Anti-TNF  ADALIMUMAB                12
                                                   Biologic  Anti-TNF  CERTOLIZUMAB               5
                                                   Biologic  Anti-TNF  ETANERCEPT                11
                                                   Biologic  Anti-TNF  GOLIMUMAB                  6
                                                   Biologic  Anti-TNF  INFLIXIMAB                 2
                                                   Biologic  Bcell     RITUXIMAB                  3
                                                   Biologic  IL12-23   USTEKINUMAB                6
                                                   Biologic  IL17      SECUKINUMAB                4
                                                   Biologic  IL1Ra     ANAKINRA                   6
                                                   Biologic  IL1Ra     CANAKINUMAB                2
                                                   Biologic  Tcell     ABATACEPT                  6
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
477        quit;
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
      

478        proc sql;
479          create table Work.indBiologics0 as
480            select A.database, A.patid, A.indexID,
481                   A.begin_date format = mmddyy10. as rxDate,
482                   "HCPCS" as codeType,
483                   A.px as drugCode,
484                   B.gnn as drugName,
485                   B.descript as drugDesc,
486                   . as dispense_sup
487              from UCB.tempPrevPxAll A inner join
488                   Work.biologicsLookup B on (A.px = B.code)
489              where A.px_date < A.indexDate - 183
490            union corr
491            select A.database, A.patid, A.indexID,
492                   A.dispense_date format = mmddyy10. as rxDate,
493                   "NDC" as codeType,
494                   A.ndc as drugCode,
495                   B.gnn as drugName,
496                   B.descript as drugDesc,
497                   A.dispense_sup
498              from UCB.tempPrevRxAll A inner join
8                                                                   The SAS System                                        10:32 Friday, April 27, 2018

499                   Work.biologicsLookup B on (A.ndc = B.code)
500              where A.dispense_date < A.indexDate - 183;
NOTE: Data set UCB.TEMPPREVPXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.TEMPPREVRXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.INDBIOLOGICS0 created, with 108233 rows and 9 columns.

501          select codeType, drugName, count(distinct patid) as countDistinctPatid
502            from Work.indBiologics0
503            group by codeType, drugName;
                                                                  --- AS project ---                                  10:32 Friday, April 27, 2018   3

                                                                                         count
                                                       code                           Distinct
                                                       Type   GNN                        Patid
                                                       ---------------------------------------
                                                       HCPCS  ABATACEPT                    318
                                                       HCPCS  ADALIMUMAB                    33
                                                       HCPCS  CERTOLIZUMAB                  62
                                                       HCPCS  ETANERCEPT                    46
                                                       HCPCS  GOLIMUMAB                      5
                                                       HCPCS  INFLIXIMAB                  2653
                                                       HCPCS  RITUXIMAB                    210
                                                       HCPCS  TOCILIZUMAB                  103
                                                       HCPCS  USTEKINUMAB                    3
                                                       NDC    ABATACEPT                     57
                                                       NDC    ADALIMUMAB                  2375
                                                       NDC    ANAKINRA                      17
                                                       NDC    CERTOLIZUMAB                  99
                                                       NDC    ETANERCEPT                  2804
                                                       NDC    GOLIMUMAB                    375
                                                       NDC    INFLIXIMAB                   147
                                                       NDC    RITUXIMAB                      6
                                                       NDC    TOCILIZUMAB                    8
                                                       NDC    USTEKINUMAB                   10
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
504          create table DT.indBiologics as
505            select distinct
506                   A.database, A.patid, A.indexID,
507                   1 as indRxBiologics
508            from Work.indBiologics0 A;
NOTE: Table DT.INDBIOLOGICS created, with 10156 rows and 4 columns.

509        quit;
NOTE: The PROCEDURE SQL printed page 3.
NOTE: PROCEDURE SQL used (Total process time):
      real time           9.12 seconds
      cpu time            9.23 seconds
      

510        
511        
512        
513        
514        proc sql;
515        /*
516        Oral corticosteroid use
517        Mean outpatient prescribed daily dose of prednisone equivalents in the 6
518        months prior to index date: less than 5 mg/d (low dose), 5 to less than 10
519        mg/d (medium dose), and 10 mg/d or more (high dose)
520         */
521          create table DT.rxOralCorticosteroid as
522            select C.database, C.patid, C.indexID,
523                   1 as indOralCorticosteroid,
524                   sum(C.daysAtRisk * C.prednisodeEquivalentDose) as sumPredEq,
525                   sum(C.daysAtRisk) as sumDaysSupply,
526                   sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 as meanPredEqDose,
527                   case
528                     when 0 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 2.5 then "Low (<2.5 mg/d)"
529                     when 2.5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 5 then "Medium-Low (2.5-5 mg/d)"
530                     when 5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 10 then "Medium-High (5-10 mg/d)"
531                     when 10 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 then "High (10+ mg/d)"
532                     else ""
533                     end as meanPredEqDoseCat
534            from (select A.database, A.patid, A.indexID,
535                         A.indexDate - 183 format = mmddyy10. as riskStart,
536                         A.indexDate,
537                         A.dispense_date,
538                         A.dispense_date + A.dispense_sup - 1 format = mmddyy10. as dispense_end,
539                         A.dispense_sup,
540                         case
541                           /* Rx completely in at-risk period */
542                           when (A.indexDate - 183 <= A.dispense_date) & ((A.dispense_date + A.dispense_sup - 1) <= A.indexDate)
543                             then A.dispense_sup
544                           /* Rx begins before at-risk period */
545                           when (A.dispense_date < A.indexDate - 183)
546                             then A.dispense_sup - (A.indexDate - 183 - A.dispense_date)
547                           /* Rx ends after at-risk period */
548                           when (A.indexDate < (A.dispense_date + A.dispense_sup - 1))
549                             then A.dispense_sup - (A.dispense_date + A.dispense_sup - 1 - A.indexDate)
550                           else .
551                           end as daysAtRisk,
552                         B.prednisodeEquivalentDose
9                                                                   The SAS System                                        10:32 Friday, April 27, 2018

553                  from UCB.tempPrevRxAll A inner join
554                       DT.lookupNDC B on (A.ndc = B.ndc)
555                  where ^missing(B.prednisodeEquivalentDose) &
556                        ((A.indexDate - 183 <= A.dispense_date <= A.indexDate) |
557                          (A.indexDate - 183 <= (A.dispense_date + A.dispense_sup - 1) <= A.indexDate))) C
558            group by C.database, C.patid, C.indexID;
NOTE: Data set UCB.TEMPPREVRXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.RXORALCORTICOSTEROID created, with 18717 rows and 8 columns.

559        /*
560        Create diagnosis code indicators from inpatient admissions
561         */
562          create table DT.diagIndicatorsInpatient as
563            select A.database, A.patid, A.indexID,
564                   count(distinct A.admit_date) as countIPAdmits12mPrior,
565                   case
566                     when count(distinct A.admit_date) > 0 then 1
567                     else 0
568                     end as indIPAdmit12mPrior
569            from UCB.tempPrevDx12mPrior A
570            where A.enc_type = "IP"
571            group by A.database, A.patid, A.indexID;
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.DIAGINDICATORSINPATIENT created, with 17714 rows and 5 columns.

572        /*
573        Count encounters
574         */
575          create table Work.countAVPhysEncounters as
576            select B.database, B.patid, B.indexID,
577                   sum(indAVPhys12mPrior) as countAVPhys12mPrior
578            from (select distinct A.database, A.patid, A.indexID, A.begin_date,
579                         1 as indAVPhys12mPrior
580                  from UCB.tempPrevPx12mPrior A
581                  where A.codeType = "CPT" &
582                        prxmatch("/^(992[0147][1-5])|(990((24)|(58)))/", A.code) &
583                        calculated indAVPhys12mPrior = 1) B
584            group by B.database, B.patid, B.indexID;
NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTAVPHYSENCOUNTERS created, with 59281 rows and 4 columns.

585          create table Work.countAVRheumEncounters as
586            select B.database, B.patid, B.indexID,
587                   sum(indAVRheum12mPrior) as countAVRheum12mPrior
588            from (select distinct A.database, A.patid, A.indexID, A.begin_date,
589                         case
590                           when A.database = "MPCD" & B.prov_type = "66" then 1
591                           when A.database = "Marketscan" & B.prov_type = "300" then 1
592                           when A.database = "Medicare" & B.prov_type = "66" then 1
593                           else .
594                           end as indAVRheum12mPrior
595                  from UCB.tempPrevPx12mPrior A inner join
596                       UCB.tempPrevDx12mPrior B on (A.database = B.database & A.patid = B.patid & A.encounterID = B.encounterID)
597                  where A.codeType = "CPT" &
598                        prxmatch("/^(992[0147][1-5])|(990((24)|(58)))/", A.code) &
599                        calculated indAVRheum12mPrior = 1) B
600            group by B.database, B.patid, B.indexID;
NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTAVRHEUMENCOUNTERS created, with 45326 rows and 4 columns.

601          create table Work.countEREncounters as
602            select A.database, A.patid, A.indexID,
10                                                                  The SAS System                                        10:32 Friday, April 27, 2018

603                   count(distinct A.begin_date) as countERVisits,
604                   case
605                     when count(distinct A.begin_date) > 0 then 1
606                     else 0
607                     end as indERVisit12mPrior
608            from UCB.tempPrevPx12mPrior A
609            where A.codeType = "CPT" & prxmatch("/^9928[1-5]/", code)
610            group by A.database, A.patid, A.indexID;
NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTERENCOUNTERS created, with 24309 rows and 5 columns.

611          create table DT.countEncounters as
612            select coalesce(A.database, B.database, C.database) as database,
613                   coalesce(A.patid, B.patid, C.patid) as patid,
614                   coalesce(A.indexID, B.indexID, C.indexID) as indexID,
615                   A.countAVPhys12mPrior,
616                   B.countAVRheum12mPrior,
617                   C.indERVisit12mPrior,
618                   C.countERVisits
619            from Work.countAVPhysEncounters A full join
620                 Work.countAVRheumEncounters B on (A.indexID = B.indexID) full join
621                 Work.countEREncounters C on (A.indexID = C.indexID | B.indexID = C.indexID);
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table DT.COUNTENCOUNTERS created, with 59725 rows and 7 columns.

622          select ^missing(countAVPhys12mPrior) as a,
623                 ^missing(countAVRheum12mPrior) as b,
624                 ^missing(indERVisit12mPrior) as c,
625                 count(*) as n
626            from DT.countEncounters
627            group by calculated a, calculated b, calculated c;
                                                                  --- AS project ---                                  10:32 Friday, April 27, 2018   4

                                                               a         b         c         n
                                                        --------------------------------------
                                                               0         0         1       444
                                                               1         0         0      5444
                                                               1         0         1      8511
                                                               1         1         0     29972
                                                               1         1         1     15354
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
628        /*
629        Inhaled antibiotics
630        
631        IS A DAYS-SUPPLY CRITERION REQUIRED??
632          create table Work.indInhaledAntibiotics0 as
633            select A.patid, A.episodeID,
634                   A.begin_date format = mmddyy10. as rxDate,
635                   "HCPCS" as codeType,
636                   A.px as drugCode,
637                   "INJECTION" as drugRoute,
638                   B.descript as drugName,
639                   A.px_amt,
640                   . as dispense_sup,
641                   . as dispense_amt
642              from WRK.proccodesHCPCS12mPrior A inner join
643                   DT.lookupJcodes B on (A.px = B.code)
644              where lower(category) = "inhaled antibiotic"
645            union corr
646            select D.patid, D.episodeID,
647                   D.dispense_date format = mmddyy10. as rxDate,
648                   "NDC" as codeType,
649                   E.ndc as drugCode,
650                   D.rt as drugRoute,
651                   D.gnn as drugName,
652                   . as px_amt,
653                   D.dispense_sup,
654                   D.dispense_amt
655              from WRK.rx12mPrior D inner join
656                   DT.lookupNDC E on (D.ndc = E.ndc)
657              where (lower(E.etc_name) like '%antibiotic%' | lower(E.etc_name) like '%polymyxin%') &
658                    lowcase(E.rt) in ("inhalation", "intraven", "injection");
659          select codeType, drugRoute, drugName, count(distinct patid) as countDistinctPatid
660            from Work.indInhaledAntibiotics0
661            group by codeType, drugRoute, drugName;
662          create table Work.indInhaledAntibiotics1 as
663            select distinct
664                   A.patid, A.episodeID,
665                   1 as indInhaledAntibiotics
666            from Work.indInhaledAntibiotics0 A;
11                                                                  The SAS System                                        10:32 Friday, April 27, 2018

667         */
668        quit;
NOTE: The PROCEDURE SQL printed page 4.
NOTE: PROCEDURE SQL used (Total process time):
      real time           1:04.11
      cpu time            1:06.69
      

669        
670        
671        /*
672        Code for outpatient infections
673        Use code for hospitalized infections
674        See queryPrevalentComorbidities.sas
675         */
676        proc sql;
677          create table Work.defOutcomes as
678            select *
679            from DT.defOutcomes
680            where disease ^in ("Interstitial lung disease");
NOTE: Table WORK.DEFOUTCOMES created, with 2664 rows and 6 columns.

681        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

682        proc sql;
683          create table DT.outpatientInfection as
684            select distinct
685                   A.database, A.patid, A.indexID,
686                   1 as indOutpatientInfection
687            from UCB.tempPrevDxAll A inner join
688                 Work.defOutcomes B on (A.codeType = B.codeType & A.code = B.code)
689            where A.enc_type = "AV" &
690                  B.disease in ("Hospitalized infection");
NOTE: Data set UCB.TEMPPREVDXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.OUTPATIENTINFECTION created, with 46339 rows and 4 columns.

691        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           5.19 seconds
      cpu time            5.49 seconds
      

692        
693        
694        
695        
696        ods html close;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           1:44.53
      cpu time            1:31.49
      
