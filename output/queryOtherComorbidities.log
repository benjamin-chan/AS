1                                                          The SAS System                               10:34 Thursday, May 24, 2018

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

WARNING: Unable to copy SASUSER registry to WORK registry. Because of this, you will not see registry customizations during this 
         session.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           4.89 seconds
      cpu time            0.43 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=queryOtherComorbidities; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref UCB64 was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB64\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
2                                                                   The SAS System                                        10:34 Thursday, May 24, 2018

      Physical Name: W:\onenote\references\drug ndcs\sas data
143        footnote "&pgm.";
144        * footnote2 "%sysfunc(datetime(),datetime14.)";
145        title1 '--- AS project ---';
146        **********************************************************************;
147        options macrogen mlogic mprint symbolgen;
148        options nomacrogen nomlogic nomprint nosymbolgen;
149        
150        
151        ods html
152          body = "output\&cmt..html"
153          style = Statistical;
NOTE: Writing HTML Body file: output\queryOtherComorbidities.html
154        
155        
156        
157        
158        /*
159        From: Yang, Shuo [mailto:shuoyang@uabmc.edu]
160        Sent: Tuesday, April 10, 2018 8:28 AM
161        To: Chen, Lang <langchen@uabmc.edu>; Benjamin Chan <chanb@ohsu.edu>
162        Subject: RE: Marketscan provider codes
163        
164        Hi Ben,
165        
166        Please see below formats that I created from marketscan data dictionary.
167        
168        Best,
169        
170        Shawn
171         */
172        proc format;
172      !                   /*<-- $PROVIDERTYPE. (from STDPROV) */
173              value $providerType
174                    '1'='Acute Care Hospital'
175                    '10'='Birthing Center'
176                    '100'='Pediatric Otolaryngology'
177                    '105'='Pediatric Critical Care Med'
178                    '120'='Chiropractor/DCM'
179                    '130'='Podiatry'
180                    '140'='Pain Mgmt/Pain Medicine'
181                    '145'='Pediatric Anesthesiology'
182                    '15'='Treatment Center'
183                    '150'='Anesthesiology'
184                    '160'='Nuclear Medicine'
185                    '170'='Mental Health/Chemical Dep NEC'
186                    '175'='Mental Health Facilities'
187                    '180'='Chemical Depend Treatment Ctr'
188                    '185'='Pediatric Radiology'
189                    '20'='Mental Health/Chemical Dep NEC'
190                    '200'='Medical Doctor - MD (NEC)'
191                    '202'='Osteopathic Medicine'
192                    '204'='Internal Medicine (NEC)'
193                    '206'='MultiSpecialty Physician Group'
194                    '208'='Convalescent Care Facility'
195                    '21'='Pulmonary Disease'
196                    '210'='Intermediate Care Facility'
197                    '215'='Residential Treatment Center'
198                    '22'='Rheumatology'
199                    '220'='Emergency Medicine'
200                    '225'='Hospitalist'
201                    '227'='Palliative Medicine'
202                    '23'='Mental Hlth/Chem Dep Day Care'
203                    '230'='Allergy & Immunology'
204                    '240'='Family Practice'
205                    '245'='Special Care Facility (NEC)'
206                    '25'='Rehabilitation Facilities'
207                    '250'='Dentist - MD & DDS (NEC)'
208                    '260'='Dental Specialist'
209                    '265'='Critical Care Medicine'
210                    '270'='Endocrinology & Metabolism'
211                    '275'='Gastroenterology'
3                                                                   The SAS System                                        10:34 Thursday, May 24, 2018

212                    '280'='Hematology'
213                    '285'='Infectious Disease'
214                    '290'='Nephrology'
215                    '295'='Pathology'
216                    '30'='Longterm Care (NEC)'
217                    '300'='Pediatric Pathology'
218                    '31'='Extended Care Facility'
219                    '32'='Geriatric Hospital'
220                    '320'='Radiology'
221                    '325'='Genetics'
222                    '33'='Convalescent Care Facility'
223                    '330'='Ophthalmology'
224                    '34'='Preventative Medicine'
225                    '340'='Otolaryngology'
226                    '35'='Psychiatry'
227                    '350'='Physical Medicine & Rehab'
228                    '355'='Plastic/Maxillofacial Surgery'
229                    '36'='Continuing Care Retirement Com'
230                    '360'='Proctology'
231                    '365'='Urology'
232                    '37'='Day/Night Care Center'
233                    '38'='Hospice Facility'
234                    '380'='Dermatology'
235                    '40'='Other Facility (NEC)'
236                    '400'='Pediatrician (NEC)'
237                    '41'='Infirmary'
238                    '410'='Pediatric Specialist (NEC)'
239                    '413'='Pediatric Nephrology'
240                    '415'='Pediatric Ophthalmology'
241                    '418'='Pediatric Orthopaedics'
242                    '42'='Special Care Facility (NEC)'
243                    '420'='Geriatric Medicine'
244                    '423'='Cardiovascular Dis/Cardiology'
245                    '425'='Neurology'
246                    '428'='Pediatric Emergency Medicine'
247                    '430'='Pediatric Allergy & Immunology'
248                    '433'='Pediatric Endocrinology'
249                    '435'='Neonatal-Perinatal Medicine'
250                    '438'='Pediatric Gastroenterology'
251                    '440'='Pediatric Cardiology'
252                    '443'='Pediatric Hematology-Oncology'
253                    '448'='Pediatric Infectious Diseases'
254                    '450'='Pediatric Rheumatology'
255                    '453'='Sports Medicine (Pediatrics)'
256                    '455'='Pediatric Urology'
257                    '458'='Child Psychiatry'
258                    '460'='Pediatric Medical Toxicology'
259                    '5'='Ambulatory Surgery Centers'
260                    '500'='Surgeon (NEC)'
261                    '505'='Surgical Specialist (NEC)'
262                    '510'='Colon & Rectal Surgery'
263                    '520'='Neurological Surgery'
264                    '530'='Orthopaedic Surgery'
265                    '535'='Abdominal Surgery'
266                    '540'='Cardiovascular Surgery'
267                    '545'='Dermatologic Surgery'
268                    '550'='General Vascular Surgery'
269                    '555'='Head and Neck Surgery'
270                    '560'='Pediatric Surgery'
271                    '565'='Surgical Critical Care'
272                    '570'='Transplant Surgery'
273                    '575'='Traumatic Surgery'
274                    '580'='Cardiothoracic Surgery'
275                    '585'='Thoracic Surgery'
276                    '6'='Urgent Care Facility'
277                    '805'='Dental Technician'
278                    '810'='Dietitian'
279                    '815'='Medical Technician'
280                    '820'='Midwife'
281                    '822'='Nursing Services'
282                    '824'='Psychiatric Nurse'
283                    '825'='Nurse Practitioner'
4                                                                   The SAS System                                        10:34 Thursday, May 24, 2018

284                    '827'='Nurse Anesthetist'
285                    '830'='Optometrist'
286                    '835'='Optician'
287                    '840'='Pharmacist'
288                    '845'='Physician Assistant'
289                    '850'='Therapy (Physical)'
290                    '853'='Therapists (Supportive)'
291                    '855'='Therapists (Alternative)'
292                    '857'='Renal Dialysis Therapy'
293                    '860'='Psychologist'
294                    '865'='Acupuncturist'
295                    '870'='Spiritual Healers'
296                    '900'='Health Educator/Agency'
297                    '905'='Transportation'
298                    '910'='Health Resort'
299                    '915'='Hearing Labs'
300                    '920'='Home Health Organiz/Agency'
301                    '925'='Imaging Center'
302                    '930'='Laboratory'
303                    '935'='Pharmacy'
304                    '940'='Supply Center'
305                    '945'='Vision Center'
306                    '950'='Public Health Agency'
307                    '955'='Unknown Clinic'
308                    '960'='Case Manager'
309        ;
NOTE: Format $PROVIDERTYPE has been output.
310        run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

311        
312        
313        
314        
315        proc import out = Work.comorbidityLookup
316                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Covariates Codebook-20170410.xlsx"
317                    dbms = xlsx
318                    replace;
319          sheet = "Comorbidity";
320          getnames = yes;
321          datarow = 2;
322        run;

NOTE:    Variable Name Change.  Compact Definion -> Compact_Definion                
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 1112 observations and 6 variables.
NOTE: WORK.COMORBIDITYLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.26 seconds
      cpu time            0.18 seconds
      

323        proc sql;
324          alter table Work.comorbidityLookup
325            add code varchar;
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 7 columns.
326          update Work.comorbidityLookup
327            set code = dequote(icd9_list);
NOTE: 1112 rows were updated in WORK.COMORBIDITYLOOKUP.

328          alter table Work.comorbidityLookup
329            drop compact_definion, icd9_list, billable, description, F;
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 2 columns.
330          delete from Work.comorbidityLookup
331            where missing(code);
NOTE: 1009 rows were deleted from WORK.COMORBIDITYLOOKUP.

5                                                                   The SAS System                                        10:34 Thursday, May 24, 2018

332          insert into Work.comorbidityLookup
333            values ("COPD or emphysema", "4910" )
334            values ("COPD or emphysema", "4911" )
335            values ("COPD or emphysema", "49120")
336            values ("COPD or emphysema", "49121")
337            values ("COPD or emphysema", "49122")
338            values ("COPD or emphysema", "4918" )
339            values ("COPD or emphysema", "4919" )
340            values ("COPD or emphysema", "4920" )
341            values ("COPD or emphysema", "4928" )
342            values ("COPD or emphysema", "496"  )
343            values ("COPD or emphysema", "49320")
344            values ("COPD or emphysema", "49321")
345            values ("COPD or emphysema", "49322");
NOTE: 13 rows were inserted into WORK.COMORBIDITYLOOKUP.

346        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.32 seconds
      cpu time            0.09 seconds
      

347        
348        
349        proc sql;
350        
351          %let select1 = select A.*, B.comorbidity;
352          %let join1 = inner join Work.comorbidityLookup B on (A.code = B.code);
353          create table DT.comorbiditiesOther as
354            select distinct
355                   C.database, C.exposure, C.patid, C.ASCohortDate, C.indexGNN, C.indexDate, C.indexID,
356                   C.age, C.sex,
357                   C.comorbidity,
358                   1 as indPreExposure
359            from (&select1 from UCB64.tempPrevDxAll A &join1) C;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table DT.COMORBIDITIESOTHER created, with 23285 rows and 11 columns.

360        
361          select comorbidity, database, exposure, sum(indPreExposure) as sumIndPreExposure
362            from DT.comorbiditiesOther
363            group by comorbidity, database, exposure;
                                                                  --- AS project ---                                  10:34 Thursday, May 24, 2018   1

                                                                                                      sumIndPre
                                       Comorbidity                        database    exposure         Exposure
                                       ------------------------------------------------------------------------
                                       COPD or emphysema                  MPCD        DMARD                  14
                                       COPD or emphysema                  MPCD        NSAID                  32
                                       COPD or emphysema                  MPCD        No exposure            78
                                       COPD or emphysema                  MPCD        TNF                    32
                                       COPD or emphysema                  Marketscan  DMARD                  35
                                       COPD or emphysema                  Marketscan  NSAID                 111
                                       COPD or emphysema                  Marketscan  No exposure           108
                                       COPD or emphysema                  Marketscan  TNF                   156
                                       COPD or emphysema                  Medicare    DMARD                 526
                                       COPD or emphysema                  Medicare    NSAID                1475
                                       COPD or emphysema                  Medicare    No exposure           699
                                       COPD or emphysema                  Medicare    TNF                   879
                                       Diabetes                           MPCD        DMARD                  26
                                       Diabetes                           MPCD        NSAID                  52
                                       Diabetes                           MPCD        No exposure           123
                                       Diabetes                           MPCD        TNF                    71
                                       Diabetes                           Marketscan  DMARD                 100
                                       Diabetes                           Marketscan  NSAID                 219
                                       Diabetes                           Marketscan  No exposure           220
                                       Diabetes                           Marketscan  TNF                   392
                                       Diabetes                           Medicare    DMARD                 615
                                       Diabetes                           Medicare    NSAID                1520
                                       Diabetes                           Medicare    No exposure           816
                                       Diabetes                           Medicare    TNF                  1082
                                       Hypertention                       MPCD        DMARD                  72
                                       Hypertention                       MPCD        NSAID                 129
                                       Hypertention                       MPCD        No exposure           274
                                       Hypertention                       MPCD        TNF                   232
                                       Hypertention                       Marketscan  DMARD                 329
                                       Hypertention                       Marketscan  NSAID                 728
                                       Hypertention                       Marketscan  No exposure           678
                                       Hypertention                       Marketscan  TNF                  1322
                                       Hypertention                       Medicare    DMARD                1328
                                       Hypertention                       Medicare    NSAID                3333
                                       Hypertention                       Medicare    No exposure          1927
                                       Hypertention                       Medicare    TNF                  2391
                                       Metabolic syndrome                 MPCD        DMARD                   4
                                       Metabolic syndrome                 MPCD        NSAID                   8
                                       Metabolic syndrome                 MPCD        No exposure            10
                                       Metabolic syndrome                 MPCD        TNF                     5
                                       Metabolic syndrome                 Marketscan  DMARD                  14
                                       Metabolic syndrome                 Marketscan  NSAID                  20
                                       Metabolic syndrome                 Marketscan  No exposure            24
                                       Metabolic syndrome                 Marketscan  TNF                    47
                                       Metabolic syndrome                 Medicare    DMARD                  39
                                       Metabolic syndrome                 Medicare    NSAID                 115
                                       Metabolic syndrome                 Medicare    No exposure            49
                                       Metabolic syndrome                 Medicare    TNF                    88
                                       Non-alcoholic fatty liver disease  MPCD        DMARD                   3
                                       Non-alcoholic fatty liver disease  MPCD        NSAID                   4
                                       Non-alcoholic fatty liver disease  MPCD        No exposure             4
                                       Non-alcoholic fatty liver disease  MPCD        TNF                    13
                                       Non-alcoholic fatty liver disease  Marketscan  DMARD                  12
                                       Non-alcoholic fatty liver disease  Marketscan  NSAID                  35
                                       Non-alcoholic fatty liver disease  Marketscan  No exposure            33
                                       Non-alcoholic fatty liver disease  Marketscan  TNF                   116
                                       Non-alcoholic fatty liver disease  Medicare    DMARD                  72
                                       Non-alcoholic fatty liver disease  Medicare    NSAID                 176
                                       Non-alcoholic fatty liver disease  Medicare    No exposure            94
                                       Non-alcoholic fatty liver disease  Medicare    TNF                   176
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
364        
365        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           6.11 seconds
      cpu time            7.19 seconds
      

366        
367        
368        
369        /*
370        BEGIN Fenglong's comorbidities code
371        
372        From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
373        Sent: Wednesday, November 29, 2017 1:32 PM
374        To: Benjamin Chan <chanb@ohsu.edu>
375        Subject: Attachment from my EndNote Library
376        
377        Hi, Ben
378        
379        Here are variable list included in our infection risk score model.
380        
381        Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
382        ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
383        
384        please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
384      ! variables.
385        
386        Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
6                                                                   The SAS System                                        10:34 Thursday, May 24, 2018

387        
388        Please let me know if you have any question.
389        
390        Fenglong
391         */
392        /*
393        Only use ICD-9 codes from previous 12 months for Charlson
394         */
395        /*
396        Last execution: 1/2/2018 (commit 56f369)
397        DO NOT EXECUTE AGAIN
398        Due to server upgrade (32-bit to 64-bit SAS), subsequent execution results in error:
399        "ERROR: Foreign datasets cannot be modified."
400         */
401        /*
402        proc sql;
403          create table UCB64.tempPrevDx12mPrior as
404            select *
405            from UCB64.tempPrevDxAll
406            where intnx("year", indexDate, -1, "same") < begin_date <= indexDate
407            order by indexID, indexDate;
408          create table UCB64.tempPrevPx12mPrior as
409            select *
410            from UCB64.tempPrevPxAll
411            where intnx("year", indexDate, -1, "same") < px_date <= indexDate
412            order by indexID, indexDate;
413          create table UCB64.tempPrevRx12mPrior as
414            select A.*, B.etc_name, B.source
415            from UCB64.tempPrevRxAll A left join
416                 DT.lookupNDC B on (A.ndc = B.ndc)
417            where intnx("year", indexDate, -1, "same") < dispense_date <= indexDate
418            order by indexID, indexDate;
419        quit;
420        
421        %include "lib\charlson.sas" / source2;
422        %include "lib\indicationDx.sas" / source2;
423        %include "lib\indicationPx.sas" / source2;
424        %include "lib\indicationRx.sas" / source2;
425        %include "lib\NumCnt.sas" / source2;
426        %include "lib\ciras.sas" / source2;
427        
428        %let CovariateListDx= hepatitisC fluVaccineDx JointSurgDx ulcer obese smoke
429                              lipidDx uveitis growthFail mammoDx PSAdx PapDx endoDx Sjogrens MI heartFailure stroke TIA EAM
430                              fistula_abscessDx hemaCa solidCa
431                              Hypertension angina fracture osteo icd7100; *covariate in 3rd line are from malignancy WG;
432        %indicationDx(indexID, indexDate);
433        
434        %let CovariateListPx = InflamMarker RehabVisit RF platelet LFT FluVaccine jointSurg lipidPx Coronary_Revas
435                               intraArticularInj MammoPx PSApx PAPpx endoPx FOBT J3490
436                               fistula_abscessPx ercpPx barium_ugiPx barium_colonPx;
437        %indicationPx(indexID, indexDate);
438        
439        %let CovariateListRx= chemo lipid dm folate fungus HTN naproxen narcotics nsaid sedative steroid tb thyroid viral
440                             dementia statin NSAIDcox BBlocker op_PPI op_bisphosp op_other
441                             thiazide thiazolidinedione anticoagulant
442                   antithrom antibiotics antipsych antidepres anticonvul calcium Adrenergic;
443        %indicationRx(indexID, indexDate);
444        proc means data = Work.indRx;
445          var &CovariateListRx;
446        run;
447        
448        %charlson(inputds = ,
449                  idVar = indexID,
450                  IndexDateVarName = indexDate,
451                  outputds = CCI,
452                  IndexVarName = Charlson,
453                  inpatonly = B,
454                  malig = N);
455        
456        %ciras(DT.indexLookup, indexID, indexDate);
457        
458        
7                                                                   The SAS System                                        10:34 Thursday, May 24, 2018

459        proc sql;
460          create table DT.charlsonIndex as select * from Work._WithCharlson;
461          create table DT.CIRAS as select * from Work.CIRAS;
462          create table DT.indRx as select * from Work.indRx;
463        quit;
464        proc contents data = DT.charlsonIndex order = varnum;
465        run;
466        proc contents data = DT.CIRAS order = varnum;
467        run;
468        proc contents data = DT.indRx order = varnum;
469        run;
470         */
471        /*
472        END Fenglong's comorbidities code
473         */
474        
475        
476        
477        
478        proc import out = Work.biologicsLookup
479                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Medicine - DMARDs & BIOs  -
479      ! 20170409.xlsx"
480                    dbms = xlsx
481                    replace;
482          sheet = "Sheet1";
483          getnames = yes;
484          datarow = 2;
485        run;

NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 789 observations and 8 variables.
NOTE: WORK.BIOLOGICSLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      

486        proc sql;
487          delete from Work.biologicsLookup
488            where category ^= "Biologic";
NOTE: 715 rows were deleted from WORK.BIOLOGICSLOOKUP.

489          select category, subcate as subcategory, gnn, count(*) as n
490            from Work.biologicsLookup
491            group by category, subcate, gnn;
                                                                  --- AS project ---                                  10:34 Thursday, May 24, 2018   2

                                                   Category  SubCate   GNN                        n
                                                   ------------------------------------------------
                                                   Biologic            BELIMUMAB                  2
                                                   Biologic            VEDOLIZUMAB                3
                                                   Biologic  Anti-IL6  TOCILIZUMAB                6
                                                   Biologic  Anti-TNF  ADALIMUMAB                12
                                                   Biologic  Anti-TNF  CERTOLIZUMAB               5
                                                   Biologic  Anti-TNF  ETANERCEPT                11
                                                   Biologic  Anti-TNF  GOLIMUMAB                  6
                                                   Biologic  Anti-TNF  INFLIXIMAB                 2
                                                   Biologic  Bcell     RITUXIMAB                  3
                                                   Biologic  IL12-23   USTEKINUMAB                6
                                                   Biologic  IL17      SECUKINUMAB                4
                                                   Biologic  IL1Ra     ANAKINRA                   6
                                                   Biologic  IL1Ra     CANAKINUMAB                2
                                                   Biologic  Tcell     ABATACEPT                  6
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
492        quit;
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.15 seconds
      cpu time            0.06 seconds
      

493        proc sql;
494          create table Work.indBiologics0 as
495            select A.database, A.patid, A.indexID,
496                   A.begin_date format = mmddyy10. as rxDate,
497                   "HCPCS" as codeType,
498                   A.px as drugCode,
499                   B.gnn as drugName,
500                   B.descript as drugDesc,
501                   . as dispense_sup
502              from UCB64.tempPrevPxAll A inner join
503                   Work.biologicsLookup B on (A.px = B.code)
504              where A.px_date < A.indexDate - 183
505            union corr
506            select A.database, A.patid, A.indexID,
507                   A.dispense_date format = mmddyy10. as rxDate,
508                   "NDC" as codeType,
509                   A.ndc as drugCode,
510                   B.gnn as drugName,
511                   B.descript as drugDesc,
512                   A.dispense_sup
8                                                                   The SAS System                                        10:34 Thursday, May 24, 2018

513              from UCB64.tempPrevRxAll A inner join
514                   Work.biologicsLookup B on (A.ndc = B.code)
515              where A.dispense_date < A.indexDate - 183;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table WORK.INDBIOLOGICS0 created, with 66470 rows and 9 columns.

516          select codeType, drugName, count(distinct patid) as countDistinctPatid
517            from Work.indBiologics0
518            group by codeType, drugName;
                                                                  --- AS project ---                                  10:34 Thursday, May 24, 2018   3

                                                                                         count
                                                       code                           Distinct
                                                       Type   GNN                        Patid
                                                       ---------------------------------------
                                                       HCPCS  ABATACEPT                     71
                                                       HCPCS  ADALIMUMAB                    15
                                                       HCPCS  CERTOLIZUMAB                  27
                                                       HCPCS  ETANERCEPT                    27
                                                       HCPCS  GOLIMUMAB                      2
                                                       HCPCS  INFLIXIMAB                  1502
                                                       HCPCS  RITUXIMAB                     45
                                                       HCPCS  TOCILIZUMAB                   30
                                                       HCPCS  USTEKINUMAB                    2
                                                       NDC    ABATACEPT                     12
                                                       NDC    ADALIMUMAB                  1559
                                                       NDC    ANAKINRA                       4
                                                       NDC    CERTOLIZUMAB                  48
                                                       NDC    ETANERCEPT                  1859
                                                       NDC    GOLIMUMAB                    273
                                                       NDC    INFLIXIMAB                    94
                                                       NDC    RITUXIMAB                      2
                                                       NDC    TOCILIZUMAB                    2
                                                       NDC    USTEKINUMAB                    3
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
519          create table DT.indBiologics as
520            select distinct
521                   A.database, A.patid, A.indexID,
522                   1 as indRxBiologics
523            from Work.indBiologics0 A;
NOTE: Table DT.INDBIOLOGICS created, with 6155 rows and 4 columns.

524        quit;
NOTE: The PROCEDURE SQL printed page 3.
NOTE: PROCEDURE SQL used (Total process time):
      real time           6.13 seconds
      cpu time            5.72 seconds
      

525        
526        
527        
528        
529        proc sql;
530        /*
531        Oral corticosteroid use
532        Mean outpatient prescribed daily dose of prednisone equivalents in the 6
533        months prior to index date: less than 5 mg/d (low dose), 5 to less than 10
534        mg/d (medium dose), and 10 mg/d or more (high dose)
535         */
536          create table DT.rxOralCorticosteroid as
537            select C.database, C.patid, C.indexID,
538                   1 as indOralCorticosteroid,
539                   sum(C.daysAtRisk * C.prednisodeEquivalentDose) as sumPredEq,
540                   sum(C.daysAtRisk) as sumDaysSupply,
541                   sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 as meanPredEqDose,
542                   case
543                     when 0 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 2.5 then "Low (<2.5 mg/d)"
544                     when 2.5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 5 then "Medium-Low (2.5-5 mg/d)"
545                     when 5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 10 then "Medium-High (5-10 mg/d)"
546                     when 10 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 then "High (10+ mg/d)"
547                     else ""
548                     end as meanPredEqDoseCat
549            from (select A.database, A.patid, A.indexID,
550                         A.indexDate - 183 format = mmddyy10. as riskStart,
551                         A.indexDate,
552                         A.dispense_date,
553                         A.dispense_date + A.dispense_sup - 1 format = mmddyy10. as dispense_end,
554                         A.dispense_sup,
555                         case
556                           /* Rx completely in at-risk period */
557                           when (A.indexDate - 183 <= A.dispense_date) & ((A.dispense_date + A.dispense_sup - 1) <= A.indexDate)
558                             then A.dispense_sup
559                           /* Rx begins before at-risk period */
560                           when (A.dispense_date < A.indexDate - 183)
561                             then A.dispense_sup - (A.indexDate - 183 - A.dispense_date)
562                           /* Rx ends after at-risk period */
563                           when (A.indexDate < (A.dispense_date + A.dispense_sup - 1))
564                             then A.dispense_sup - (A.dispense_date + A.dispense_sup - 1 - A.indexDate)
565                           else .
566                           end as daysAtRisk,
567                         B.prednisodeEquivalentDose
568                  from UCB64.tempPrevRxAll A inner join
569                       DT.lookupNDC B on (A.ndc = B.ndc)
570                  where ^missing(B.prednisodeEquivalentDose) &
571                        ((A.indexDate - 183 <= A.dispense_date <= A.indexDate) |
572                          (A.indexDate - 183 <= (A.dispense_date + A.dispense_sup - 1) <= A.indexDate))) C
9                                                                   The SAS System                                        10:34 Thursday, May 24, 2018

573            group by C.database, C.patid, C.indexID;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table DT.RXORALCORTICOSTEROID created, with 6737 rows and 8 columns.

574        /*
575        Create diagnosis code indicators from inpatient admissions
576         */
577          create table DT.diagIndicatorsInpatient as
578            select A.database, A.patid, A.indexID,
579                   count(distinct A.admit_date) as countIPAdmits12mPrior,
580                   case
581                     when count(distinct A.admit_date) > 0 then 1
582                     else 0
583                     end as indIPAdmit12mPrior
584            from UCB64.tempPrevDx12mPrior A
585            where A.enc_type = "IP"
586            group by A.database, A.patid, A.indexID;
ERROR: File UCB64.TEMPPREVDX12MPRIOR.DATA does not exist.
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
587        /*
588        Count encounters
589         */
590          create table Work.countAVPhysEncounters as
591            select B.database, B.patid, B.indexID,
592                   sum(indAVPhys12mPrior) as countAVPhys12mPrior
593            from (select distinct A.database, A.patid, A.indexID, A.begin_date,
594                         1 as indAVPhys12mPrior
595                  from UCB64.tempPrevPx12mPrior A
596                  where A.codeType = "CPT" &
597                        prxmatch("/^(992[0147][1-5])|(990((24)|(58)))/", A.code) &
598                        calculated indAVPhys12mPrior = 1) B
599            group by B.database, B.patid, B.indexID;
NOTE: Statement not executed due to NOEXEC option.
600          create table Work.countAVRheumEncounters as
601            select B.database, B.patid, B.indexID,
602                   sum(indAVRheum12mPrior) as countAVRheum12mPrior
603            from (select distinct A.database, A.patid, A.indexID, A.begin_date,
604                         case
605                           when A.database = "MPCD" & B.prov_type = "66" then 1
606                           when A.database = "Marketscan" & B.prov_type = "300" then 1
607                           when A.database = "Medicare" & B.prov_type = "66" then 1
608                           else .
609                           end as indAVRheum12mPrior
610                  from UCB64.tempPrevPx12mPrior A inner join
611                       UCB64.tempPrevDx12mPrior B on (A.database = B.database & A.patid = B.patid & A.encounterID = B.encounterID)
612                  where A.codeType = "CPT" &
613                        prxmatch("/^(992[0147][1-5])|(990((24)|(58)))/", A.code) &
614                        calculated indAVRheum12mPrior = 1) B
615            group by B.database, B.patid, B.indexID;
NOTE: Statement not executed due to NOEXEC option.
616          create table Work.countEREncounters as
617            select A.database, A.patid, A.indexID,
618                   count(distinct A.begin_date) as countERVisits,
619                   case
620                     when count(distinct A.begin_date) > 0 then 1
621                     else 0
622                     end as indERVisit12mPrior
623            from UCB64.tempPrevPx12mPrior A
624            where A.codeType = "CPT" & prxmatch("/^9928[1-5]/", code)
625            group by A.database, A.patid, A.indexID;
NOTE: Statement not executed due to NOEXEC option.
626          create table DT.countEncounters as
627            select coalesce(A.database, B.database, C.database) as database,
628                   coalesce(A.patid, B.patid, C.patid) as patid,
629                   coalesce(A.indexID, B.indexID, C.indexID) as indexID,
630                   A.countAVPhys12mPrior,
631                   B.countAVRheum12mPrior,
632                   C.indERVisit12mPrior,
633                   C.countERVisits
634            from Work.countAVPhysEncounters A full join
635                 Work.countAVRheumEncounters B on (A.indexID = B.indexID) full join
636                 Work.countEREncounters C on (A.indexID = C.indexID | B.indexID = C.indexID);
10                                                                  The SAS System                                        10:34 Thursday, May 24, 2018

NOTE: Statement not executed due to NOEXEC option.
637          select ^missing(countAVPhys12mPrior) as a,
638                 ^missing(countAVRheum12mPrior) as b,
639                 ^missing(indERVisit12mPrior) as c,
640                 count(*) as n
641            from DT.countEncounters
642            group by calculated a, calculated b, calculated c;
NOTE: Statement not executed due to NOEXEC option.
643        /*
644        Inhaled antibiotics
645        
646        IS A DAYS-SUPPLY CRITERION REQUIRED??
647          create table Work.indInhaledAntibiotics0 as
648            select A.patid, A.episodeID,
649                   A.begin_date format = mmddyy10. as rxDate,
650                   "HCPCS" as codeType,
651                   A.px as drugCode,
652                   "INJECTION" as drugRoute,
653                   B.descript as drugName,
654                   A.px_amt,
655                   . as dispense_sup,
656                   . as dispense_amt
657              from WRK.proccodesHCPCS12mPrior A inner join
658                   DT.lookupJcodes B on (A.px = B.code)
659              where lower(category) = "inhaled antibiotic"
660            union corr
661            select D.patid, D.episodeID,
662                   D.dispense_date format = mmddyy10. as rxDate,
663                   "NDC" as codeType,
664                   E.ndc as drugCode,
665                   D.rt as drugRoute,
666                   D.gnn as drugName,
667                   . as px_amt,
668                   D.dispense_sup,
669                   D.dispense_amt
670              from WRK.rx12mPrior D inner join
671                   DT.lookupNDC E on (D.ndc = E.ndc)
672              where (lower(E.etc_name) like '%antibiotic%' | lower(E.etc_name) like '%polymyxin%') &
673                    lowcase(E.rt) in ("inhalation", "intraven", "injection");
674          select codeType, drugRoute, drugName, count(distinct patid) as countDistinctPatid
675            from Work.indInhaledAntibiotics0
676            group by codeType, drugRoute, drugName;
677          create table Work.indInhaledAntibiotics1 as
678            select distinct
679                   A.patid, A.episodeID,
680                   1 as indInhaledAntibiotics
681            from Work.indInhaledAntibiotics0 A;
682         */
683        quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: SAS set option OBS=0 and will continue to check statements. This might cause NOTE: No observations in data set.
NOTE: PROCEDURE SQL used (Total process time):
      real time           1.99 seconds
      cpu time            1.84 seconds
      
684        
685        
686        /*
687        Code for outpatient infections
688        Use code for hospitalized infections
689        See queryPrevalentComorbidities.sas
690         */


691        proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
692          create table Work.defOutcomes as
693            select *
694            from DT.defOutcomes
695            where disease ^in ("Interstitial lung disease");
NOTE: Statement not executed due to NOEXEC option.
696        quit;
11                                                                  The SAS System                                        10:34 Thursday, May 24, 2018

NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


697        proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
698          create table DT.outpatientInfection as
699            select distinct
700                   A.database, A.patid, A.indexID,
701                   1 as indOutpatientInfection
702            from UCB64.tempPrevDxAll A inner join
703                 Work.defOutcomes B on (A.codeType = B.codeType & A.code = B.code)
704            where A.enc_type = "AV" &
705                  B.disease in ("Hospitalized infection");
NOTE: Statement not executed due to NOEXEC option.
706        quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
707        
708        
709        
710        
711        ods html close;

ERROR: Errors printed on page 9.

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           32.72 seconds
      cpu time            16.27 seconds
      
