1                                                          The SAS System                             11:54 Thursday, April 12, 2018

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

WARNING: Unable to copy SASUSER registry to WORK registry. Because of this, you will not see registry customizations during this 
         session.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           4.57 seconds
      cpu time            0.24 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=queryOtherComorbidities; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: h:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: W:\onenote\references\drug ndcs\sas data
127        footnote "&pgm.";
128        * footnote2 "%sysfunc(datetime(),datetime14.)";
2                                                                   The SAS System                                      11:54 Thursday, April 12, 2018

129        title1 '--- AS project ---';
130        **********************************************************************;
131        options macrogen mlogic mprint symbolgen;
132        options nomacrogen nomlogic nomprint nosymbolgen;
133        
134        
135        ods html
136          body = "output\&cmt..html"
137          style = Statistical;
NOTE: Writing HTML Body file: output\queryOtherComorbidities.html
138        
139        
140        
141        
142        /*
143        From: Yang, Shuo [mailto:shuoyang@uabmc.edu]
144        Sent: Tuesday, April 10, 2018 8:28 AM
145        To: Chen, Lang <langchen@uabmc.edu>; Benjamin Chan <chanb@ohsu.edu>
146        Subject: RE: Marketscan provider codes
147        
148        Hi Ben,
149        
150        Please see below formats that I created from marketscan data dictionary.
151        
152        Best,
153        
154        Shawn
155         */
156        proc format;
156      !                   /*<-- $PROVIDERTYPE. (from STDPROV) */
157              value $providerType
158                    '1'='Acute Care Hospital'
159                    '10'='Birthing Center'
160                    '100'='Pediatric Otolaryngology'
161                    '105'='Pediatric Critical Care Med'
162                    '120'='Chiropractor/DCM'
163                    '130'='Podiatry'
164                    '140'='Pain Mgmt/Pain Medicine'
165                    '145'='Pediatric Anesthesiology'
166                    '15'='Treatment Center'
167                    '150'='Anesthesiology'
168                    '160'='Nuclear Medicine'
169                    '170'='Mental Health/Chemical Dep NEC'
170                    '175'='Mental Health Facilities'
171                    '180'='Chemical Depend Treatment Ctr'
172                    '185'='Pediatric Radiology'
173                    '20'='Mental Health/Chemical Dep NEC'
174                    '200'='Medical Doctor - MD (NEC)'
175                    '202'='Osteopathic Medicine'
176                    '204'='Internal Medicine (NEC)'
177                    '206'='MultiSpecialty Physician Group'
178                    '208'='Convalescent Care Facility'
179                    '21'='Pulmonary Disease'
180                    '210'='Intermediate Care Facility'
181                    '215'='Residential Treatment Center'
182                    '22'='Rheumatology'
183                    '220'='Emergency Medicine'
184                    '225'='Hospitalist'
185                    '227'='Palliative Medicine'
186                    '23'='Mental Hlth/Chem Dep Day Care'
187                    '230'='Allergy & Immunology'
188                    '240'='Family Practice'
189                    '245'='Special Care Facility (NEC)'
190                    '25'='Rehabilitation Facilities'
191                    '250'='Dentist - MD & DDS (NEC)'
192                    '260'='Dental Specialist'
193                    '265'='Critical Care Medicine'
194                    '270'='Endocrinology & Metabolism'
195                    '275'='Gastroenterology'
196                    '280'='Hematology'
197                    '285'='Infectious Disease'
198                    '290'='Nephrology'
3                                                                   The SAS System                                      11:54 Thursday, April 12, 2018

199                    '295'='Pathology'
200                    '30'='Longterm Care (NEC)'
201                    '300'='Pediatric Pathology'
202                    '31'='Extended Care Facility'
203                    '32'='Geriatric Hospital'
204                    '320'='Radiology'
205                    '325'='Genetics'
206                    '33'='Convalescent Care Facility'
207                    '330'='Ophthalmology'
208                    '34'='Preventative Medicine'
209                    '340'='Otolaryngology'
210                    '35'='Psychiatry'
211                    '350'='Physical Medicine & Rehab'
212                    '355'='Plastic/Maxillofacial Surgery'
213                    '36'='Continuing Care Retirement Com'
214                    '360'='Proctology'
215                    '365'='Urology'
216                    '37'='Day/Night Care Center'
217                    '38'='Hospice Facility'
218                    '380'='Dermatology'
219                    '40'='Other Facility (NEC)'
220                    '400'='Pediatrician (NEC)'
221                    '41'='Infirmary'
222                    '410'='Pediatric Specialist (NEC)'
223                    '413'='Pediatric Nephrology'
224                    '415'='Pediatric Ophthalmology'
225                    '418'='Pediatric Orthopaedics'
226                    '42'='Special Care Facility (NEC)'
227                    '420'='Geriatric Medicine'
228                    '423'='Cardiovascular Dis/Cardiology'
229                    '425'='Neurology'
230                    '428'='Pediatric Emergency Medicine'
231                    '430'='Pediatric Allergy & Immunology'
232                    '433'='Pediatric Endocrinology'
233                    '435'='Neonatal-Perinatal Medicine'
234                    '438'='Pediatric Gastroenterology'
235                    '440'='Pediatric Cardiology'
236                    '443'='Pediatric Hematology-Oncology'
237                    '448'='Pediatric Infectious Diseases'
238                    '450'='Pediatric Rheumatology'
239                    '453'='Sports Medicine (Pediatrics)'
240                    '455'='Pediatric Urology'
241                    '458'='Child Psychiatry'
242                    '460'='Pediatric Medical Toxicology'
243                    '5'='Ambulatory Surgery Centers'
244                    '500'='Surgeon (NEC)'
245                    '505'='Surgical Specialist (NEC)'
246                    '510'='Colon & Rectal Surgery'
247                    '520'='Neurological Surgery'
248                    '530'='Orthopaedic Surgery'
249                    '535'='Abdominal Surgery'
250                    '540'='Cardiovascular Surgery'
251                    '545'='Dermatologic Surgery'
252                    '550'='General Vascular Surgery'
253                    '555'='Head and Neck Surgery'
254                    '560'='Pediatric Surgery'
255                    '565'='Surgical Critical Care'
256                    '570'='Transplant Surgery'
257                    '575'='Traumatic Surgery'
258                    '580'='Cardiothoracic Surgery'
259                    '585'='Thoracic Surgery'
260                    '6'='Urgent Care Facility'
261                    '805'='Dental Technician'
262                    '810'='Dietitian'
263                    '815'='Medical Technician'
264                    '820'='Midwife'
265                    '822'='Nursing Services'
266                    '824'='Psychiatric Nurse'
267                    '825'='Nurse Practitioner'
268                    '827'='Nurse Anesthetist'
269                    '830'='Optometrist'
270                    '835'='Optician'
4                                                                   The SAS System                                      11:54 Thursday, April 12, 2018

271                    '840'='Pharmacist'
272                    '845'='Physician Assistant'
273                    '850'='Therapy (Physical)'
274                    '853'='Therapists (Supportive)'
275                    '855'='Therapists (Alternative)'
276                    '857'='Renal Dialysis Therapy'
277                    '860'='Psychologist'
278                    '865'='Acupuncturist'
279                    '870'='Spiritual Healers'
280                    '900'='Health Educator/Agency'
281                    '905'='Transportation'
282                    '910'='Health Resort'
283                    '915'='Hearing Labs'
284                    '920'='Home Health Organiz/Agency'
285                    '925'='Imaging Center'
286                    '930'='Laboratory'
287                    '935'='Pharmacy'
288                    '940'='Supply Center'
289                    '945'='Vision Center'
290                    '950'='Public Health Agency'
291                    '955'='Unknown Clinic'
292                    '960'='Case Manager'
293        ;
NOTE: Format $PROVIDERTYPE has been output.
294        run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

295        
296        
297        
298        
299        proc import out = Work.comorbidityLookup
300                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Covariates Codebook-20170410.xlsx"
301                    dbms = xlsx
302                    replace;
303          sheet = "Comorbidity";
304          getnames = yes;
305          datarow = 2;
306        run;

NOTE:    Variable Name Change.  Compact Definion -> Compact_Definion                
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 1112 observations and 6 variables.
NOTE: WORK.COMORBIDITYLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.23 seconds
      cpu time            0.20 seconds
      

307        proc sql;
308          alter table Work.comorbidityLookup
309            add code varchar;
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 7 columns.
310          update Work.comorbidityLookup
311            set code = dequote(icd9_list);
NOTE: 1112 rows were updated in WORK.COMORBIDITYLOOKUP.

312          alter table Work.comorbidityLookup
313            drop compact_definion, icd9_list, billable, description, F;
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 2 columns.
314          delete from Work.comorbidityLookup
315            where missing(code);
NOTE: 1009 rows were deleted from WORK.COMORBIDITYLOOKUP.

316          insert into Work.comorbidityLookup
317            values ("COPD or emphysema", "4910" )
318            values ("COPD or emphysema", "4911" )
5                                                                   The SAS System                                      11:54 Thursday, April 12, 2018

319            values ("COPD or emphysema", "49120")
320            values ("COPD or emphysema", "49121")
321            values ("COPD or emphysema", "49122")
322            values ("COPD or emphysema", "4918" )
323            values ("COPD or emphysema", "4919" )
324            values ("COPD or emphysema", "4920" )
325            values ("COPD or emphysema", "4928" )
326            values ("COPD or emphysema", "496"  )
327            values ("COPD or emphysema", "49320")
328            values ("COPD or emphysema", "49321")
329            values ("COPD or emphysema", "49322");
NOTE: 13 rows were inserted into WORK.COMORBIDITYLOOKUP.

330        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.35 seconds
      cpu time            0.10 seconds
      

331        
332        
333        proc sql;
334        
335          %let select1 = select A.*, B.comorbidity;
336          %let join1 = inner join Work.comorbidityLookup B on (A.code = B.code);
337          create table DT.comorbiditiesOther as
338            select distinct
339                   C.database, C.exposure, C.patid, C.ASCohortDate, C.indexGNN, C.indexDate, C.indexID,
340                   C.age, C.sex,
341                   C.comorbidity,
342                   1 as indPreExposure
343            from (&select1 from UCB.tempPrevDxAll A &join1) C;
NOTE: Data set UCB.TEMPPREVDXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.COMORBIDITIESOTHER created, with 75789 rows and 11 columns.

344        
345          select comorbidity, database, exposure, sum(indPreExposure) as sumIndPreExposure
346            from DT.comorbiditiesOther
347            group by comorbidity, database, exposure;
                                                                  --- AS project ---                                11:54 Thursday, April 12, 2018   1

                                                                                                      sumIndPre
                                       Comorbidity                        database    exposure         Exposure
                                       ------------------------------------------------------------------------
                                       COPD or emphysema                  MPCD        DMARD                  37
                                       COPD or emphysema                  MPCD        NSAID                  63
                                       COPD or emphysema                  MPCD        No exposure           252
                                       COPD or emphysema                  MPCD        TNF                    61
                                       COPD or emphysema                  Marketscan  DMARD                 117
                                       COPD or emphysema                  Marketscan  NSAID                 378
                                       COPD or emphysema                  Marketscan  No exposure           501
                                       COPD or emphysema                  Marketscan  TNF                   259
                                       COPD or emphysema                  Medicare    DMARD                1856
                                       COPD or emphysema                  Medicare    NSAID                4801
                                       COPD or emphysema                  Medicare    No exposure          4641
                                       COPD or emphysema                  Medicare    TNF                  1741
                                       Diabetes                           MPCD        DMARD                  69
                                       Diabetes                           MPCD        NSAID                 121
                                       Diabetes                           MPCD        No exposure           401
                                       Diabetes                           MPCD        TNF                   135
                                       Diabetes                           Marketscan  DMARD                 268
                                       Diabetes                           Marketscan  NSAID                 669
                                       Diabetes                           Marketscan  No exposure           859
                                       Diabetes                           Marketscan  TNF                   636
                                       Diabetes                           Medicare    DMARD                2040
                                       Diabetes                           Medicare    NSAID                5212
                                       Diabetes                           Medicare    No exposure          5191
                                       Diabetes                           Medicare    TNF                  2117
                                       Hypertention                       MPCD        DMARD                 192
                                       Hypertention                       MPCD        NSAID                 359
                                       Hypertention                       MPCD        No exposure           863
                                       Hypertention                       MPCD        TNF                   437
                                       Hypertention                       Marketscan  DMARD                 864
                                       Hypertention                       Marketscan  NSAID                1996
                                       Hypertention                       Marketscan  No exposure          2449
                                       Hypertention                       Marketscan  TNF                  2152
                                       Hypertention                       Medicare    DMARD                4321
                                       Hypertention                       Medicare    NSAID               10763
                                       Hypertention                       Medicare    No exposure         11119
                                       Hypertention                       Medicare    TNF                  4484
                                       Metabolic syndrome                 MPCD        DMARD                   5
                                       Metabolic syndrome                 MPCD        NSAID                  14
                                       Metabolic syndrome                 MPCD        No exposure            21
                                       Metabolic syndrome                 MPCD        TNF                    13
                                       Metabolic syndrome                 Marketscan  DMARD                  43
                                       Metabolic syndrome                 Marketscan  NSAID                  57
                                       Metabolic syndrome                 Marketscan  No exposure            66
                                       Metabolic syndrome                 Marketscan  TNF                    79
                                       Metabolic syndrome                 Medicare    DMARD                 130
                                       Metabolic syndrome                 Medicare    NSAID                 343
                                       Metabolic syndrome                 Medicare    No exposure           228
                                       Metabolic syndrome                 Medicare    TNF                   171
                                       Non-alcoholic fatty liver disease  MPCD        DMARD                   6
                                       Non-alcoholic fatty liver disease  MPCD        NSAID                   9
                                       Non-alcoholic fatty liver disease  MPCD        No exposure            16
                                       Non-alcoholic fatty liver disease  MPCD        TNF                    23
                                       Non-alcoholic fatty liver disease  Marketscan  DMARD                  34
                                       Non-alcoholic fatty liver disease  Marketscan  NSAID                 117
                                       Non-alcoholic fatty liver disease  Marketscan  No exposure           126
                                       Non-alcoholic fatty liver disease  Marketscan  TNF                   168
                                       Non-alcoholic fatty liver disease  Medicare    DMARD                 261
                                       Non-alcoholic fatty liver disease  Medicare    NSAID                 639
                                       Non-alcoholic fatty liver disease  Medicare    No exposure           456
                                       Non-alcoholic fatty liver disease  Medicare    TNF                   340
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
348        
349        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           15.66 seconds
      cpu time            17.69 seconds
      

350        
351        
352        
353        /*
354        BEGIN Fenglong's comorbidities code
355        
356        From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
357        Sent: Wednesday, November 29, 2017 1:32 PM
358        To: Benjamin Chan <chanb@ohsu.edu>
359        Subject: Attachment from my EndNote Library
360        
361        Hi, Ben
362        
363        Here are variable list included in our infection risk score model.
364        
365        Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
366        ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
367        
368        please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
368      ! variables.
369        
370        Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
371        
6                                                                   The SAS System                                      11:54 Thursday, April 12, 2018

372        Please let me know if you have any question.
373        
374        Fenglong
375         */
376        /*
377        Only use ICD-9 codes from previous 12 months for Charlson
378         */
379        /*
380        Last execution: 1/2/2018 (commit 56f369)
381        DO NOT EXECUTE AGAIN
382        Due to server upgrade (32-bit to 64-bit SAS), subsequent execution results in error:
383        "ERROR: Foreign datasets cannot be modified."
384         */
385        /*
386        proc sql;
387          create table UCB.tempPrevDx12mPrior as
388            select *
389            from UCB.tempPrevDxAll
390            where intnx("year", indexDate, -1, "same") < begin_date <= indexDate
391            order by indexID, indexDate;
392          create table UCB.tempPrevPx12mPrior as
393            select *
394            from UCB.tempPrevPxAll
395            where intnx("year", indexDate, -1, "same") < px_date <= indexDate
396            order by indexID, indexDate;
397          create table UCB.tempPrevRx12mPrior as
398            select A.*, B.etc_name, B.source
399            from UCB.tempPrevRxAll A left join
400                 DT.lookupNDC B on (A.ndc = B.ndc)
401            where intnx("year", indexDate, -1, "same") < dispense_date <= indexDate
402            order by indexID, indexDate;
403        quit;
404        
405        %include "lib\charlson.sas" / source2;
406        %include "lib\indicationDx.sas" / source2;
407        %include "lib\indicationPx.sas" / source2;
408        %include "lib\indicationRx.sas" / source2;
409        %include "lib\NumCnt.sas" / source2;
410        %include "lib\ciras.sas" / source2;
411        
412        %let CovariateListDx= hepatitisC fluVaccineDx JointSurgDx ulcer obese smoke
413                              lipidDx uveitis growthFail mammoDx PSAdx PapDx endoDx Sjogrens MI heartFailure stroke TIA EAM
414                              fistula_abscessDx hemaCa solidCa
415                              Hypertension angina fracture osteo icd7100; *covariate in 3rd line are from malignancy WG;
416        %indicationDx(indexID, indexDate);
417        
418        %let CovariateListPx = InflamMarker RehabVisit RF platelet LFT FluVaccine jointSurg lipidPx Coronary_Revas
419                               intraArticularInj MammoPx PSApx PAPpx endoPx FOBT J3490
420                               fistula_abscessPx ercpPx barium_ugiPx barium_colonPx;
421        %indicationPx(indexID, indexDate);
422        
423        %let CovariateListRx= chemo lipid dm folate fungus HTN naproxen narcotics nsaid sedative steroid tb thyroid viral
424                             dementia statin NSAIDcox BBlocker op_PPI op_bisphosp op_other
425                             thiazide thiazolidinedione anticoagulant
426                   antithrom antibiotics antipsych antidepres anticonvul calcium Adrenergic;
427        %indicationRx(indexID, indexDate);
428        proc means data = Work.indRx;
429          var &CovariateListRx;
430        run;
431        
432        %charlson(inputds = ,
433                  idVar = indexID,
434                  IndexDateVarName = indexDate,
435                  outputds = CCI,
436                  IndexVarName = Charlson,
437                  inpatonly = B,
438                  malig = N);
439        
440        %ciras(DT.indexLookup, indexID, indexDate);
441        
442        
443        proc sql;
7                                                                   The SAS System                                      11:54 Thursday, April 12, 2018

444          create table DT.charlsonIndex as select * from Work._WithCharlson;
445          create table DT.CIRAS as select * from Work.CIRAS;
446          create table DT.indRx as select * from Work.indRx;
447        quit;
448        proc contents data = DT.charlsonIndex order = varnum;
449        run;
450        proc contents data = DT.CIRAS order = varnum;
451        run;
452        proc contents data = DT.indRx order = varnum;
453        run;
454         */
455        /*
456        END Fenglong's comorbidities code
457         */
458        
459        
460        
461        
462        proc import out = Work.biologicsLookup
463                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Medicine - DMARDs & BIOs  -
463      ! 20170409.xlsx"
464                    dbms = xlsx
465                    replace;
466          sheet = "Sheet1";
467          getnames = yes;
468          datarow = 2;
469        run;

NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 789 observations and 8 variables.
NOTE: WORK.BIOLOGICSLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
      

470        proc sql;
471          delete from Work.biologicsLookup
472            where category ^= "Biologic";
NOTE: 715 rows were deleted from WORK.BIOLOGICSLOOKUP.

473          select category, subcate as subcategory, gnn, count(*) as n
474            from Work.biologicsLookup
475            group by category, subcate, gnn;
                                                                  --- AS project ---                                11:54 Thursday, April 12, 2018   2

                                                   Category  SubCate   GNN                        n
                                                   ------------------------------------------------
                                                   Biologic            BELIMUMAB                  2
                                                   Biologic            VEDOLIZUMAB                3
                                                   Biologic  Anti-IL6  TOCILIZUMAB                6
                                                   Biologic  Anti-TNF  ADALIMUMAB                12
                                                   Biologic  Anti-TNF  CERTOLIZUMAB               5
                                                   Biologic  Anti-TNF  ETANERCEPT                11
                                                   Biologic  Anti-TNF  GOLIMUMAB                  6
                                                   Biologic  Anti-TNF  INFLIXIMAB                 2
                                                   Biologic  Bcell     RITUXIMAB                  3
                                                   Biologic  IL12-23   USTEKINUMAB                6
                                                   Biologic  IL17      SECUKINUMAB                4
                                                   Biologic  IL1Ra     ANAKINRA                   6
                                                   Biologic  IL1Ra     CANAKINUMAB                2
                                                   Biologic  Tcell     ABATACEPT                  6
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
476        quit;
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
      

477        proc sql;
478          create table Work.indBiologics0 as
479            select A.database, A.patid, A.indexID,
480                   A.begin_date format = mmddyy10. as rxDate,
481                   "HCPCS" as codeType,
482                   A.px as drugCode,
483                   B.gnn as drugName,
484                   B.descript as drugDesc,
485                   . as dispense_sup
486              from UCB.tempPrevPxAll A inner join
487                   Work.biologicsLookup B on (A.px = B.code)
488              where A.px_date < A.indexDate
489            union corr
490            select A.database, A.patid, A.indexID,
491                   A.dispense_date format = mmddyy10. as rxDate,
492                   "NDC" as codeType,
493                   A.ndc as drugCode,
494                   B.gnn as drugName,
495                   B.descript as drugDesc,
496                   A.dispense_sup
497              from UCB.tempPrevRxAll A inner join
8                                                                   The SAS System                                      11:54 Thursday, April 12, 2018

498                   Work.biologicsLookup B on (A.ndc = B.code)
499              where A.dispense_date < A.indexDate;
NOTE: Data set UCB.TEMPPREVPXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.TEMPPREVRXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.INDBIOLOGICS0 created, with 123147 rows and 9 columns.

500          select codeType, drugName, count(distinct patid) as countDistinctPatid
501            from Work.indBiologics0
502            group by codeType, drugName;
                                                                  --- AS project ---                                11:54 Thursday, April 12, 2018   3

                                                                                         count
                                                       code                           Distinct
                                                       Type   GNN                        Patid
                                                       ---------------------------------------
                                                       HCPCS  ABATACEPT                    349
                                                       HCPCS  ADALIMUMAB                    37
                                                       HCPCS  CERTOLIZUMAB                  80
                                                       HCPCS  ETANERCEPT                    59
                                                       HCPCS  GOLIMUMAB                     14
                                                       HCPCS  INFLIXIMAB                  2841
                                                       HCPCS  RITUXIMAB                    227
                                                       HCPCS  TOCILIZUMAB                  117
                                                       HCPCS  USTEKINUMAB                    5
                                                       NDC    ABATACEPT                     67
                                                       NDC    ADALIMUMAB                  2683
                                                       NDC    ANAKINRA                      19
                                                       NDC    CERTOLIZUMAB                 124
                                                       NDC    ETANERCEPT                  3088
                                                       NDC    GOLIMUMAB                    431
                                                       NDC    INFLIXIMAB                   155
                                                       NDC    RITUXIMAB                      8
                                                       NDC    TOCILIZUMAB                   10
                                                       NDC    USTEKINUMAB                   11
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
503          create table DT.indBiologics as
504            select distinct
505                   A.database, A.patid, A.indexID,
506                   1 as indRxBiologics
507            from Work.indBiologics0 A;
NOTE: Table DT.INDBIOLOGICS created, with 11150 rows and 4 columns.

508        quit;
NOTE: The PROCEDURE SQL printed page 3.
NOTE: PROCEDURE SQL used (Total process time):
      real time           24.83 seconds
      cpu time            24.78 seconds
      

509        
510        
511        
512        
513        proc sql;
514        /*
515        Oral corticosteroid use
516        Mean outpatient prescribed daily dose of prednisone equivalents in the 6
517        months prior to index date: less than 5 mg/d (low dose), 5 to less than 10
518        mg/d (medium dose), and 10 mg/d or more (high dose)
519         */
520          create table DT.rxOralCorticosteroid as
521            select C.database, C.patid, C.indexID,
522                   1 as indOralCorticosteroid,
523                   sum(C.daysAtRisk * C.prednisodeEquivalentDose) as sumPredEq,
524                   sum(C.daysAtRisk) as sumDaysSupply,
525                   sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 as meanPredEqDose,
526                   case
527                     when 0 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 2.5 then "Low (<2.5 mg/d)"
528                     when 2.5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 5 then "Medium-Low (2.5-5 mg/d)"
529                     when 5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 10 then "Medium-High (5-10 mg/d)"
530                     when 10 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 then "High (10+ mg/d)"
531                     else ""
532                     end as meanPredEqDoseCat
533            from (select A.database, A.patid, A.indexID,
534                         A.indexDate - 183 format = mmddyy10. as riskStart,
535                         A.indexDate,
536                         A.dispense_date,
537                         A.dispense_date + A.dispense_sup - 1 format = mmddyy10. as dispense_end,
538                         A.dispense_sup,
539                         case
540                           /* Rx completely in at-risk period */
541                           when (A.indexDate - 183 <= A.dispense_date) & ((A.dispense_date + A.dispense_sup - 1) <= A.indexDate)
542                             then A.dispense_sup
543                           /* Rx begins before at-risk period */
544                           when (A.dispense_date < A.indexDate - 183)
545                             then A.dispense_sup - (A.indexDate - 183 - A.dispense_date)
546                           /* Rx ends after at-risk period */
547                           when (A.indexDate < (A.dispense_date + A.dispense_sup - 1))
548                             then A.dispense_sup - (A.dispense_date + A.dispense_sup - 1 - A.indexDate)
549                           else .
550                           end as daysAtRisk,
551                         B.prednisodeEquivalentDose
9                                                                   The SAS System                                      11:54 Thursday, April 12, 2018

552                  from UCB.tempPrevRxAll A inner join
553                       DT.lookupNDC B on (A.ndc = B.ndc)
554                  where ^missing(B.prednisodeEquivalentDose) &
555                        ((A.indexDate - 183 <= A.dispense_date <= A.indexDate) |
556                          (A.indexDate - 183 <= (A.dispense_date + A.dispense_sup - 1) <= A.indexDate))) C
557            group by C.database, C.patid, C.indexID;
NOTE: Data set UCB.TEMPPREVRXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.RXORALCORTICOSTEROID created, with 18717 rows and 8 columns.

558        /*
559        Create diagnosis code indicators from inpatient admissions
560         */
561          create table DT.diagIndicatorsInpatient as
562            select A.database, A.patid, A.indexID,
563                   count(distinct A.admit_date) as countIPAdmits,
564                   case
565                     when count(distinct A.admit_date) > 0 then 1
566                     else 0
567                     end as indIPAdmit12mPrior
568            from UCB.tempPrevDx12mPrior A
569            where A.enc_type = "IP"
570            group by A.database, A.patid, A.indexID;
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.DIAGINDICATORSINPATIENT created, with 17714 rows and 5 columns.

571        /*
572        Count encounters
573         */
574          create table Work.countAVPhysEncounters as
575            select B.database, B.patid, B.indexID,
576                   sum(indAVPhys12mPrior) as countAVPhys12mPrior
577            from (select distinct A.database, A.patid, A.indexID, A.begin_date,
578                         1 as indAVPhys12mPrior
579                  from UCB.tempPrevPx12mPrior A
580                  where A.codeType = "CPT" &
581                        prxmatch("/^(992[0147][1-5])|(990((24)|(58)))/", A.code) &
582                        calculated indAVPhys12mPrior = 1) B
583            group by B.database, B.patid, B.indexID;
NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTAVPHYSENCOUNTERS created, with 59281 rows and 4 columns.

584          create table Work.countAVRheumEncounters as
585            select B.database, B.patid, B.indexID,
586                   sum(indAVRheum12mPrior) as countAVRheum12mPrior
587            from (select distinct A.database, A.patid, A.indexID, A.begin_date,
588                         case
589                           when A.database = "MPCD" & B.prov_type = "66" then 1
590                           when A.database = "Marketscan" & B.prov_type = "300" then 1
591                           when A.database = "Medicare" & B.prov_type = "66" then 1
592                           else .
593                           end as indAVRheum12mPrior
594                  from UCB.tempPrevPx12mPrior A inner join
595                       UCB.tempPrevDx12mPrior B on (A.database = B.database & A.patid = B.patid & A.encounterID = B.encounterID)
596                  where A.codeType = "CPT" &
597                        prxmatch("/^(992[0147][1-5])|(990((24)|(58)))/", A.code) &
598                        calculated indAVRheum12mPrior = 1) B
599            group by B.database, B.patid, B.indexID;
NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTAVRHEUMENCOUNTERS created, with 45326 rows and 4 columns.

600          create table Work.countEREncounters as
601            select A.database, A.patid, A.indexID,
10                                                                  The SAS System                                      11:54 Thursday, April 12, 2018

602                   count(distinct A.begin_date) as countERVisits,
603                   case
604                     when count(distinct A.begin_date) > 0 then 1
605                     else 0
606                     end as indERVisit12mPrior
607            from UCB.tempPrevPx12mPrior A
608            where A.codeType = "CPT" & prxmatch("/^9928[1-5]/", code)
609            group by A.database, A.patid, A.indexID;
NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTERENCOUNTERS created, with 24309 rows and 5 columns.

610          create table DT.countEncounters as
611            select coalesce(A.database, B.database, C.database) as database,
612                   coalesce(A.patid, B.patid, C.patid) as patid,
613                   coalesce(A.indexID, B.indexID, C.indexID) as indexID,
614                   A.countAVPhys12mPrior,
615                   B.countAVRheum12mPrior,
616                   C.indERVisit12mPrior,
617                   C.countERVisits
618            from Work.countAVPhysEncounters A full join
619                 Work.countAVRheumEncounters B on (A.indexID = B.indexID) full join
620                 Work.countEREncounters C on (A.indexID = C.indexID | B.indexID = C.indexID);
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table DT.COUNTENCOUNTERS created, with 59725 rows and 7 columns.

621          select ^missing(countAVPhys12mPrior) as a,
622                 ^missing(countAVRheum12mPrior) as b,
623                 ^missing(indERVisit12mPrior) as c,
624                 count(*) as n
625            from DT.countEncounters
626            group by calculated a, calculated b, calculated c;
                                                                  --- AS project ---                                11:54 Thursday, April 12, 2018   4

                                                               a         b         c         n
                                                        --------------------------------------
                                                               0         0         1       444
                                                               1         0         0      5444
                                                               1         0         1      8511
                                                               1         1         0     29972
                                                               1         1         1     15354
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
627        /*
628        Inhaled antibiotics
629        
630        IS A DAYS-SUPPLY CRITERION REQUIRED??
631          create table Work.indInhaledAntibiotics0 as
632            select A.patid, A.episodeID,
633                   A.begin_date format = mmddyy10. as rxDate,
634                   "HCPCS" as codeType,
635                   A.px as drugCode,
636                   "INJECTION" as drugRoute,
637                   B.descript as drugName,
638                   A.px_amt,
639                   . as dispense_sup,
640                   . as dispense_amt
641              from WRK.proccodesHCPCS12mPrior A inner join
642                   DT.lookupJcodes B on (A.px = B.code)
643              where lower(category) = "inhaled antibiotic"
644            union corr
645            select D.patid, D.episodeID,
646                   D.dispense_date format = mmddyy10. as rxDate,
647                   "NDC" as codeType,
648                   E.ndc as drugCode,
649                   D.rt as drugRoute,
650                   D.gnn as drugName,
651                   . as px_amt,
652                   D.dispense_sup,
653                   D.dispense_amt
654              from WRK.rx12mPrior D inner join
655                   DT.lookupNDC E on (D.ndc = E.ndc)
656              where (lower(E.etc_name) like '%antibiotic%' | lower(E.etc_name) like '%polymyxin%') &
657                    lowcase(E.rt) in ("inhalation", "intraven", "injection");
658          select codeType, drugRoute, drugName, count(distinct patid) as countDistinctPatid
659            from Work.indInhaledAntibiotics0
660            group by codeType, drugRoute, drugName;
661          create table Work.indInhaledAntibiotics1 as
662            select distinct
663                   A.patid, A.episodeID,
664                   1 as indInhaledAntibiotics
665            from Work.indInhaledAntibiotics0 A;
11                                                                  The SAS System                                      11:54 Thursday, April 12, 2018

666         */
667        quit;
NOTE: The PROCEDURE SQL printed page 4.
NOTE: PROCEDURE SQL used (Total process time):
      real time           1:22.00
      cpu time            1:25.38
      

668        
669        
670        
671        
672        ods html close;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           2:20.44
      cpu time            2:09.07
      
