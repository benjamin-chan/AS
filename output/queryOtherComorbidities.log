1                                          The SAS System             04:49 Wednesday, June 13, 2018

NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           0.42 seconds
      cpu time            0.37 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=queryOtherComorbidities; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref UCB64 was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB64\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: W:\onenote\references\drug ndcs\sas data
143        footnote "&pgm.";
144        * footnote2 "%sysfunc(datetime(),datetime14.)";
145        title1 '--- AS project ---';
146        **********************************************************************;
147        options macrogen mlogic mprint symbolgen;
148        options nomacrogen nomlogic nomprint nosymbolgen;
2                                                                   The SAS System                                      04:49 Wednesday, June 13, 2018

149        
150        
151        ods html
152          body = "output\&cmt..html"
153          style = Statistical;
NOTE: Writing HTML Body file: output\queryOtherComorbidities.html
154        
155        
156        
157        
158        /*
159        From: Yang, Shuo [mailto:shuoyang@uabmc.edu]
160        Sent: Tuesday, April 10, 2018 8:28 AM
161        To: Chen, Lang <langchen@uabmc.edu>; Benjamin Chan <chanb@ohsu.edu>
162        Subject: RE: Marketscan provider codes
163        
164        Hi Ben,
165        
166        Please see below formats that I created from marketscan data dictionary.
167        
168        Best,
169        
170        Shawn
171         */
172        proc format;
172      !                   /*<-- $PROVIDERTYPE. (from STDPROV) */
173              value $providerType
174                    '1'='Acute Care Hospital'
175                    '10'='Birthing Center'
176                    '100'='Pediatric Otolaryngology'
177                    '105'='Pediatric Critical Care Med'
178                    '120'='Chiropractor/DCM'
179                    '130'='Podiatry'
180                    '140'='Pain Mgmt/Pain Medicine'
181                    '145'='Pediatric Anesthesiology'
182                    '15'='Treatment Center'
183                    '150'='Anesthesiology'
184                    '160'='Nuclear Medicine'
185                    '170'='Mental Health/Chemical Dep NEC'
186                    '175'='Mental Health Facilities'
187                    '180'='Chemical Depend Treatment Ctr'
188                    '185'='Pediatric Radiology'
189                    '20'='Mental Health/Chemical Dep NEC'
190                    '200'='Medical Doctor - MD (NEC)'
191                    '202'='Osteopathic Medicine'
192                    '204'='Internal Medicine (NEC)'
193                    '206'='MultiSpecialty Physician Group'
194                    '208'='Convalescent Care Facility'
195                    '21'='Pulmonary Disease'
196                    '210'='Intermediate Care Facility'
197                    '215'='Residential Treatment Center'
198                    '22'='Rheumatology'
199                    '220'='Emergency Medicine'
200                    '225'='Hospitalist'
201                    '227'='Palliative Medicine'
202                    '23'='Mental Hlth/Chem Dep Day Care'
203                    '230'='Allergy & Immunology'
204                    '240'='Family Practice'
205                    '245'='Special Care Facility (NEC)'
206                    '25'='Rehabilitation Facilities'
207                    '250'='Dentist - MD & DDS (NEC)'
208                    '260'='Dental Specialist'
209                    '265'='Critical Care Medicine'
210                    '270'='Endocrinology & Metabolism'
211                    '275'='Gastroenterology'
212                    '280'='Hematology'
213                    '285'='Infectious Disease'
214                    '290'='Nephrology'
215                    '295'='Pathology'
216                    '30'='Longterm Care (NEC)'
217                    '300'='Pediatric Pathology'
218                    '31'='Extended Care Facility'
3                                                                   The SAS System                                      04:49 Wednesday, June 13, 2018

219                    '32'='Geriatric Hospital'
220                    '320'='Radiology'
221                    '325'='Genetics'
222                    '33'='Convalescent Care Facility'
223                    '330'='Ophthalmology'
224                    '34'='Preventative Medicine'
225                    '340'='Otolaryngology'
226                    '35'='Psychiatry'
227                    '350'='Physical Medicine & Rehab'
228                    '355'='Plastic/Maxillofacial Surgery'
229                    '36'='Continuing Care Retirement Com'
230                    '360'='Proctology'
231                    '365'='Urology'
232                    '37'='Day/Night Care Center'
233                    '38'='Hospice Facility'
234                    '380'='Dermatology'
235                    '40'='Other Facility (NEC)'
236                    '400'='Pediatrician (NEC)'
237                    '41'='Infirmary'
238                    '410'='Pediatric Specialist (NEC)'
239                    '413'='Pediatric Nephrology'
240                    '415'='Pediatric Ophthalmology'
241                    '418'='Pediatric Orthopaedics'
242                    '42'='Special Care Facility (NEC)'
243                    '420'='Geriatric Medicine'
244                    '423'='Cardiovascular Dis/Cardiology'
245                    '425'='Neurology'
246                    '428'='Pediatric Emergency Medicine'
247                    '430'='Pediatric Allergy & Immunology'
248                    '433'='Pediatric Endocrinology'
249                    '435'='Neonatal-Perinatal Medicine'
250                    '438'='Pediatric Gastroenterology'
251                    '440'='Pediatric Cardiology'
252                    '443'='Pediatric Hematology-Oncology'
253                    '448'='Pediatric Infectious Diseases'
254                    '450'='Pediatric Rheumatology'
255                    '453'='Sports Medicine (Pediatrics)'
256                    '455'='Pediatric Urology'
257                    '458'='Child Psychiatry'
258                    '460'='Pediatric Medical Toxicology'
259                    '5'='Ambulatory Surgery Centers'
260                    '500'='Surgeon (NEC)'
261                    '505'='Surgical Specialist (NEC)'
262                    '510'='Colon & Rectal Surgery'
263                    '520'='Neurological Surgery'
264                    '530'='Orthopaedic Surgery'
265                    '535'='Abdominal Surgery'
266                    '540'='Cardiovascular Surgery'
267                    '545'='Dermatologic Surgery'
268                    '550'='General Vascular Surgery'
269                    '555'='Head and Neck Surgery'
270                    '560'='Pediatric Surgery'
271                    '565'='Surgical Critical Care'
272                    '570'='Transplant Surgery'
273                    '575'='Traumatic Surgery'
274                    '580'='Cardiothoracic Surgery'
275                    '585'='Thoracic Surgery'
276                    '6'='Urgent Care Facility'
277                    '805'='Dental Technician'
278                    '810'='Dietitian'
279                    '815'='Medical Technician'
280                    '820'='Midwife'
281                    '822'='Nursing Services'
282                    '824'='Psychiatric Nurse'
283                    '825'='Nurse Practitioner'
284                    '827'='Nurse Anesthetist'
285                    '830'='Optometrist'
286                    '835'='Optician'
287                    '840'='Pharmacist'
288                    '845'='Physician Assistant'
289                    '850'='Therapy (Physical)'
290                    '853'='Therapists (Supportive)'
4                                                                   The SAS System                                      04:49 Wednesday, June 13, 2018

291                    '855'='Therapists (Alternative)'
292                    '857'='Renal Dialysis Therapy'
293                    '860'='Psychologist'
294                    '865'='Acupuncturist'
295                    '870'='Spiritual Healers'
296                    '900'='Health Educator/Agency'
297                    '905'='Transportation'
298                    '910'='Health Resort'
299                    '915'='Hearing Labs'
300                    '920'='Home Health Organiz/Agency'
301                    '925'='Imaging Center'
302                    '930'='Laboratory'
303                    '935'='Pharmacy'
304                    '940'='Supply Center'
305                    '945'='Vision Center'
306                    '950'='Public Health Agency'
307                    '955'='Unknown Clinic'
308                    '960'='Case Manager'
309        ;
NOTE: Format $PROVIDERTYPE has been output.
310        run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

311        
312        
313        
314        
315        proc import out = Work.comorbidityLookup
316                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Covariates Codebook-20170410.xlsx"
317                    dbms = xlsx
318                    replace;
319          sheet = "Comorbidity";
320          getnames = yes;
321          datarow = 2;
322        run;

NOTE:    Variable Name Change.  Compact Definion -> Compact_Definion                
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 1112 observations and 6 variables.
NOTE: WORK.COMORBIDITYLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.38 seconds
      cpu time            0.20 seconds
      

323        proc sql;
324          alter table Work.comorbidityLookup
325            add code varchar;
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 7 columns.
326          update Work.comorbidityLookup
327            set code = dequote(icd9_list);
NOTE: 1112 rows were updated in WORK.COMORBIDITYLOOKUP.

328          alter table Work.comorbidityLookup
329            drop compact_definion, icd9_list, billable, description, F;
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 2 columns.
330          delete from Work.comorbidityLookup
331            where missing(code);
NOTE: 1009 rows were deleted from WORK.COMORBIDITYLOOKUP.

332          insert into Work.comorbidityLookup
333            values ("COPD or emphysema", "4910" )
334            values ("COPD or emphysema", "4911" )
335            values ("COPD or emphysema", "49120")
336            values ("COPD or emphysema", "49121")
337            values ("COPD or emphysema", "49122")
338            values ("COPD or emphysema", "4918" )
5                                                                   The SAS System                                      04:49 Wednesday, June 13, 2018

339            values ("COPD or emphysema", "4919" )
340            values ("COPD or emphysema", "4920" )
341            values ("COPD or emphysema", "4928" )
342            values ("COPD or emphysema", "496"  )
343            values ("COPD or emphysema", "49320")
344            values ("COPD or emphysema", "49321")
345            values ("COPD or emphysema", "49322");
NOTE: 13 rows were inserted into WORK.COMORBIDITYLOOKUP.

346        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.35 seconds
      cpu time            0.04 seconds
      

347        
348        
349        proc sql;
350        
351          %let select1 = select A.*, B.comorbidity;
352          %let join1 = inner join Work.comorbidityLookup B on (A.code = B.code);
353          create table DT.comorbiditiesOther as
354            select distinct
355                   C.database, C.exposure, C.patid, C.ASCohortDate, C.indexGNN, C.indexDate, C.indexID,
356                   C.age, C.sex,
357                   C.comorbidity,
358                   1 as indPreExposure
359            from (&select1 from UCB64.tempPrevDxAll A &join1) C;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table DT.COMORBIDITIESOTHER created, with 13090 rows and 11 columns.

360        
361          select comorbidity, database, exposure, sum(indPreExposure) as sumIndPreExposure
362            from DT.comorbiditiesOther
363            group by comorbidity, database, exposure;
                                                                  --- AS project ---                                04:49 Wednesday, June 13, 2018   1

                                                                                                      sumIndPre
                                       Comorbidity                        database    exposure         Exposure
                                       ------------------------------------------------------------------------
                                       COPD or emphysema                  MPCD        DMARD                  14
                                       COPD or emphysema                  MPCD        NSAID                  32
                                       COPD or emphysema                  MPCD        No exposure            78
                                       COPD or emphysema                  MPCD        TNF                    32
                                       COPD or emphysema                  Marketscan  DMARD                  35
                                       COPD or emphysema                  Marketscan  NSAID                 111
                                       COPD or emphysema                  Marketscan  No exposure           108
                                       COPD or emphysema                  Marketscan  TNF                   156
                                       COPD or emphysema                  Medicare    DMARD                 206
                                       COPD or emphysema                  Medicare    NSAID                 595
                                       COPD or emphysema                  Medicare    No exposure           383
                                       COPD or emphysema                  Medicare    TNF                   245
                                       Diabetes                           MPCD        DMARD                  26
                                       Diabetes                           MPCD        NSAID                  52
                                       Diabetes                           MPCD        No exposure           123
                                       Diabetes                           MPCD        TNF                    71
                                       Diabetes                           Marketscan  DMARD                 100
                                       Diabetes                           Marketscan  NSAID                 219
                                       Diabetes                           Marketscan  No exposure           220
                                       Diabetes                           Marketscan  TNF                   392
                                       Diabetes                           Medicare    DMARD                 259
                                       Diabetes                           Medicare    NSAID                 644
                                       Diabetes                           Medicare    No exposure           457
                                       Diabetes                           Medicare    TNF                   298
                                       Hypertention                       MPCD        DMARD                  72
                                       Hypertention                       MPCD        NSAID                 129
                                       Hypertention                       MPCD        No exposure           274
                                       Hypertention                       MPCD        TNF                   232
                                       Hypertention                       Marketscan  DMARD                 329
                                       Hypertention                       Marketscan  NSAID                 728
                                       Hypertention                       Marketscan  No exposure           678
                                       Hypertention                       Marketscan  TNF                  1322
                                       Hypertention                       Medicare    DMARD                 576
                                       Hypertention                       Medicare    NSAID                1488
                                       Hypertention                       Medicare    No exposure          1076
                                       Hypertention                       Medicare    TNF                   720
                                       Metabolic syndrome                 MPCD        DMARD                   4
                                       Metabolic syndrome                 MPCD        NSAID                   8
                                       Metabolic syndrome                 MPCD        No exposure            10
                                       Metabolic syndrome                 MPCD        TNF                     5
                                       Metabolic syndrome                 Marketscan  DMARD                  14
                                       Metabolic syndrome                 Marketscan  NSAID                  20
                                       Metabolic syndrome                 Marketscan  No exposure            24
                                       Metabolic syndrome                 Marketscan  TNF                    47
                                       Metabolic syndrome                 Medicare    DMARD                  14
                                       Metabolic syndrome                 Medicare    NSAID                  55
                                       Metabolic syndrome                 Medicare    No exposure            22
                                       Metabolic syndrome                 Medicare    TNF                    18
                                       Non-alcoholic fatty liver disease  MPCD        DMARD                   3
                                       Non-alcoholic fatty liver disease  MPCD        NSAID                   4
                                       Non-alcoholic fatty liver disease  MPCD        No exposure             4
                                       Non-alcoholic fatty liver disease  MPCD        TNF                    13
                                       Non-alcoholic fatty liver disease  Marketscan  DMARD                  12
                                       Non-alcoholic fatty liver disease  Marketscan  NSAID                  35
                                       Non-alcoholic fatty liver disease  Marketscan  No exposure            33
                                       Non-alcoholic fatty liver disease  Marketscan  TNF                   116
                                       Non-alcoholic fatty liver disease  Medicare    DMARD                  24
                                       Non-alcoholic fatty liver disease  Medicare    NSAID                  58
                                       Non-alcoholic fatty liver disease  Medicare    No exposure            29
                                       Non-alcoholic fatty liver disease  Medicare    TNF                    38
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
364        
365        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           3.19 seconds
      cpu time            3.55 seconds
      

366        
367        
368        
369        /*
370        BEGIN Fenglong's comorbidities code
371        
372        From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
373        Sent: Wednesday, November 29, 2017 1:32 PM
374        To: Benjamin Chan <chanb@ohsu.edu>
375        Subject: Attachment from my EndNote Library
376        
377        Hi, Ben
378        
379        Here are variable list included in our infection risk score model.
380        
381        Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
382        ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
383        
384        please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
384      ! variables.
385        
386        Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
387        
388        Please let me know if you have any question.
389        
390        Fenglong
391         */
392        /*
393        Only use ICD-9 codes from previous 12 months for Charlson
6                                                                   The SAS System                                      04:49 Wednesday, June 13, 2018

394         */
395        /*
396        Last execution: 1/2/2018 (commit 56f369)
397        DO NOT EXECUTE AGAIN
398        Due to server upgrade (32-bit to 64-bit SAS), subsequent execution results in error:
399        "ERROR: Foreign datasets cannot be modified."
400         */
401        proc sql;
402          create table UCB64.tempPrevDx12mPrior as
403            select *
404            from UCB64.tempPrevDxAll
405            where intnx("year", indexDate, -1, "same") < begin_date <= indexDate
406            order by indexID, indexDate;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Compressing data set UCB64.TEMPPREVDX12MPRIOR decreased size by 90.16 percent.
NOTE: Table UCB64.TEMPPREVDX12MPRIOR created, with 606857 rows and 25 columns.

407          create table UCB64.tempPrevPx12mPrior as
408            select *
409            from UCB64.tempPrevPxAll
410            where intnx("year", indexDate, -1, "same") < px_date <= indexDate
411            order by indexID, indexDate;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Compressing data set UCB64.TEMPPREVPX12MPRIOR decreased size by 89.30 percent.
NOTE: Table UCB64.TEMPPREVPX12MPRIOR created, with 1230450 rows and 23 columns.

412          create table UCB64.tempPrevRx12mPrior as
413            select A.*, B.etc_name, B.source
414            from UCB64.tempPrevRxAll A left join
415                 DT.lookupNDC B on (A.ndc = B.ndc)
416            where intnx("year", indexDate, -1, "same") < dispense_date <= indexDate
417            order by indexID, indexDate;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Compressing data set UCB64.TEMPPREVRX12MPRIOR decreased size by 90.48 percent.
NOTE: Table UCB64.TEMPPREVRX12MPRIOR created, with 581598 rows and 19 columns.

418        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           18.75 seconds
      cpu time            21.87 seconds
      

419        
420        %include "lib\charlson.sas" / source2;
NOTE: %INCLUDE (level 1) file lib\charlson.sas is file U:\studies\AS\pgms\bchan\lib\charlson.sas.
421       +/*
422       +From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
423       +Sent: Wednesday, November 29, 2017 1:32 PM
424       +To: Benjamin Chan <chanb@ohsu.edu>
425       +Subject: Attachment from my EndNote Library
426       +
427       +Hi, Ben
428       +
429       +Here are variable list included in our infection risk score model.
430       +
431       +Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
432       +ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
433       +
434       +please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
434      !+variables.
435       +
436       +Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
437       +
438       +Please let me know if you have any question.
439       +
440       +
441       +Fenglong
442       + */
443       +
444       +
445       +%macro charlson(inputds=,idVar=, IndexDateVarName=, outputds=,IndexVarName=, inpatonly=, malig=);/*Dr. Curtis ask to change from I to B*/
446       +
7                                                                   The SAS System                                      04:49 Wednesday, June 13, 2018

447       +**********************************************/
448       +/*Define and format diagnosis codes           */
449       +/**********************************************/;
450       +
451       +PROC FORMAT;
452       +   VALUE $ICD9CF(multilabel)
453       +/* Myocardial infarction */
454       +	"410"-"41099",
455       +	"412"-"42199" = "MI"
456       +/* Coronary heart disease *//*changed according to Dr. Curtis"*/
457       +    "410"-"41099",/*changed according to Dr. Curtis"*/
458       +	"411"-"41499",        /*changed according to Dr. Curtis"*/
459       +	"4292"-"42929"= "CHD"
460       +/* Peripheral vascular disorder */
461       +	"44020"-"44024",
462       +	"44031"-"44032",
463       +	"4408"-"44089",
464       +	"4409"-"44099",
465       +	"4439"-"44399",
466       +	"441"-"44199",
467       +	"7854"-"78549",
468       +    "V434"-"V4349",
469       +  "V434"-"V4349"= "PVD"
470       +/* Cerebrovascular disease */
471       +    "430"-"43899" = "CVD"
472       +/* Dementia */
473       +	"290"-"29099" = "DEM"
474       +/* Chronic pulmonary disease */
475       +	"490"-"49699",
476       +	"500"-"50599",
477       +	"5064"-"50649" =  "CPD"
478       +/* Rheumatologic disease */
479       +	"7100"-"71009",
480       +    "7101"-"71019",
481       + 	"7104"-"71049",
482       +   /* "714.0 "-"714.2 ",
483       +    "714.81", exclude RA*/
484       +    "725"-"72599" = "RHD"
485       +/* Peptic ulcer disease */
486       +	"531"-"53499" = "PUD"
487       +/* Mild liver disease */
488       +	"5712"-"57129",
489       +	"5715"-"57159",
490       +	"5716"-"57169",
491       +	"5714"-"57149" = "MLIVD"
492       +/* Diabetes */
493       +	"250"-"25039",
494       +	"2507"-"25079" = "DIAB"
495       +/* Diabetes with chronic complications */
496       +	"2504"-"25069" = "DIABC"
497       +/* Hemiplegia or paraplegia */
498       +	"3441"-"34419",
499       +	"342"-"34299" = "PLEGIA"
500       +/* Renal Disease */
501       +	"582"-"58299",
502       +	"583"-"58379",
503       +	"585"-"58599",
504       +	"586"-"58699",
505       +	"588"-"58899" = "REN"
506       +/*Malignancy, including leukemia and lymphoma */
507       +	"140"-"17299",
508       +	"174"-"19589",
509       +	"200"-"20899" = "MALIGN"
510       +/* Moderate or severe liver disease */
511       +	"5722"-"57289",
512       +	"4560"-"45621" = "SLIVD"
513       +/* Metastatic solid tumor */
514       +	"196"-"19919" = "MST"
515       +/* AIDS */
516       +	"042"-"04499" = "AIDS"
517       +/* Other */
518       +   other   = "other"
8                                                                   The SAS System                                      04:49 Wednesday, June 13, 2018

519       +;
520       +run;
521       +
522       +* For debugging. ;
523       +%let sqlopts = feedback sortmsg stimer ;
524       +%*let sqlopts = ;
525       +
526       +**********************************************************************************************;
527       +*subset to the utilization data of interest (add the people with no visits back at the end   *;
528       +**********************************************************************************************;
529       +
530       +**********************************************;
531       +* implement the Inpatient and Outpatient Flags;
532       +********************************************** ;
533       +%if &inpatonly =I %then %let inpatout=('IP');
534       +%else %if &inpatonly =B %then %let inpatout=('IP','IF','AV');
535       +%else %Put ERROR in Inpatonly flag.  Valid values are I for Inpatient and B for both Inpatient and Outpatient;
536       +
537       +proc sql;
538       +  create table  _DxSubset as
539       +  select *, put(dx, $icd9cf.) as CodedDx
540       +  from UCB.tempPrevDx12mPrior
541       +  where  enc_type in &inpatout.
542       +  ;
543       +
544       +   create table _PxSubset as
545       +  select*
546       +  from UCB.tempPrevPx12mPrior
547       +  /* where enc_type in &inpatout. */
548       +  ;
549       +
550       +quit ;
551       +
552       +proc sort data = _DxSubset ;
553       +   by &idVar &indexdateVarName;
554       +run ;
555       +
556       +proc sort data = _PxSubset ;
557       +   by &idVar &indexdateVarName;
558       +run ;
559       +
560       +/**********************************************/
561       +/*** Assing DX based flagsts                ***/
562       +/***                                        ***/
563       +/***                                        ***/
564       +/**********************************************/
565       +
566       +%let var_list = MI CHD PVD CVD DEM CPD RHD PUD MLIVD DIAB DIABC PLEGIA REN MALIGN SLIVD MST AIDS ;
567       +
568       +data _DxAssign ;
569       +array COMORB (*) &var_list ;
570       +
571       +length           &var_list 3 ; *<-- This is host-specific--are we sure we want to do this? ;
572       +
573       +retain           &var_list ;
574       +keep   &idVar &indexdateVarName &var_list ;
575       +set _DxSubset;
576       +  format prov_type;
577       +by &idVar &indexdateVarName;
578       +if first.&indexdateVarName then do;
579       +   do I=1 to dim(COMORB);
580       +      COMORB(I) = 0 ;
581       +   end;
582       +end;
583       +select (CodedDx);
584       +   when ('MI')    MI     = 1;
585       +   when ('CHD')   CHD    = 1;
586       +   when ('PVD')   PVD    = 1;
587       +   when ('CVD')   CVD    = 1;
588       +   when ('DEM')   DEM    = 1;
589       +   when ('CPD')   CPD    = 1;
590       +   when ('RHD')   RHD    = 1;
9                                                                   The SAS System                                      04:49 Wednesday, June 13, 2018

591       +   when ('PUD')   PUD    = 1;
592       +   when ('MLIVD') MLIVD  = 1;
593       +   when ('DIAB')  DIAB   = 1;
594       +   when ('DIABC') DIABC  = 1;
595       +   when ('PLEGIA')PLEGIA = 1;
596       +   when ('REN')   REN    = 1;
597       +   when ('MALIGN')MALIGN = 1;
598       +   when ('SLIVD') SLIVD  = 1;
599       +   when ('MST')   MST    = 1;
600       +   when ('AIDS')  AIDS   = 1;
601       +   otherwise ;
602       +end;
603       +if last.&indexdateVarName then output;
604       +run;
605       +
606       +/** Procedures: Peripheral vascular disorder **/
607       +data _PxAssign;
608       +   set _PxSubset;
609       +   by &idVar &indexdateVarName;
610       +   keep &idVar &indexdateVarName PVD;
611       +   if first.&indexdateVarName then PVD = 0;
612       +   if    (codeType = "ICD9-PX" & PX= "3848") or
613       +         (codeType = "CPT" & PX ="93668") or
614       +         (codeType = "CPT" &
615       +                   PX in ("34201","34203","35454","35456","35459","35470") or
616       +                          "35355" <= PX <= "35381") or
617       +         (codeType = "CPT" &
618       +                   PX in ("35473","35474","35482","35483","35485","35492","35493",
619       +                          "35495","75962","75992")) or
620       +         (codeType = "CPT" &
621       +                  PX in ("35521","35533","35541","35546","35548","35549","35551",
622       +                         "35556","35558","35563","35565","35566","35571","35582","35583",
623       +                         "35584","35585","35586","35587","35621","35623","35641","35646",
624       +                         "35647","35651","35654","35656","35661","35663","35665","35666","35671"))
625       +         then PVD=1;
626       +   if last.&indexdateVarName then output;
627       +run;
628       +
629       +/** Connect DXs and PROCs together  **/
630       +proc sql &sqlopts ;
631       +  create table _DxPxAssign as
632       +   select  coalesce(D.&idVar, P.&idVar) as &idVar
633       +         , coalesce(D.&indexdateVarName, P.&indexdateVarName) as &indexdateVarName		
634       +         , D.MI
635       +         , D.CHD
636       +         , max(D.PVD, P.PVD) as PVD
637       +         , D.CVD
638       +         , D.DEM
639       +         , D.CPD
640       +         , D.RHD
641       +         , D.PUD
642       +         , D.MLIVD
643       +         , D.DIAB
644       +         , D.DIABC
645       +         , D.PLEGIA
646       +         , D.REN
647       +         , D.MALIGN
648       +         , D.SLIVD
649       +         , D.MST
650       +         , D.AIDS
651       +   from  _DXASSIGN as D full outer join
652       +         _PXASSIGN P
653       +   on    D.&idVar = P.&idVar and
654       +         D.&indexdateVarName=P.&indexdateVarName
655       +   ;
656       +quit ;
657       +
658       +*****************************************************;
659       +* Assign the weights and compute the index
660       +*****************************************************;
661       +
662       +Data _WithCharlson;
10                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

663       +  set _DxPxAssign;
664       +  M1=1;M2=1;M3=1;
665       +
666       +* implement the MALIG flag;
667       +   %if &malig =N %then %do; O1=1;O2=1; %end;
668       +   %else %if &malig =Y %then  %do; O1=0; O2=0; %end;
669       +   %else %Put ERROR in MALIG flag.  Valid values are Y (Cancer study. Zero weight the cancer vars)  and N (treat cancer normally);
670       +
671       +  if SLIVD=1 then M1=0;
672       +  if DIABC=1 then M2=0;
673       +  if MST=1 then M3=0;
674       +
675       +&IndexVarName =   MI + CHD + PVD + CVD + DEM + CPD + RHD +
676       +                  PUD + M1*MLIVD + M2*DIAB + 2*DIABC + 2*PLEGIA + 2*REN +
677       +                  O1*2*M3*MALIGN + 3*SLIVD + O2*6*MST + 6*AIDS;
678       +
679       +Label
680       +MI= "Myocardial Infarction: "
681       +CHD="Coronary heart disease:" /* "Congestive heart disease: " relabeled */
682       +PVD= "Peripheral vascular disorder: "
683       +CVD= "Cerebrovascular disease: "
684       +DEM= "Dementia: "
685       +CPD= "Chronic pulmonary disease: "
686       +RHD= "Rheumatologic disease: "
687       +PUD= "Peptic ulcer disease: "
688       +MLIVD= "Mild liver disease: "
689       +DIAB= "Diabetes: "
690       +DIABC= "Diabetes with chronic complications: "
691       +PLEGIA= "Hemiplegia or paraplegia: "
692       +REN= "Renal Disease: "
693       +MALIGN= "Malignancy, including leukemia and lymphoma: "
694       +SLIVD= "Moderate or severe liver disease: "
695       +MST= "Metastatic solid tumor: "
696       +AIDS= "AIDS: "
697       +&IndexVarName= "Charlson score: "
698       +;
699       +
700       +keep &idVar &indexdateVarName &var_list &IndexVarName ;
701       +
702       +run;
703       +
704       +/* add the people with no visits back in, and create the final dataset */
705       +/* people with no visits or no comorbidity DXs have all vars set to zero */
706       +
707       +proc sql &sqlopts ;
708       +  create table &outputds as
709       +  select distinct w.&idVar
710       +      , w.&IndexDateVarName
711       +      , coalesce(w.MI           , 0) as  MI            label = "Myocardial Infarction: "
712       +      , coalesce(w.CHD          , 0) as  CHD           label = "Congestive heart disease: "
713       +      , coalesce(w.PVD          , 0) as  PVD           label = "Peripheral vascular disorder: "
714       +      , coalesce(w.CVD          , 0) as  CVD           label = "Cerebrovascular disease: "
715       +      , coalesce(w.DEM          , 0) as  DEM           label = "Dementia: "
716       +      , coalesce(w.CPD          , 0) as  CPD           label = "Chronic pulmonary disease: "
717       +      , coalesce(w.RHD          , 0) as  RHD           label = "Rheumatologic disease: "
718       +      , coalesce(w.PUD          , 0) as  PUD           label = "Peptic ulcer disease: "
719       +      , coalesce(w.MLIVD        , 0) as  MLIVD         label = "Mild liver disease: "
720       +      , coalesce(w.DIAB         , 0) as  DIAB          label = "Diabetes: "
721       +      , coalesce(w.DIABC        , 0) as  DIABC         label = "Diabetes with chronic complications: "
722       +      , coalesce(w.PLEGIA       , 0) as  PLEGIA        label = "Hemiplegia or paraplegia: "
723       +      , coalesce(w.REN          , 0) as  REN           label = "Renal Disease: "
724       +      , coalesce(w.MALIGN       , 0) as  MALIGN        label = "Malignancy, including leukemia and lymphoma: "
725       +      , coalesce(w.SLIVD        , 0) as  SLIVD         label = "Moderate or severe liver disease: "
726       +      , coalesce(w.MST          , 0) as  MST           label = "Metastatic solid tumor: "
727       +      , coalesce(w.AIDS         , 0) as  AIDS          label = "AIDS: "
728       +      , coalesce(w.&IndexVarName, 0) as  &IndexVarName label = "Charlson score: "
729       +      , (w.&idVar is null)              as  NoVisitFlag   label = "No visits for this person"
730       +  from  _WithCharlson as w
731       +  ;
732       +
733       +/* clean up work sas datasets */
734       +/*proc datasets nolist ;
11                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

735       + delete _DxSubset
736       +        _PxSubset
737       +        _DxAssign
738       +        _PxAssign
739       +        _DxPxAssign
740       +        _NoVisit
741       + 		_WithCharlson
742       +        ;*/
743       +%mend charlson;
NOTE: %INCLUDE (level 1) ending.
744        %include "lib\indicationDx.sas" / source2;
NOTE: %INCLUDE (level 1) file lib\indicationDx.sas is file U:\studies\AS\pgms\bchan\lib\indicationDx.sas.
745       +/*
746       +From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
747       +Sent: Wednesday, November 29, 2017 1:32 PM
748       +To: Benjamin Chan <chanb@ohsu.edu>
749       +Subject: Attachment from my EndNote Library
750       +
751       +Hi, Ben
752       +
753       +Here are variable list included in our infection risk score model.
754       +
755       +Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
756       +ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
757       +
758       +please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
758      !+variables.
759       +
760       +Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
761       +
762       +Please let me know if you have any question.
763       +
764       +
765       +Fenglong
766       + */
767       +
768       +
769       +%macro indicationDx(idVar,IndexDateVarName);
770       +data indDx(drop=i dx enc_type admit_date discharge_date pdx age);  *one record per MRN,index_generic,index_dt;
771       +  length &CovariateListDx 3;
772       + set UCB.tempPrevDx12mPrior(keep=&idVar &IndexDateVarName dx enc_type admit_date discharge_date pdx age where=(enc_type in
772      !+('IP','IF','AV')));
773       +by &idVar &IndexDateVarName;
774       +  retain &CovariateListDx;
775       +  array vars (*) &CovariateListDx;
776       +     if first.&IndexDateVarName then do;
777       +     do i=1 to dim(vars);
778       +	      vars(i)=0;
779       +     end;
780       +  end;
781       +  * age=int((adate-birth_date)/365.25);
782       +  if        dx      in :('07041','07044','07051','07054','V0262') then hepatitisC  =1;
783       +  if        dx      in :('V0481','V066','V0382')                    then fluVaccineDx=1;
784       +  if substr(dx,1,5) in ('7184','7185','7249','7385')              then JointSurgDx =1;
785       +  if        dx      in :('7070')                                      then ulcer       =1;
786       +  if substr(dx,1,5) in ('3640')                                      then uveitis     =1;
787       +  if        dx      in :('78343')                                     then growthFail  =1;
788       +  if        dx      in :('V761','V7610','V7611','V7612') and age>=40 then mammoDx     =1;
789       +  if        dx      in :('V7644') and age>=50                         then PSAdx       =1;
790       +  if        dx      in :('V723','V7230','V7231','V7232','V762','V7620') & age>=50 then PapDx=1;
791       +  if        dx      in :('V7641','V7651')                            then EndoDx      =1;
792       +  if        dx      in :('V852')                                      then obese   =1; *Body Mass Index between 25-29, adult;
793       +  if        dx      in :('27802')                                     then obese   =2; *overweight;
794       +  if        dx      in :('27800','27801')                            then obese   =3; *obesity;
795       +  if        dx      in :('79391','V853','V854')                     then obese   =4; *BMI>=30;
796       +  if        dx      in :('30513','V1582')                            then smoke   =1; *ex;      else
797       +  if        dx      =:'3051'                                          then smoke   =2; *current;
798       +  if        dx      in :('V810' )                                     then lipidDx =1; /*, 'V81.1', 'V82.2' dr. Curtis ask to remove*/
799       +  if        dx      in :('7102')                                      then Sjogrens=1;
800       +  if dx in :('41001','41011','41021','41031','41041','41051','41061',
801       +            '41071','41081','41091') & 3<=(discharge_date - admit_date)<=180       then mi=1;
802       +  if dx=:'428' /*and pdx='P' */                                           then heartFailure=1;
12                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

803       +  if dx in :('7102', '7141'/*,'782.2',*/ ,'71481','7142' /*,'793.1', '518.89'*/) then EAM=1; /* Extra-articular manifestations */
804       +  if dx=:'4359' then TIA=1;
805       +  if substr(dx,1,3) in ('436', '435') or
806       +     substr(dx,1,5) in ('4371', '4379') or
807       +    (substr(dx,1,3) in ('433', '434') and substr(dx,6,1)='1')        then Stroke =1;
808       +  if substr(dx,1,3) in ('401', '402', '403', '404', '405') then Hypertension=1;
809       +  if substr(dx,1,3)='411' then Angina=1;
810       +
811       +  if '200'<=dx<='20892'                                             then hemaCA =1;
812       +  if '140'<=dx<='19919'                                              then solidCA=1;
813       +
814       +  if dx in :('5374','5651','566','5672','5672','56721','56722','56723','56729',
815       +          '5695','5696','56969','56981','5961','6191','566') then fistula_abscessDx=1;
816       +
817       +  if '800'<=dx<='82999' or dx=:'7331' then fracture=1;
818       +  if dx=:'7330' then osteo=1;
819       +
820       +  if last.&IndexDateVarName ;
821       +label hepatitisC='hepatitisC DX'
822       +      fluVaccineDx='fluVaccine DX'
823       +      JointSurgDx='Joint Surgery DX'
824       +      ulcer='Ulcer DX'
825       +      uveitis='Uveitis DX'
826       +      growthFail='Growth Fail DX'
827       +      mammoDx='Breast Cancer Screening DX'
828       +      PSAdx='Prostate cancer Screen DX'
829       +      PapDx='Gynecological examination';
830       +
831       +run;
832       +
833       +%mend indicationDx;
NOTE: %INCLUDE (level 1) ending.
834        %include "lib\indicationPx.sas" / source2;
NOTE: %INCLUDE (level 1) file lib\indicationPx.sas is file U:\studies\AS\pgms\bchan\lib\indicationPx.sas.
835       +/*
836       +From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
837       +Sent: Wednesday, November 29, 2017 1:32 PM
838       +To: Benjamin Chan <chanb@ohsu.edu>
839       +Subject: Attachment from my EndNote Library
840       +
841       +Hi, Ben
842       +
843       +Here are variable list included in our infection risk score model.
844       +
845       +Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
846       +ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
847       +
848       +please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
848      !+variables.
849       +
850       +Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
851       +
852       +Please let me know if you have any question.
853       +
854       +
855       +Fenglong
856       + */
857       +
858       +
859       +%macro indicationPx(idVar,IndexDateVarName);
860       +data indPx(drop=admit_date px_date px age i);
861       +  length &CovariateListPx 3;
862       +set UCB.tempPrevPx12mPrior(keep=&idVar &IndexDateVarName admit_date px_date codeType px age);
863       +by &idVar &IndexDateVarName ;
864       +  * age=int((adate-birth_date)/365.25);
865       +  retain &CovariateListPx;
866       +  array vars (*) &CovariateListPx ;
867       +  do i=1 to dim(vars);
868       +     if first.&IndexDateVarName then vars(i)=0;
869       +  end;
870       +
871       +  *lab data for claim-based RA severity score (CIRAS);
13                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

872       +  if codeType = "HCPCS" &
873       +     px in ('J3490','J3590', 'J7799', 'C9399','Q4082') then J3490=1;
874       +  if codeType = "CPT" &
875       +     px in ('85652','86141')                                                        then inflamMarker=1;
876       +  if codeType in ("CPT", "HCPCS") &
877       +     px in ('11040','29405','92598','97020','97504','11041','29445','95831','97022','97520','11042','29505',
878       +            '95832','97024','97530','11043','29515','95833','97026','97535','11044','29520','95834','97028',
879       +            '97537','29065','29530','95851','97032','97542','29075','29540','95852','97033','97545','29085',
880       +            '29550','96105','97034','97546','29105','29580','96110','97035','97703','29125','29590','96111',
881       +            '97036','97750','29126','64550','96115','97039','97770','29130','90901','97001','97110','97799',
882       +            '29131','90911','97002','97112','V5362','29200','92506','97003','97113','V5363','29220','92507',
883       +            '97004','97116','V5364','29240','92508','97010','97124','29260','92510','97012','97139','29280',
884       +            '92525','97014','97140','29345','92526','97016','97150','29365','92597','97018','97250')
885       +			                                                                        then RehabVisit=1;
886       +   if codeType = "CPT" &
887       +      px in ('86430','86431','86200','80072')                                       then RF=1;
888       +   if codeType = "CPT" &
889       +      px in ('85025','85032','85049','85590','85595')                               then platelet+1;
890       +   if codeType = "CPT" &
891       +      px in ('80047','80049','80058','80051','80054')                               then lft+1;
892       +   if codeType in ("CPT", "HCPCS") &
893       +      px in (/* '99.52', */'90659','90660','90656','90658','G0008','4037F','90732','G0009','4040F',
894       +             'V0481','G8108') or '90655'<=px<='90663'                              then FluVaccine=1; *2nd line by JimL;
895       +   if codeType = "ICD9-PX" &
896       +      px in ('9952'/* ,'90659','90660','90656','90658','G0008','4037F','90732','G0009','4040F',
897       +             'V0481','G8108' */) /* or '90655'<=px<='90663' */                     then FluVaccine=1; *2nd line by JimL;
898       +   if (codeType = "ICD9-PX" & ('800'<=px<='8049' or
899       +            '806'<=px<='8099' or
900       +            '811'<=px<='8129' or
901       +          '814'<=px<='8159' or
902       +          '817'<=px<='8199')) or
903       +   (codeType = "CPT" &
904       +    px in :("22532","22808","23802","25443","26357","26842","27440","28086","28730","29838",
905       +    "22533","22810","23929","25444","26358","26843","27441","28088","28735","29840",
906       +    "22534","22812","24102","25445","26370","26844","27442","28260","28737","29844",
907       +    "22548","22818","24360","25446","26372","26850","27443","28261","28740","29845",
908       +    "22554","22819","24361","25447","26373","26852","27445","28262","28750","29848",
909       +    "22556","22840","24362","25800","26418","26860","27446","28264","28755","29860",
910       +    "22558","22841","24363","25805","26420","26861","27447","28270","28760","29861",
911       +    "22585","22842","24365","25810","26426","26862","27580","28272","28899","29863",
912       +    "22590","22843","24366","25820","26428","26863","27599","28290","29805","29870",
913       +    "22595","22844","24800","25825","26432","26989","27625","28292","29806","29873",
914       +    "22600","22845","24802","25830","26433","27054","27626","28293","29820","29875",
915       +    "22610","22846","24999","25999","26434","27130","27700","28294","29821","29876",
916       +    "22612","22847","25105","26130","26437","27284","27702","28296","29822","29884",
917       +    "22614","22851","25118","26135","26530","27286","27703","28297","29823","29895",
918       +    "22630","22899","25119","26140","26531","27299","27870","28298","29827","29897",
919       +    "22632","23105","25332","26145","26535","27334","27871","28299","29830","29898",
920       +    "22800","23470","25337","26350","26536","27335","27899","28705","29835","29899",
921       +    "22802","23472","25441","26352","26820","27437","28070","28715","29836","29900",
922       +    "22804","23800","25442","26356","26841","27438","28072","28725","29837","29901" ))
923       +                                                                                    then JointSurg=1;
924       +
925       +   if codeType = "CPT" &
926       +      px in ('80061', '82465', '83700', '83701', '83704', '83718', '83719', '83721', '84478') then lipidPx=1;
927       +   if codeType = "ICD9-PX" &
928       +      px in ('8192')                                                               then intraArticularInj=1;
929       +   if codeType in ("CPT", "HCPCS") &
930       +      px in (/* '87.36','87.37', */'76083','76092','77052','77057','G8111','G0202') and age>=40 then mammoPx=1;
931       +   if codeType = "ICD9-PX" &
932       +      px in ('8736','8737'/* ,'76083','76092','77052','77057','G8111','G0202' */) and age>=40 then mammoPx=1;
933       +   if codeType in ("CPT", "HCPCS") &
934       +      px in ('84152','84153','84154','G0103') and age>=50                          then PSApx=1;
935       +   if codeType in ("CPT", "HCPCS") &
936       +      px in (/* '91.46', */'88156','P3000','P3001','Q0091', 'G0101','G0123','G0124','G0141',
937       +             'G0143','G0144','G0145','G0147', 'G0148') or '88141'<=px<='88154'      then PAPpx=1;
938       +   if codeType = "ICD9-PX" &
939       +      px in ('9146'/* ,'88156','P3000','P3001','Q0091', 'G0101','G0123','G0124','G0141',
940       +             'G0143','G0144','G0145','G0147', 'G0148' */) /* or '88141'<=px<='88154' */      then PAPpx=1;
941       +   if codeType in ("CPT", "HCPCS") &
942       +      px in (/* '45.24','45.23','45.25', */'45330','45331','45333','45338','45378','45380',
943       +             '45384','45385','G0104','G0105','G0121')                               then endopx=1;
14                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

944       +   if codeType = "ICD9-PX" &
945       +      px in ('4524','4523','4525'/* ,'45330','45331','45333','45338','45378','45380',
946       +             '45384','45385','G0104','G0105','G0121' */)                               then endopx=1;
947       +   if codeType in ("CPT", "HCPCS") &
948       +      px in ('82270','82271','82272','82273','82274','G0107','G0328') & age>=50     then FOBT=1;
949       +
950       +   if platelet>=4 then platelet=4; *CIRAS definition;
951       +   if lft>=5 then lft=5;           *CIRAS definition;
952       +
953       +   *2009-09-21 malignancy WG-specific covariates;
954       +if codeType = "CPT" &
955       +   px in (/* '42.84','46.72','46.74','46.76','48.73','48.81','48.93','49.01','49.02','49.11',
956       + '49.12','54.21','57.83','57.84','69.42', */'45000','45005','45020','45990',
957       + '46020','46040','46045','46050','46060','46270','46275','46280','46285','46288',
958       + '46706','46710','46712') then fistula_abscessPx=1;
959       +if codeType = "ICD9-PX" &
960       +   px in ('4284','4672','4674','4676','4873','4881','4893','4901','4902','4911',
961       + '4912','5421','5783','5784','6942'/* ,'45000','45005','45020','45990',
962       + '46020','46040','46045','46050','46060','46270','46275','46280','46285','46288',
963       + '46706','46710','46712' */) then fistula_abscessPx=1;
964       +if codeType = "CPT" &
965       +   px in ('43260','43261','43262','43263','43264','43265','43267','43268','43269','43271','43272') then ercpPx=1;
966       +if codeType = "CPT" &
967       +   px in (/* '87.62','87.63', */'74240','74241','74245','74246','74247','74249','74250','74251') then barium_ugiPx=1;
968       +if codeType = "ICD9-PX" &
969       +   px in ('8762','8763'/* ,'74240','74241','74245','74246','74247','74249','74250','74251' */) then barium_ugiPx=1;
970       +if codeType = "CPT" &
971       +   px in (/* '87.64', */'74270','74280') then barium_colonPx=1;
972       +if codeType = "ICD9-PX" &
973       +   px in ('8764'/* ,'74270','74280' */) then barium_colonPx=1;
974       +
975       +*2009-11-05 CVD WG;
976       +if codeType = "CPT" &
977       +   PX in ('92974', '92980', '92981', '92982', '92984', '92995', '92996', '33521', '33522', '33523', '33530',
978       +          '33510', '33511', '33512', '33513', '33514', '33516', '33517', '33518', '33519', '33521', '33522',
979       +          '33523', '33530', '33533', '33534', '33535', '33536') then Coronary_Revas=1;
980       +
981       +   if last.&IndexDateVarName;
982       +run;
983       +%mend indicationPx;
NOTE: %INCLUDE (level 1) ending.
984        %include "lib\indicationRx.sas" / source2;
NOTE: %INCLUDE (level 1) file lib\indicationRx.sas is file U:\studies\AS\pgms\bchan\lib\indicationRx.sas.
985       +/*
986       +From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
987       +Sent: Wednesday, November 29, 2017 1:32 PM
988       +To: Benjamin Chan <chanb@ohsu.edu>
989       +Subject: Attachment from my EndNote Library
990       +
991       +Hi, Ben
992       +
993       +Here are variable list included in our infection risk score model.
994       +
995       +Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
996       +ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
997       +
998       +please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
998      !+variables.
999       +
1000      +Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
1001      +
1002      +Please let me know if you have any question.
1003      +
1004      +
1005      +Fenglong
1006      + */
1007      +
1008      +
1009      +%macro indicationRx(idVar,IndexDateVarName);
1010      +data indRx(keep=&idVar &IndexDateVarName &CovariateListRx);
1011      +  set UCB.tempPrevRx12mPrior;
1012      +  by &idVar &IndexDateVarName;
15                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

1013      +  retain  &CovariateListRx ;
1014      +  length  &CovariateListRx  3 ;
1015      +  array vars (*) ImminentDeathRx &CovariateListRx ;
1016      +  do i=1 to dim(vars);
1017      +    if first.&IndexDateVarName then vars(i)=0;
1018      +  end;
1019      +
1020      +  * if lowcase(etc_name)=:'chemo'     then chemo=1; *Note to cancer WG: chemo includes chemo and chemo2;
1021      +  * if lowcase(etc_name)=:'lipid'     then lipid=1; *changed from clop to lipid on Nov. 29, 09;
1022      +  if source = "NDC_INSULIN" then dm=1;
1023      +  * if lowcase(etc_name)=:'folate'    then folate=1;
1024      +  if source = "NDC_ANTI_FUNGAL" then fungus=1;
1025      +  if source = "NDC_ANTI_HYPERTENSIVE" then htn=1;
1026      +  * if lowcase(etc_name)=:'naproxen'  then naproxen=1;
1027      +  if source = "NDC_NARCOTICS" then narcotics=1;
1028      +  if source in ("NDC_NSAIDCOX", "NDC_NSAIDNONCOX") then nsaid=1;
1029      +
1030      +  if source = "NDC_PPIS" then op_PPI=1;
1031      +  if source = "NDC_BISPHOSPHONATES" then op_bisphosp=1;
1032      +
1033      +  * if lowcase(etc_name)=:'op_other'  then op_other=1;
1034      +  * if lowcase(etc_name)=:'sedative'  then sedative=1;
1035      +  if source in ("NDC_STEROIDS", "NDC_TOPICALSTEROIDS") then steroid=1;
1036      +  if source = "NDC_TB" then tb=1;
1037      +  * if lowcase(etc_name)=:'thyroid'   then thyroid=1;
1038      +  if source = "NDC_ANTIVIRAL" then viral=1;
1039      +  * if lowcase(etc_name)=:'dementia'  then dementia=1;
1040      +  if source = "NDC_STATIN" then statin=1;
1041      +  if source = "NDC_NSAIDCOX" then nsaidcox=1;
1042      +  if source = "NDC_BETABLOCKERS" then BBlocker=1;
1043      +  * if lowcase(etc_name)=:'antithrom' then antithrom=1;
1044      +  if source = "NDC_ANTIBIOTICS" then antibiotics=1;
1045      +  * if lowcase(etc_name)=:'antipsych' then antipsych=1;
1046      +  * if lowcase(etc_name)=:'antidepre' then antidepres=1;
1047      +  * if lowcase(etc_name)=:'anticonvu' then anticonvul=1;
1048      +  * if lowcase(etc_name)=:'calcium'   then calcium=1;
1049      +  * if lowcase(etc_name)=:'Adrenergi' then Adrenergic=1;
1050      +
1051      +  if index(lowcase(gnn),'thiazide')     >0    then thiazide=1;
1052      +  if index(lowcase(gnn),'rosiglitazone')>0 or
1053      +	 index(lowcase(gnn),'troglitazone') >0 or
1054      +     index(lowcase(gnn),'pioglitazone') >0    then thiazolidinedione=1;
1055      +  if index(lowcase(gnn),'warfarin')     >0 or
1056      +	 index(lowcase(gnn),'heparin')      >0 or
1057      +     index(lowcase(gnn),'enoxaparin sodium')   then anticoagulant=1; /*Dr.curtis ask to add*/
1058      +  if last.&IndexDateVarName;
1059      +run;
1060      +%mend indicationRx;
NOTE: %INCLUDE (level 1) ending.
1061       %include "lib\NumCnt.sas" / source2;
NOTE: %INCLUDE (level 1) file lib\NumCnt.sas is file U:\studies\AS\pgms\bchan\lib\NumCnt.sas.
1062      +/*
1063      +From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
1064      +Sent: Wednesday, November 29, 2017 1:32 PM
1065      +To: Benjamin Chan <chanb@ohsu.edu>
1066      +Subject: Attachment from my EndNote Library
1067      +
1068      +Hi, Ben
1069      +
1070      +Here are variable list included in our infection risk score model.
1071      +
1072      +Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
1073      +ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
1074      +
1075      +please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
1075     !+variables.
1076      +
1077      +Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
1078      +
1079      +Please let me know if you have any question.
1080      +
1081      +
16                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

1082      +Fenglong
1083      + */
1084      +
1085      +
1086      +%macro NumCnt(dsn,DateVar);
1087      +  proc sort data=&dsn nodupkey out=num&dsn; by &idVar &indexDateVarName &dateVar; *note nodupkey, several dx on one day counted one
1087     !+visit/hosp;
1088      +  data num&dsn(keep=&idVar &indexDateVarName Num&dsn);
1089      +    set num&dsn;
1090      +	by &idVar &indexDateVarName;
1091      +	if first.&indexDateVarName then Num&dsn=0; Num&dsn+1;
1092      +	if last.&indexDateVarName;
1093      +  run;
1094      +%mend NumCnt;
NOTE: %INCLUDE (level 1) ending.
1095       %include "lib\ciras.sas" / source2;
NOTE: %INCLUDE (level 1) file lib\ciras.sas is file U:\studies\AS\pgms\bchan\lib\ciras.sas.
1096      +/*
1097      +From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
1098      +Sent: Wednesday, November 29, 2017 1:32 PM
1099      +To: Benjamin Chan <chanb@ohsu.edu>
1100      +Subject: Attachment from my EndNote Library
1101      +
1102      +Hi, Ben
1103      +
1104      +Here are variable list included in our infection risk score model.
1105      +
1106      +Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
1107      +ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
1108      +
1109      +please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
1109     !+variables.
1110      +
1111      +Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
1112      +
1113      +Please let me know if you have any question.
1114      +
1115      +
1116      +Fenglong
1117      + */
1118      +
1119      +
1120      +%macro ciras(cohort,idVar,indexDateVarName);
1121      +
1122      +data inflamMarker RehabVisit RF platelet lft;
1123      +  set UCB.tempPrevPxAll;
1124      +  if (codeType = "CPT" &
1125      +      px in ('85652','86141')) then output inflamMarker;
1126      +  if (codeType in ("CPT", "HCPCS") &
1127      +      px in ('11040','29405','92598','97020','97504','11041','29445','95831','97022','97520','11042','29505',
1128      +            '95832','97024','97530','11043','29515','95833','97026','97535','11044','29520','95834','97028',
1129      +            '97537','29065','29530','95851','97032','97542','29075','29540','95852','97033','97545','29085',
1130      +            '29550','96105','97034','97546','29105','29580','96110','97035','97703','29125','29590','96111',
1131      +            '97036','97750','29126','64550','96115','97039','97770','29130','90901','97001','97110','97799',
1132      +            '29131','90911','97002','97112','V5362','29200','92506','97003','97113','V5363','29220','92507',
1133      +            '97004','97116','V5364','29240','92508','97010','97124','29260','92510','97012','97139','29280',
1134      +            '92525','97014','97140','29345','92526','97016','97150','29365','92597','97018','97250'))
1135      +                        then output RehabVisit;
1136      +   if (codeType = "CPT" &
1137      +       px in ('86430','86431','86200','80072')) then output RF;
1138      +   if (codeType = "CPT" &
1139      +       px in ('85025','85032','85049','85590','85595')) then output platelet;
1140      +   if (codeType = "CPT" &
1141      +       px in ('80047','80049','80050','80053','80058','80051','80054')) then output lft;
1142      +
1143      +run;
1144      +
1145      +data felty;
1146      +set  UCB.tempPrevDxAll(where=(dx=:'7141' and enc_type in ('IP','IF','AV')));
1147      +  format prov_type;
1148      +run;
1149      +
17                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

1150      +data rh;
1151      +set UCB.tempPrevDxAll(where=(enc_type in ('IP','IF','AV')));
1152      +  format prov_type;
1153      +if prov_type = "66";
1154      +run;
1155      +
1156      +  %NumCnt(rh, admit_date);
1157      +  %NumCnt(inflamMarker, admit_date);
1158      +  %NumCnt(RehabVisit, admit_date);
1159      +  %NumCnt(lft, admit_date);
1160      +  %NumCnt(RF, admit_date);
1161      +  %NumCnt(platelet, admit_date);
1162      +  %NumCnt(felty, admit_date);
1163      +
1164      +data ciras(drop=j sex01 /* birth_date */ sex age);
1165      +merge &cohort(keep=&idVar &indexDateVarName  /* birth_date */ sex age in=a)
1166      +      numInflamMarker
1167      +	  numRehabVisit
1168      +	  numRF
1169      +	  numFelty
1170      +	  numPlatelet
1171      +	  numLft
1172      +	  numRh;
1173      +by &idVar &indexDateVarName;
1174      +if a;
1175      +/* age=(&indexDateVarName-birth_date)/365.25; */
1176      +if lowcase(sex)='m' then sex01=0; else sex01=1;
1177      +
1178      +array zero(*)   NumRh numinflamMarker NumRehabVisit NumRF Numplatelet Numlft Numfelty ;
1179      +    do j=1 to dim(zero);
1180      +	if zero(j)=. then zero(j)=0;
1181      +	end;
1182      +
1183      +CIRAS=age*(-0.066) + sex01*(-0.092) + numinflamMarker*0.60 + NumRehabVisit*0.69+NumRF*2.1+
1184      +        NumFelty*2.3 + Numplatelet*0.42  + NumLft*(-0.14)       + NumRh*0.52   + 6.5;
1185      +run;
1186      +
1187      +proc datasets nolist;
1188      +	delete NumRh numInflamMarker NumRehabVisit NumRF Numplatelet Numlft NumFelty
1189      +              Rh    InflamMarker    RehabVisit    RF    Platelet    Lft    Felty ;
1190      +quit;run;
1191      +%mend ciras;
NOTE: %INCLUDE (level 1) ending.
1192       
1193       %let CovariateListDx= hepatitisC fluVaccineDx JointSurgDx ulcer obese smoke
1194                             lipidDx uveitis growthFail mammoDx PSAdx PapDx endoDx Sjogrens MI heartFailure stroke TIA EAM
1195                             fistula_abscessDx hemaCa solidCa
1196                             Hypertension angina fracture osteo icd7100; *covariate in 3rd line are from malignancy WG;
1197       %indicationDx(indexID, indexDate);
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      2715131 at 1197:184   
NOTE: There were 3132453 observations read from the data set UCB.TEMPPREVDX12MPRIOR.
      WHERE enc_type in ('AV', 'IF', 'IP');
NOTE: The data set WORK.INDDX has 59795 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           6.00 seconds
      cpu time            4.99 seconds
      

1198       
1199       %let CovariateListPx = InflamMarker RehabVisit RF platelet LFT FluVaccine jointSurg lipidPx Coronary_Revas
1200                              intraArticularInj MammoPx PSApx PAPpx endoPx FOBT J3490
1201                              fistula_abscessPx ercpPx barium_ugiPx barium_colonPx;
1202       %indicationPx(indexID, indexDate);
NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.

18                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

NOTE: There were 6794228 observations read from the data set UCB.TEMPPREVPX12MPRIOR.
NOTE: The data set WORK.INDPX has 59940 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           17.79 seconds
      cpu time            17.33 seconds
      

1203       
1204       %let CovariateListRx= chemo lipid dm folate fungus HTN naproxen narcotics nsaid sedative steroid tb thyroid viral
1205                            dementia statin NSAIDcox BBlocker op_PPI op_bisphosp op_other
1206                            thiazide thiazolidinedione anticoagulant
1207                  antithrom antibiotics antipsych antidepres anticonvul calcium Adrenergic;
1208       %indicationRx(indexID, indexDate);
NOTE: Data set UCB.TEMPPREVRX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.

NOTE: There were 2875863 observations read from the data set UCB.TEMPPREVRX12MPRIOR.
NOTE: The data set WORK.INDRX has 57128 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           6.17 seconds
      cpu time            5.70 seconds
      

1209       proc means data = Work.indRx;
1210         var &CovariateListRx;
1211       run;

                                                                  --- AS project ---                                04:49 Wednesday, June 13, 2018   2

                                                                 The MEANS Procedure

                              Variable                 N            Mean         Std Dev         Minimum         Maximum
                              ------------------------------------------------------------------------------------------
                              chemo                57128               0               0               0               0
                              lipid                57128               0               0               0               0
                              dm                   57128       0.0535639       0.2251571               0       1.0000000
                              folate               57128               0               0               0               0
                              fungus               57128       0.0677251       0.2512758               0       1.0000000
                              HTN                  57128       0.5796107       0.4936258               0       1.0000000
                              naproxen             57128               0               0               0               0
                              narcotics            57128       0.6551428       0.4753258               0       1.0000000
                              nsaid                57128       0.5765824       0.4941047               0       1.0000000
                              sedative             57128               0               0               0               0
                              steroid              57128       0.6150049       0.4865984               0       1.0000000
                              tb                   57128       0.0114480       0.1063819               0       1.0000000
                              thyroid              57128               0               0               0               0
                              viral                57128       0.0681627       0.2520271               0       1.0000000
                              dementia             57128               0               0               0               0
                              statin               57128       0.3092704       0.4621969               0       1.0000000
                              NSAIDcox             57128       0.1059025       0.3077155               0       1.0000000
                              BBlocker             57128       0.2810006       0.4494917               0       1.0000000
                              op_PPI               57128       0.3556575       0.4787162               0       1.0000000
                              op_bisphosp          57128       0.0695981       0.2544707               0       1.0000000
                              op_other             57128               0               0               0               0
                              thiazide             57128       0.1544952       0.3614259               0       1.0000000
                              thiazolidinedione    57128       0.0197626       0.1391848               0       1.0000000
                              anticoagulant        57128       0.0748320       0.2631223               0       1.0000000
                              antithrom            57128               0               0               0               0
                              antibiotics          57128       0.6944756       0.4606332               0       1.0000000
                              antipsych            57128               0               0               0               0
                              antidepres           57128               0               0               0               0
                              anticonvul           57128               0               0               0               0
                              calcium              57128               0               0               0               0
                              Adrenergic           57128               0               0               0               0
                              ------------------------------------------------------------------------------------------
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
NOTE: There were 57128 observations read from the data set WORK.INDRX.
NOTE: The PROCEDURE MEANS printed page 2.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.20 seconds
      cpu time            0.81 seconds
      

1212       
1213       %charlson(inputds = ,
1214                 idVar = indexID,
1215                 IndexDateVarName = indexDate,
1216                 outputds = CCI,
1217                 IndexVarName = Charlson,
1218                 inpatonly = B,
1219                 malig = N);
NOTE: Format $ICD9CF has been output.

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK._DXSUBSET created, with 3132453 rows and 26 columns.

NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Table WORK._PXSUBSET created, with 6794228 rows and 23 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           7.47 seconds
      cpu time            7.41 seconds
      


NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: Input data set is already sorted, no sorting done.
19                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3132453 observations read from the data set WORK._DXSUBSET.
NOTE: The data set WORK._DXASSIGN has 59795 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           1.40 seconds
      cpu time            1.37 seconds
      


NOTE: There were 6794228 observations read from the data set WORK._PXSUBSET.
NOTE: The data set WORK._PXASSIGN has 59940 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           2.71 seconds
      cpu time            2.69 seconds
      

NOTE: SQL Statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
NOTE: Statement transforms to:

        select COALESCE(D.indexID, P.indexID) as indexID, COALESCE(D.indexDate, P.indexDate) as indexDate, D.MI, D.CHD, MAX(D.PVD, P.PVD) as PVD, 
D.CVD, D.DEM, D.CPD, D.RHD, D.PUD, D.MLIVD, D.DIAB, D.DIABC, D.PLEGIA, D.REN, D.MALIGN, D.SLIVD, D.MST, D.AIDS
          from WORK._DXASSIGN D full outer join WORK._PXASSIGN P on (D.indexID = P.indexID) and (D.indexDate = P.indexDate);

NOTE: Option MESSAGE is ignored by SAS sort.
NOTE: Option MESSAGE is ignored by SAS sort.
NOTE: Invalid (or missing) arguments to the MAX function have caused the function to return a missing value.
NOTE: Table WORK._DXPXASSIGN created, with 59944 rows and 19 columns.

NOTE: SQL Statement used (Total process time):
      real time           0.35 seconds
      cpu time            0.32 seconds
      
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      149 at 1219:95   
NOTE: There were 59944 observations read from the data set WORK._DXPXASSIGN.
NOTE: The data set WORK._WITHCHARLSON has 59944 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

NOTE: SQL Statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
NOTE: Statement transforms to:

        select distinct W.indexID, W.indexDate, COALESCE(W.MI, 0) as MI label='Myocardial Infarction:', COALESCE(W.CHD, 0) as CHD label='Congestive 
heart disease:', COALESCE(W.PVD, 0) as PVD label='Peripheral vascular disorder:', COALESCE(W.CVD, 0) as CVD label='Cerebrovascular disease:', 
COALESCE(W.DEM, 0) as DEM label='Dementia:', COALESCE(W.CPD, 0) as CPD label='Chronic pulmonary disease:', COALESCE(W.RHD, 0) as RHD 
label='Rheumatologic disease:', COALESCE(W.PUD, 0) as PUD label='Peptic ulcer disease:', COALESCE(W.MLIVD, 0) as MLIVD label='Mild liver disease:', 
COALESCE(W.DIAB, 0) as DIAB label='Diabetes:', COALESCE(W.DIABC, 0) as DIABC label='Diabetes with chronic complications:', COALESCE(W.PLEGIA, 0) as 
PLEGIA label='Hemiplegia or paraplegia:', COALESCE(W.REN, 0) as REN label='Renal Disease:', COALESCE(W.MALIGN, 0) as MALIGN label='Malignancy, 
including leukemia and lymphoma:', COALESCE(W.SLIVD, 0) as SLIVD label='Moderate or severe liver disease:', COALESCE(W.MST, 0) as MST 
label='Metastatic solid tumor:', COALESCE(W.AIDS, 0) as AIDS label='AIDS:', COALESCE(W.Charlson, 0) as Charlson label='Charlson score:', W.indexID is 
null as NoVisitFlag label='No visits for this person'
          from WORK._WITHCHARLSON W;
20                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018


NOTE: Option MESSAGE is ignored by SAS sort.
NOTE: Table WORK.CCI created, with 59944 rows and 21 columns.

NOTE: SQL Statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.32 seconds
      
1220       
1221       %ciras(DT.indexLookup, indexID, indexDate);
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

NOTE: Data set UCB.TEMPPREVPXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.

NOTE: There were 35975283 observations read from the data set UCB.TEMPPREVPXALL.
NOTE: The data set WORK.INFLAMMARKER has 218871 observations and 23 variables.
NOTE: The data set WORK.REHABVISIT has 2458572 observations and 23 variables.
NOTE: The data set WORK.RF has 90302 observations and 23 variables.
NOTE: The data set WORK.PLATELET has 870057 observations and 23 variables.
NOTE: The data set WORK.LFT has 706384 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           30.95 seconds
      cpu time            23.10 seconds
      

NOTE: Data set UCB.TEMPPREVDXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.

NOTE: There were 234 observations read from the data set UCB.TEMPPREVDXALL.
      WHERE (dx=:'7141') and enc_type in ('AV', 'IF', 'IP');
NOTE: The data set WORK.FELTY has 234 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           15.47 seconds
      cpu time            6.13 seconds
      

NOTE: Data set UCB.TEMPPREVDXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.

NOTE: There were 16603999 observations read from the data set UCB.TEMPPREVDXALL.
      WHERE enc_type in ('AV', 'IF', 'IP');
NOTE: The data set WORK.RH has 1482505 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           5.03 seconds
      cpu time            4.93 seconds
      

NOTE: There were 1482505 observations read from the data set WORK.RH.
NOTE: 1446085 observations with duplicate key values were deleted.
NOTE: The data set WORK.NUMRH has 36420 observations and 25 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           1.13 seconds
      cpu time            1.95 seconds
      


NOTE: There were 36420 observations read from the data set WORK.NUMRH.
NOTE: The data set WORK.NUMRH has 35438 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

NOTE: There were 218871 observations read from the data set WORK.INFLAMMARKER.
NOTE: 179568 observations with duplicate key values were deleted.
NOTE: The data set WORK.NUMINFLAMMARKER has 39303 observations and 23 variables.
21                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.31 seconds
      cpu time            0.38 seconds
      


NOTE: There were 39303 observations read from the data set WORK.NUMINFLAMMARKER.
NOTE: The data set WORK.NUMINFLAMMARKER has 39190 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

NOTE: There were 2458572 observations read from the data set WORK.REHABVISIT.
NOTE: 2420739 observations with duplicate key values were deleted.
NOTE: The data set WORK.NUMREHABVISIT has 37833 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           1.82 seconds
      cpu time            2.91 seconds
      


NOTE: There were 37833 observations read from the data set WORK.NUMREHABVISIT.
NOTE: The data set WORK.NUMREHABVISIT has 37748 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.01 seconds
      

NOTE: There were 706384 observations read from the data set WORK.LFT.
NOTE: 650946 observations with duplicate key values were deleted.
NOTE: The data set WORK.NUMLFT has 55438 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.67 seconds
      cpu time            0.90 seconds
      


NOTE: There were 55438 observations read from the data set WORK.NUMLFT.
NOTE: The data set WORK.NUMLFT has 54534 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

NOTE: There were 90302 observations read from the data set WORK.RF.
NOTE: 61569 observations with duplicate key values were deleted.
NOTE: The data set WORK.NUMRF has 28733 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.14 seconds
      


NOTE: There were 28733 observations read from the data set WORK.NUMRF.
NOTE: The data set WORK.NUMRF has 28707 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

NOTE: There were 870057 observations read from the data set WORK.PLATELET.
NOTE: 813627 observations with duplicate key values were deleted.
NOTE: The data set WORK.NUMPLATELET has 56430 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.63 seconds
      cpu time            1.03 seconds
      


NOTE: There were 56430 observations read from the data set WORK.NUMPLATELET.
NOTE: The data set WORK.NUMPLATELET has 55238 observations and 3 variables.
22                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

NOTE: There were 234 observations read from the data set WORK.FELTY.
NOTE: 123 observations with duplicate key values were deleted.
NOTE: The data set WORK.NUMFELTY has 111 observations and 25 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      


NOTE: There were 111 observations read from the data set WORK.NUMFELTY.
NOTE: The data set WORK.NUMFELTY has 84 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      


NOTE: There were 13689 observations read from the data set DT.INDEXLOOKUP.
NOTE: There were 39190 observations read from the data set WORK.NUMINFLAMMARKER.
NOTE: There were 37748 observations read from the data set WORK.NUMREHABVISIT.
NOTE: There were 28707 observations read from the data set WORK.NUMRF.
NOTE: There were 84 observations read from the data set WORK.NUMFELTY.
NOTE: There were 55238 observations read from the data set WORK.NUMPLATELET.
NOTE: There were 54534 observations read from the data set WORK.NUMLFT.
NOTE: There were 35438 observations read from the data set WORK.NUMRH.
NOTE: The data set WORK.CIRAS has 13689 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
      


NOTE: Deleting WORK.NUMRH (memtype=DATA).
NOTE: Deleting WORK.NUMINFLAMMARKER (memtype=DATA).
NOTE: Deleting WORK.NUMREHABVISIT (memtype=DATA).
NOTE: Deleting WORK.NUMRF (memtype=DATA).
NOTE: Deleting WORK.NUMPLATELET (memtype=DATA).
NOTE: Deleting WORK.NUMLFT (memtype=DATA).
NOTE: Deleting WORK.NUMFELTY (memtype=DATA).
NOTE: Deleting WORK.RH (memtype=DATA).
NOTE: Deleting WORK.INFLAMMARKER (memtype=DATA).
NOTE: Deleting WORK.REHABVISIT (memtype=DATA).
NOTE: Deleting WORK.RF (memtype=DATA).
NOTE: Deleting WORK.PLATELET (memtype=DATA).
NOTE: Deleting WORK.LFT (memtype=DATA).
NOTE: Deleting WORK.FELTY (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.46 seconds
      cpu time            0.06 seconds
      

1222       
1223       
1224       proc sql;
1225         create table DT.charlsonIndex as select * from Work._WithCharlson;
NOTE: Table DT.CHARLSONINDEX created, with 59944 rows and 20 columns.

1226         create table DT.CIRAS as select * from Work.CIRAS;
NOTE: Table DT.CIRAS created, with 13689 rows and 10 columns.

1227         create table DT.indRx as select * from Work.indRx;
NOTE: Table DT.INDRX created, with 57128 rows and 33 columns.

1228       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.24 seconds
      cpu time            0.12 seconds
23                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

      

1229       proc contents data = DT.charlsonIndex order = varnum;
1230       run;

                                                                  --- AS project ---                                04:49 Wednesday, June 13, 2018   3

                                                                The CONTENTS Procedure

                                    Data Set Name        DT.CHARLSONINDEX              Observations          59944
                                    Member Type          DATA                          Variables             20   
                                    Engine               V9                            Indexes               0    
                                    Created              06/13/2018 04:51:30           Observation Length    80   
                                    Last Modified        06/13/2018 04:51:30           Deleted Observations  0    
                                    Protection                                         Compressed            NO   
                                    Data Set Type                                      Sorted                NO   
                                    Label                                                                         
                                    Data Representation  WINDOWS_64                                               
                                    Encoding             wlatin1  Western (Windows)                               


                                                          Engine/Host Dependent Information

                                        Data Set Page Size          65536                                    
                                        Number of Data Set Pages    74                                       
                                        First Data Page             1                                        
                                        Max Obs per Page            817                                      
                                        Obs in First Data Page      776                                      
                                        Number of Data Set Repairs  0                                        
                                        ExtendObsCounter            YES                                      
                                        Filename                    V:\studies\AS\data\charlsonindex.sas7bdat
                                        Release Created             9.0401M5                                 
                                        Host Created                X64_DS08R2                               
                                        Owner Name                  AD\benjaminchan                          
                                        File Size                   5MB                                      
                                        File Size (bytes)           4915200                                  


                                                              Variables in Creation Order
 
                                     #    Variable     Type    Len    Label

                                     1    indexID      Num       8                                                
                                     2    indexDate    Num       8                                                
                                     3    MI           Num       3    Myocardial Infarction:                      
                                     4    CHD          Num       3    Coronary heart disease:                     
                                     5    PVD          Num       8    Peripheral vascular disorder:               
                                     6    CVD          Num       3    Cerebrovascular disease:                    
                                     7    DEM          Num       3    Dementia:                                   
                                     8    CPD          Num       3    Chronic pulmonary disease:                  
                                     9    RHD          Num       3    Rheumatologic disease:                      
                                    10    PUD          Num       3    Peptic ulcer disease:                       
                                    11    MLIVD        Num       3    Mild liver disease:                         
                                    12    DIAB         Num       3    Diabetes:                                   
                                    13    DIABC        Num       3    Diabetes with chronic complications:        
                                    14    PLEGIA       Num       3    Hemiplegia or paraplegia:                   
                                    15    REN          Num       3    Renal Disease:                              
                                    16    MALIGN       Num       3    Malignancy, including leukemia and lymphoma:
                                    17    SLIVD        Num       3    Moderate or severe liver disease:           
                                    18    MST          Num       3    Metastatic solid tumor:                     
                                    19    AIDS         Num       3    AIDS:                                       
                                    20    Charlson     Num       8    Charlson score:                             
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: The PROCEDURE CONTENTS printed page 3.

1231       proc contents data = DT.CIRAS order = varnum;
1232       run;

                                                                  --- AS project ---                                04:49 Wednesday, June 13, 2018   4

                                                                The CONTENTS Procedure

                                    Data Set Name        DT.CIRAS                      Observations          13689
                                    Member Type          DATA                          Variables             10   
                                    Engine               V9                            Indexes               0    
                                    Created              06/13/2018 04:51:30           Observation Length    80   
                                    Last Modified        06/13/2018 04:51:30           Deleted Observations  0    
                                    Protection                                         Compressed            NO   
                                    Data Set Type                                      Sorted                NO   
                                    Label                                                                         
                                    Data Representation  WINDOWS_64                                               
                                    Encoding             wlatin1  Western (Windows)                               


                                                          Engine/Host Dependent Information

                                            Data Set Page Size          65536                            
                                            Number of Data Set Pages    17                               
                                            First Data Page             1                                
                                            Max Obs per Page            817                              
                                            Obs in First Data Page      792                              
                                            Number of Data Set Repairs  0                                
                                            ExtendObsCounter            YES                              
                                            Filename                    V:\studies\AS\data\ciras.sas7bdat
                                            Release Created             9.0401M5                         
                                            Host Created                X64_DS08R2                       
                                            Owner Name                  AD\benjaminchan                  
                                            File Size                   1MB                              
                                            File Size (bytes)           1179648                          


                                                             Variables in Creation Order
 
                                                   #    Variable           Type    Len    Format

                                                   1    indexDate          Num       8    MMDDYY10.
                                                   2    indexID            Num       8             
                                                   3    NuminflamMarker    Num       8             
                                                   4    NumRehabVisit      Num       8             
                                                   5    NumRF              Num       8             
                                                   6    Numfelty           Num       8             
                                                   7    Numplatelet        Num       8             
                                                   8    Numlft             Num       8             
                                                   9    Numrh              Num       8             
                                                  10    CIRAS              Num       8             
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: The PROCEDURE CONTENTS printed page 4.

1233       proc contents data = DT.indRx order = varnum;
1234       run;

                                                                  --- AS project ---                                04:49 Wednesday, June 13, 2018   5

                                                                The CONTENTS Procedure

                                    Data Set Name        DT.INDRX                      Observations          57128
                                    Member Type          DATA                          Variables             33   
                                    Engine               V9                            Indexes               0    
                                    Created              06/13/2018 04:51:30           Observation Length    112  
                                    Last Modified        06/13/2018 04:51:30           Deleted Observations  0    
                                    Protection                                         Compressed            NO   
                                    Data Set Type                                      Sorted                NO   
                                    Label                                                                         
                                    Data Representation  WINDOWS_64                                               
                                    Encoding             wlatin1  Western (Windows)                               


                                                          Engine/Host Dependent Information

                                            Data Set Page Size          65536                            
                                            Number of Data Set Pages    98                               
                                            First Data Page             1                                
                                            Max Obs per Page            584                              
                                            Obs in First Data Page      546                              
                                            Number of Data Set Repairs  0                                
                                            ExtendObsCounter            YES                              
                                            Filename                    V:\studies\AS\data\indrx.sas7bdat
                                            Release Created             9.0401M5                         
                                            Host Created                X64_DS08R2                       
                                            Owner Name                  AD\benjaminchan                  
                                            File Size                   6MB                              
                                            File Size (bytes)           6488064                          


                                                             Variables in Creation Order
 
                                                  #    Variable             Type    Len    Format

                                                  1    indexDate            Num       8    MMDDYY10.
                                                  2    indexID              Num       8             
                                                  3    chemo                Num       3             
                                                  4    lipid                Num       3             
                                                  5    dm                   Num       3             
                                                  6    folate               Num       3             
                                                  7    fungus               Num       3             
                                                  8    HTN                  Num       3             
                                                  9    naproxen             Num       3             
                                                 10    narcotics            Num       3             
                                                 11    nsaid                Num       3             
                                                 12    sedative             Num       3             
                                                 13    steroid              Num       3             
                                                 14    tb                   Num       3             
                                                 15    thyroid              Num       3             
                                                 16    viral                Num       3             
                                                 17    dementia             Num       3             
                                                 18    statin               Num       3             
                                                 19    NSAIDcox             Num       3             
                                                 20    BBlocker             Num       3             
                                                 21    op_PPI               Num       3             
                                                 22    op_bisphosp          Num       3             
                                                 23    op_other             Num       3             
                                                 24    thiazide             Num       3             
                                                 25    thiazolidinedione    Num       3             
                                                 26    anticoagulant        Num       3             
                                                 27    antithrom            Num       3             
                                                 28    antibiotics          Num       3             
                                                 29    antipsych            Num       3             
                                                 30    antidepres           Num       3             
                                                 31    anticonvul           Num       3             
                                                 32    calcium              Num       3             
                                                 33    Adrenergic           Num       3             
 
 
 
                                                             queryOtherComorbidities.sas
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: The PROCEDURE CONTENTS printed page 5.

1235       /*
1236       END Fenglong's comorbidities code
1237        */
1238       
1239       
1240       
1241       
1242       proc import out = Work.biologicsLookup
1243                   datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Medicine - DMARDs & BIOs  -
1243     ! 20170409.xlsx"
1244                   dbms = xlsx
1245                   replace;
1246         sheet = "Sheet1";
1247         getnames = yes;
1248         datarow = 2;
1249       run;

NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 789 observations and 8 variables.
NOTE: WORK.BIOLOGICSLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.21 seconds
      cpu time            0.17 seconds
      

1250       proc sql;
1251         delete from Work.biologicsLookup
1252           where category ^= "Biologic";
NOTE: 715 rows were deleted from WORK.BIOLOGICSLOOKUP.

1253         select category, subcate as subcategory, gnn, count(*) as n
1254           from Work.biologicsLookup
1255           group by category, subcate, gnn;
                                                                  --- AS project ---                                04:49 Wednesday, June 13, 2018   6

                                                   Category  SubCate   GNN                        n
                                                   ------------------------------------------------
                                                   Biologic            BELIMUMAB                  2
                                                   Biologic            VEDOLIZUMAB                3
                                                   Biologic  Anti-IL6  TOCILIZUMAB                6
                                                   Biologic  Anti-TNF  ADALIMUMAB                12
                                                   Biologic  Anti-TNF  CERTOLIZUMAB               5
                                                   Biologic  Anti-TNF  ETANERCEPT                11
                                                   Biologic  Anti-TNF  GOLIMUMAB                  6
                                                   Biologic  Anti-TNF  INFLIXIMAB                 2
                                                   Biologic  Bcell     RITUXIMAB                  3
                                                   Biologic  IL12-23   USTEKINUMAB                6
                                                   Biologic  IL17      SECUKINUMAB                4
                                                   Biologic  IL1Ra     ANAKINRA                   6
                                                   Biologic  IL1Ra     CANAKINUMAB                2
                                                   Biologic  Tcell     ABATACEPT                  6
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
1256       quit;
NOTE: The PROCEDURE SQL printed page 6.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      

1257       proc sql;
1258         create table Work.indBiologics0 as
1259           select A.database, A.patid, A.indexID,
24                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

1260                  A.begin_date format = mmddyy10. as rxDate,
1261                  "HCPCS" as codeType,
1262                  A.px as drugCode,
1263                  B.gnn as drugName,
1264                  B.descript as drugDesc,
1265                  . as dispense_sup
1266             from UCB64.tempPrevPxAll A inner join
1267                  Work.biologicsLookup B on (A.px = B.code)
1268             where A.px_date < A.indexDate - 183
1269           union corr
1270           select A.database, A.patid, A.indexID,
1271                  A.dispense_date format = mmddyy10. as rxDate,
1272                  "NDC" as codeType,
1273                  A.ndc as drugCode,
1274                  B.gnn as drugName,
1275                  B.descript as drugDesc,
1276                  A.dispense_sup
1277             from UCB64.tempPrevRxAll A inner join
1278                  Work.biologicsLookup B on (A.ndc = B.code)
1279             where A.dispense_date < A.indexDate - 183;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table WORK.INDBIOLOGICS0 created, with 32283 rows and 9 columns.

1280         select codeType, drugName, count(distinct patid) as countDistinctPatid
1281           from Work.indBiologics0
1282           group by codeType, drugName;
                                                                  --- AS project ---                                04:49 Wednesday, June 13, 2018   7

                                                                                         count
                                                       code                           Distinct
                                                       Type   GNN                        Patid
                                                       ---------------------------------------
                                                       HCPCS  ABATACEPT                     38
                                                       HCPCS  ADALIMUMAB                    14
                                                       HCPCS  CERTOLIZUMAB                  14
                                                       HCPCS  ETANERCEPT                    21
                                                       HCPCS  GOLIMUMAB                      1
                                                       HCPCS  INFLIXIMAB                   720
                                                       HCPCS  RITUXIMAB                     21
                                                       HCPCS  TOCILIZUMAB                   17
                                                       HCPCS  USTEKINUMAB                    2
                                                       NDC    ABATACEPT                     10
                                                       NDC    ADALIMUMAB                   979
                                                       NDC    ANAKINRA                       1
                                                       NDC    CERTOLIZUMAB                  32
                                                       NDC    ETANERCEPT                  1102
                                                       NDC    GOLIMUMAB                    202
                                                       NDC    INFLIXIMAB                    56
                                                       NDC    RITUXIMAB                      1
                                                       NDC    USTEKINUMAB                    2
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
1283         create table DT.indBiologics as
1284           select distinct
1285                  A.database, A.patid, A.indexID,
1286                  1 as indRxBiologics
1287           from Work.indBiologics0 A;
NOTE: Table DT.INDBIOLOGICS created, with 3386 rows and 4 columns.

1288       quit;
NOTE: The PROCEDURE SQL printed page 7.
NOTE: PROCEDURE SQL used (Total process time):
      real time           2.73 seconds
      cpu time            2.60 seconds
      

1289       
1290       
1291       
1292       
1293       proc sql;
1294       /*
1295       Oral corticosteroid use
1296       Mean outpatient prescribed daily dose of prednisone equivalents in the 6
1297       months prior to index date: less than 5 mg/d (low dose), 5 to less than 10
1298       mg/d (medium dose), and 10 mg/d or more (high dose)
1299        */
1300         create table DT.rxOralCorticosteroid as
1301           select C.database, C.patid, C.indexID,
1302                  1 as indOralCorticosteroid,
1303                  sum(C.daysAtRisk * C.prednisodeEquivalentDose) as sumPredEq,
1304                  sum(C.daysAtRisk) as sumDaysSupply,
1305                  sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 as meanPredEqDose,
1306                  case
1307                    when 0 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 2.5 then "Low (<2.5 mg/d)"
1308                    when 2.5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 5 then "Medium-Low (2.5-5 mg/d)"
1309                    when 5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 10 then "Medium-High (5-10 mg/d)"
1310                    when 10 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 then "High (10+ mg/d)"
1311                    else ""
1312                    end as meanPredEqDoseCat
1313           from (select A.database, A.patid, A.indexID,
1314                        A.indexDate - 183 format = mmddyy10. as riskStart,
1315                        A.indexDate,
1316                        A.dispense_date,
1317                        A.dispense_date + A.dispense_sup - 1 format = mmddyy10. as dispense_end,
1318                        A.dispense_sup,
1319                        case
25                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

1320                          /* Rx completely in at-risk period */
1321                          when (A.indexDate - 183 <= A.dispense_date) & ((A.dispense_date + A.dispense_sup - 1) <= A.indexDate)
1322                            then A.dispense_sup
1323                          /* Rx begins before at-risk period */
1324                          when (A.dispense_date < A.indexDate - 183)
1325                            then A.dispense_sup - (A.indexDate - 183 - A.dispense_date)
1326                          /* Rx ends after at-risk period */
1327                          when (A.indexDate < (A.dispense_date + A.dispense_sup - 1))
1328                            then A.dispense_sup - (A.dispense_date + A.dispense_sup - 1 - A.indexDate)
1329                          else .
1330                          end as daysAtRisk,
1331                        B.prednisodeEquivalentDose
1332                 from UCB64.tempPrevRxAll A inner join
1333                      DT.lookupNDC B on (A.ndc = B.ndc)
1334                 where ^missing(B.prednisodeEquivalentDose) &
1335                       ((A.indexDate - 183 <= A.dispense_date <= A.indexDate) |
1336                         (A.indexDate - 183 <= (A.dispense_date + A.dispense_sup - 1) <= A.indexDate))) C
1337           group by C.database, C.patid, C.indexID;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table DT.RXORALCORTICOSTEROID created, with 4455 rows and 8 columns.

1338       /*
1339       Create diagnosis code indicators from inpatient admissions
1340        */
1341         create table DT.diagIndicatorsInpatient as
1342           select A.database, A.patid, A.indexID,
1343                  count(distinct A.admit_date) as countIPAdmits12mPrior,
1344                  case
1345                    when count(distinct A.admit_date) > 0 then 1
1346                    else 0
1347                    end as indIPAdmit12mPrior
1348           from UCB64.tempPrevDx12mPrior A
1349           where A.enc_type = "IP"
1350           group by A.database, A.patid, A.indexID;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table DT.DIAGINDICATORSINPATIENT created, with 1867 rows and 5 columns.

1351       /*
1352       Count encounters
1353        */
1354         create table Work.countAVPhysEncounters as
1355           select B.database, B.patid, B.indexID,
1356                  sum(indAVPhys12mPrior) as countAVPhys12mPrior
1357           from (select distinct A.database, A.patid, A.indexID, A.begin_date,
1358                        1 as indAVPhys12mPrior
1359                 from UCB64.tempPrevPx12mPrior A
1360                 where A.codeType = "CPT" &
1361                       prxmatch("/^(992[0147][1-5])|(990((24)|(58)))/", A.code) &
1362                       calculated indAVPhys12mPrior = 1) B
1363           group by B.database, B.patid, B.indexID;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table WORK.COUNTAVPHYSENCOUNTERS created, with 13677 rows and 4 columns.

1364         create table Work.countAVRheumEncounters as
1365           select B.database, B.patid, B.indexID,
1366                  sum(indAVRheum12mPrior) as countAVRheum12mPrior
1367           from (select distinct A.database, A.patid, A.indexID, A.begin_date,
1368                        case
1369                          when A.database = "MPCD" & B.prov_type = "66" then 1
1370                          when A.database = "Marketscan" & B.prov_type = "300" then 1
1371                          when A.database = "Medicare" & B.prov_type = "66" then 1
1372                          else .
1373                          end as indAVRheum12mPrior
1374                 from UCB64.tempPrevPx12mPrior A inner join
1375                      UCB64.tempPrevDx12mPrior B on (A.database = B.database & A.patid = B.patid & A.encounterID = B.encounterID)
1376                 where A.codeType = "CPT" &
1377                       prxmatch("/^(992[0147][1-5])|(990((24)|(58)))/", A.code) &
1378                       calculated indAVRheum12mPrior = 1) B
1379           group by B.database, B.patid, B.indexID;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table WORK.COUNTAVRHEUMENCOUNTERS created, with 13009 rows and 4 columns.

26                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

1380         create table Work.countEREncounters as
1381           select A.database, A.patid, A.indexID,
1382                  count(distinct A.begin_date) as countERVisits,
1383                  case
1384                    when count(distinct A.begin_date) > 0 then 1
1385                    else 0
1386                    end as indERVisit12mPrior
1387           from UCB64.tempPrevPx12mPrior A
1388           where A.codeType = "CPT" & prxmatch("/^9928[1-5]/", code)
1389           group by A.database, A.patid, A.indexID;
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table WORK.COUNTERENCOUNTERS created, with 3816 rows and 5 columns.

1390         create table DT.countEncounters as
1391           select coalesce(A.database, B.database, C.database) as database,
1392                  coalesce(A.patid, B.patid, C.patid) as patid,
1393                  coalesce(A.indexID, B.indexID, C.indexID) as indexID,
1394                  A.countAVPhys12mPrior,
1395                  B.countAVRheum12mPrior,
1396                  C.indERVisit12mPrior,
1397                  C.countERVisits
1398           from Work.countAVPhysEncounters A full join
1399                Work.countAVRheumEncounters B on (A.indexID = B.indexID) full join
1400                Work.countEREncounters C on (A.indexID = C.indexID | B.indexID = C.indexID);
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table DT.COUNTENCOUNTERS created, with 13680 rows and 7 columns.

1401         select ^missing(countAVPhys12mPrior) as a,
1402                ^missing(countAVRheum12mPrior) as b,
1403                ^missing(indERVisit12mPrior) as c,
1404                count(*) as n
1405           from DT.countEncounters
1406           group by calculated a, calculated b, calculated c;
                                                                  --- AS project ---                                04:49 Wednesday, June 13, 2018   8

                                                               a         b         c         n
                                                        --------------------------------------
                                                               0         0         1         3
                                                               1         0         0       397
                                                               1         0         1       271
                                                               1         1         0      9467
                                                               1         1         1      3542
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
1407       /*
1408       Inhaled antibiotics
1409       
1410       IS A DAYS-SUPPLY CRITERION REQUIRED??
1411         create table Work.indInhaledAntibiotics0 as
1412           select A.patid, A.episodeID,
1413                  A.begin_date format = mmddyy10. as rxDate,
1414                  "HCPCS" as codeType,
1415                  A.px as drugCode,
1416                  "INJECTION" as drugRoute,
1417                  B.descript as drugName,
1418                  A.px_amt,
1419                  . as dispense_sup,
1420                  . as dispense_amt
1421             from WRK.proccodesHCPCS12mPrior A inner join
1422                  DT.lookupJcodes B on (A.px = B.code)
1423             where lower(category) = "inhaled antibiotic"
1424           union corr
1425           select D.patid, D.episodeID,
1426                  D.dispense_date format = mmddyy10. as rxDate,
1427                  "NDC" as codeType,
1428                  E.ndc as drugCode,
1429                  D.rt as drugRoute,
1430                  D.gnn as drugName,
1431                  . as px_amt,
1432                  D.dispense_sup,
1433                  D.dispense_amt
1434             from WRK.rx12mPrior D inner join
1435                  DT.lookupNDC E on (D.ndc = E.ndc)
1436             where (lower(E.etc_name) like '%antibiotic%' | lower(E.etc_name) like '%polymyxin%') &
1437                   lowcase(E.rt) in ("inhalation", "intraven", "injection");
1438         select codeType, drugRoute, drugName, count(distinct patid) as countDistinctPatid
1439           from Work.indInhaledAntibiotics0
1440           group by codeType, drugRoute, drugName;
1441         create table Work.indInhaledAntibiotics1 as
1442           select distinct
1443                  A.patid, A.episodeID,
1444                  1 as indInhaledAntibiotics
1445           from Work.indInhaledAntibiotics0 A;
27                                                                  The SAS System                                      04:49 Wednesday, June 13, 2018

1446        */
1447       quit;
NOTE: The PROCEDURE SQL printed page 8.
NOTE: PROCEDURE SQL used (Total process time):
      real time           42.75 seconds
      cpu time            42.83 seconds
      

1448       
1449       
1450       /*
1451       Code for outpatient infections
1452       Use code for hospitalized infections
1453       See queryPrevalentComorbidities.sas
1454        */
1455       proc sql;
1456         create table Work.defOutcomes as
1457           select *
1458           from DT.defOutcomes
1459           where disease ^in ("Interstitial lung disease");
NOTE: Table WORK.DEFOUTCOMES created, with 2664 rows and 6 columns.

1460       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1461       proc sql;
1462         create table DT.outpatientInfection as
1463           select distinct
1464                  A.database, A.patid, A.indexID,
1465                  1 as indOutpatientInfection
1466           from UCB64.tempPrevDxAll A inner join
1467                Work.defOutcomes B on (A.codeType = B.codeType & A.code = B.code)
1468           where A.enc_type = "AV" &
1469                 B.disease in ("Hospitalized infection");
NOTE: Parallel WHERE evaluation suppressed due to sort order on table.
NOTE: Table DT.OUTPATIENTINFECTION created, with 10483 rows and 4 columns.

1470       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           1.73 seconds
      cpu time            2.40 seconds
      

1471       
1472       
1473       
1474       
1475       ods html close;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           2:52.39
      cpu time            2:38.24
      
