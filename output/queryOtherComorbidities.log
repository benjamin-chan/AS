1                                                          The SAS System                                14:50 Monday, April 9, 2018

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

WARNING: Unable to copy SASUSER registry to WORK registry. Because of this, you will not see registry customizations during this 
         session.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M5) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70086550.
NOTE: This session is executing on the X64_DS08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.3
      SAS/ETS 14.3
      SAS/IML 14.3
      SAS/QC 14.3

NOTE: Additional host information:

 X64_DS08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any 
of the shared folders.

 


NOTE: SAS initialization used:
      real time           5.08 seconds
      cpu time            0.26 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=queryOtherComorbidities; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref STDC5P was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: H:\studies\osteo\data\STD_files\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: h:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
NOTE: Libref NDC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: W:\onenote\references\drug ndcs\sas data
127        footnote "&pgm.";
128        * footnote2 "%sysfunc(datetime(),datetime14.)";
2                                                                   The SAS System                                         14:50 Monday, April 9, 2018

129        title1 '--- AS project ---';
130        **********************************************************************;
131        options macrogen mlogic mprint symbolgen;
132        options nomacrogen nomlogic nomprint nosymbolgen;
133        
134        
135        ods html
136          body = "output\&cmt..html"
137          style = Statistical;
NOTE: Writing HTML Body file: output\queryOtherComorbidities.html
138        
139        
140        
141        
142        proc import out = Work.comorbidityLookup
143                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Covariates Codebook-20170410.xlsx"
144                    dbms = xlsx
145                    replace;
146          sheet = "Comorbidity";
147          getnames = yes;
148          datarow = 2;
149        run;

NOTE:    Variable Name Change.  Compact Definion -> Compact_Definion                
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 1112 observations and 6 variables.
NOTE: WORK.COMORBIDITYLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
      

150        proc sql;
151          alter table Work.comorbidityLookup
152            add code varchar;
NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 7 columns.
153          update Work.comorbidityLookup
154            set code = dequote(icd9_list);
NOTE: 1112 rows were updated in WORK.COMORBIDITYLOOKUP.

155          alter table Work.comorbidityLookup
156            drop compact_definion, icd9_list, billable, description, F;
NOTE: Table WORK.COMORBIDITYLOOKUP has been modified, with 2 columns.
157          delete from Work.comorbidityLookup
158            where missing(code);
NOTE: 1009 rows were deleted from WORK.COMORBIDITYLOOKUP.

159          insert into Work.comorbidityLookup
160            values ("COPD or emphysema", "4910" )
161            values ("COPD or emphysema", "4911" )
162            values ("COPD or emphysema", "49120")
163            values ("COPD or emphysema", "49121")
164            values ("COPD or emphysema", "49122")
165            values ("COPD or emphysema", "4918" )
166            values ("COPD or emphysema", "4919" )
167            values ("COPD or emphysema", "4920" )
168            values ("COPD or emphysema", "4928" )
169            values ("COPD or emphysema", "496"  )
170            values ("COPD or emphysema", "49320")
171            values ("COPD or emphysema", "49321")
172            values ("COPD or emphysema", "49322");
NOTE: 13 rows were inserted into WORK.COMORBIDITYLOOKUP.

173        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.31 seconds
      cpu time            0.06 seconds
      

174        
175        
3                                                                   The SAS System                                         14:50 Monday, April 9, 2018

176        proc sql;
177        
178          %let select1 = select A.*, B.comorbidity;
179          %let join1 = inner join Work.comorbidityLookup B on (A.code = B.code);
180          create table DT.comorbiditiesOther as
181            select distinct
182                   C.database, C.exposure, C.patid, C.ASCohortDate, C.indexGNN, C.indexDate, C.indexID,
183                   C.age, C.sex,
184                   C.comorbidity,
185                   1 as indPreExposure
186            from (&select1 from UCB.tempPrevDxAll A &join1) C;
NOTE: Data set UCB.TEMPPREVDXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.COMORBIDITIESOTHER created, with 75789 rows and 11 columns.

187        
188          select comorbidity, database, exposure, sum(indPreExposure) as sumIndPreExposure
189            from DT.comorbiditiesOther
190            group by comorbidity, database, exposure;
                                                                  --- AS project ---                                   14:50 Monday, April 9, 2018   1

                                                                                                      sumIndPre
                                       Comorbidity                        database    exposure         Exposure
                                       ------------------------------------------------------------------------
                                       COPD or emphysema                  MPCD        DMARD                  37
                                       COPD or emphysema                  MPCD        NSAID                  63
                                       COPD or emphysema                  MPCD        No exposure           252
                                       COPD or emphysema                  MPCD        TNF                    61
                                       COPD or emphysema                  Marketscan  DMARD                 117
                                       COPD or emphysema                  Marketscan  NSAID                 378
                                       COPD or emphysema                  Marketscan  No exposure           501
                                       COPD or emphysema                  Marketscan  TNF                   259
                                       COPD or emphysema                  Medicare    DMARD                1856
                                       COPD or emphysema                  Medicare    NSAID                4801
                                       COPD or emphysema                  Medicare    No exposure          4641
                                       COPD or emphysema                  Medicare    TNF                  1741
                                       Diabetes                           MPCD        DMARD                  69
                                       Diabetes                           MPCD        NSAID                 121
                                       Diabetes                           MPCD        No exposure           401
                                       Diabetes                           MPCD        TNF                   135
                                       Diabetes                           Marketscan  DMARD                 268
                                       Diabetes                           Marketscan  NSAID                 669
                                       Diabetes                           Marketscan  No exposure           859
                                       Diabetes                           Marketscan  TNF                   636
                                       Diabetes                           Medicare    DMARD                2040
                                       Diabetes                           Medicare    NSAID                5212
                                       Diabetes                           Medicare    No exposure          5191
                                       Diabetes                           Medicare    TNF                  2117
                                       Hypertention                       MPCD        DMARD                 192
                                       Hypertention                       MPCD        NSAID                 359
                                       Hypertention                       MPCD        No exposure           863
                                       Hypertention                       MPCD        TNF                   437
                                       Hypertention                       Marketscan  DMARD                 864
                                       Hypertention                       Marketscan  NSAID                1996
                                       Hypertention                       Marketscan  No exposure          2449
                                       Hypertention                       Marketscan  TNF                  2152
                                       Hypertention                       Medicare    DMARD                4321
                                       Hypertention                       Medicare    NSAID               10763
                                       Hypertention                       Medicare    No exposure         11119
                                       Hypertention                       Medicare    TNF                  4484
                                       Metabolic syndrome                 MPCD        DMARD                   5
                                       Metabolic syndrome                 MPCD        NSAID                  14
                                       Metabolic syndrome                 MPCD        No exposure            21
                                       Metabolic syndrome                 MPCD        TNF                    13
                                       Metabolic syndrome                 Marketscan  DMARD                  43
                                       Metabolic syndrome                 Marketscan  NSAID                  57
                                       Metabolic syndrome                 Marketscan  No exposure            66
                                       Metabolic syndrome                 Marketscan  TNF                    79
                                       Metabolic syndrome                 Medicare    DMARD                 130
                                       Metabolic syndrome                 Medicare    NSAID                 343
                                       Metabolic syndrome                 Medicare    No exposure           228
                                       Metabolic syndrome                 Medicare    TNF                   171
                                       Non-alcoholic fatty liver disease  MPCD        DMARD                   6
                                       Non-alcoholic fatty liver disease  MPCD        NSAID                   9
                                       Non-alcoholic fatty liver disease  MPCD        No exposure            16
                                       Non-alcoholic fatty liver disease  MPCD        TNF                    23
                                       Non-alcoholic fatty liver disease  Marketscan  DMARD                  34
                                       Non-alcoholic fatty liver disease  Marketscan  NSAID                 117
                                       Non-alcoholic fatty liver disease  Marketscan  No exposure           126
                                       Non-alcoholic fatty liver disease  Marketscan  TNF                   168
                                       Non-alcoholic fatty liver disease  Medicare    DMARD                 261
                                       Non-alcoholic fatty liver disease  Medicare    NSAID                 639
                                       Non-alcoholic fatty liver disease  Medicare    No exposure           456
                                       Non-alcoholic fatty liver disease  Medicare    TNF                   340
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
191        
192        quit;
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           16.20 seconds
      cpu time            17.98 seconds
      

193        
194        
195        
196        /*
197        BEGIN Fenglong's comorbidities code
198        
199        From: Xie, Fenglong [mailto:fenglongxie@uabmc.edu]
200        Sent: Wednesday, November 29, 2017 1:32 PM
201        To: Benjamin Chan <chanb@ohsu.edu>
202        Subject: Attachment from my EndNote Library
203        
204        Hi, Ben
205        
206        Here are variable list included in our infection risk score model.
207        
208        Hinfect agec preddose cpd Invisit heartFailure diabs antidepres nsaid HTN narcotics fracture lipid malign dem outInfect
209        ulcer fungus sex op_bisphosp BENE_ENTLMT_RSN_ORIG thiazide Hypertension psa inflamMarker anticoagulant mammo;
210        
211        please refer to table 2 in the attached reference for full name of these variables and the attached text file for definition of these
211      ! variables.
212        
213        Definition for some variables (such as ICD 9 codes for infection) may changed, please use most recent ICD 9 list.
214        
215        Please let me know if you have any question.
216        
217        Fenglong
218         */
219        /*
220        Only use ICD-9 codes from previous 12 months for Charlson
221         */
222        /*
223        Last execution: 1/2/2018 (commit 56f369)
224        DO NOT EXECUTE AGAIN
225        Due to server upgrade (32-bit to 64-bit SAS), subsequent execution results in error:
226        "ERROR: Foreign datasets cannot be modified."
227         */
228        /*
229        proc sql;
230          create table UCB.tempPrevDx12mPrior as
231            select *
232            from UCB.tempPrevDxAll
233            where intnx("year", indexDate, -1, "same") < begin_date <= indexDate
234            order by indexID, indexDate;
235          create table UCB.tempPrevPx12mPrior as
4                                                                   The SAS System                                         14:50 Monday, April 9, 2018

236            select *
237            from UCB.tempPrevPxAll
238            where intnx("year", indexDate, -1, "same") < px_date <= indexDate
239            order by indexID, indexDate;
240          create table UCB.tempPrevRx12mPrior as
241            select A.*, B.etc_name, B.source
242            from UCB.tempPrevRxAll A left join
243                 DT.lookupNDC B on (A.ndc = B.ndc)
244            where intnx("year", indexDate, -1, "same") < dispense_date <= indexDate
245            order by indexID, indexDate;
246        quit;
247        
248        %include "lib\charlson.sas" / source2;
249        %include "lib\indicationDx.sas" / source2;
250        %include "lib\indicationPx.sas" / source2;
251        %include "lib\indicationRx.sas" / source2;
252        %include "lib\NumCnt.sas" / source2;
253        %include "lib\ciras.sas" / source2;
254        
255        %let CovariateListDx= hepatitisC fluVaccineDx JointSurgDx ulcer obese smoke
256                              lipidDx uveitis growthFail mammoDx PSAdx PapDx endoDx Sjogrens MI heartFailure stroke TIA EAM
257                              fistula_abscessDx hemaCa solidCa
258                              Hypertension angina fracture osteo icd7100; *covariate in 3rd line are from malignancy WG;
259        %indicationDx(indexID, indexDate);
260        
261        %let CovariateListPx = InflamMarker RehabVisit RF platelet LFT FluVaccine jointSurg lipidPx Coronary_Revas
262                               intraArticularInj MammoPx PSApx PAPpx endoPx FOBT J3490
263                               fistula_abscessPx ercpPx barium_ugiPx barium_colonPx;
264        %indicationPx(indexID, indexDate);
265        
266        %let CovariateListRx= chemo lipid dm folate fungus HTN naproxen narcotics nsaid sedative steroid tb thyroid viral
267                             dementia statin NSAIDcox BBlocker op_PPI op_bisphosp op_other
268                             thiazide thiazolidinedione anticoagulant
269                   antithrom antibiotics antipsych antidepres anticonvul calcium Adrenergic;
270        %indicationRx(indexID, indexDate);
271        proc means data = Work.indRx;
272          var &CovariateListRx;
273        run;
274        
275        %charlson(inputds = ,
276                  idVar = indexID,
277                  IndexDateVarName = indexDate,
278                  outputds = CCI,
279                  IndexVarName = Charlson,
280                  inpatonly = B,
281                  malig = N);
282        
283        %ciras(DT.indexLookup, indexID, indexDate);
284        
285        
286        proc sql;
287          create table DT.charlsonIndex as select * from Work._WithCharlson;
288          create table DT.CIRAS as select * from Work.CIRAS;
289          create table DT.indRx as select * from Work.indRx;
290        quit;
291        proc contents data = DT.charlsonIndex order = varnum;
292        run;
293        proc contents data = DT.CIRAS order = varnum;
294        run;
295        proc contents data = DT.indRx order = varnum;
296        run;
297         */
298        /*
299        END Fenglong's comorbidities code
300         */
301        
302        
303        
304        
305        proc import out = Work.biologicsLookup
306                    datafile = "U:\studies\AS\pgms\bchan\data\raw\AS Project Codebooks - 20170410\AS Project Medicine - DMARDs & BIOs  -
306      ! 20170409.xlsx"
5                                                                   The SAS System                                         14:50 Monday, April 9, 2018

307                    dbms = xlsx
308                    replace;
309          sheet = "Sheet1";
310          getnames = yes;
311          datarow = 2;
312        run;

NOTE: One or more variables were converted because the data type is not supported by the V9 engine. For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 789 observations and 8 variables.
NOTE: WORK.BIOLOGICSLOOKUP data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
      

313        proc sql;
314          delete from Work.biologicsLookup
315            where category ^= "Biologic";
NOTE: 715 rows were deleted from WORK.BIOLOGICSLOOKUP.

316          select category, subcate as subcategory, gnn, count(*) as n
317            from Work.biologicsLookup
318            group by category, subcate, gnn;
                                                                  --- AS project ---                                   14:50 Monday, April 9, 2018   2

                                                   Category  SubCate   GNN                        n
                                                   ------------------------------------------------
                                                   Biologic            BELIMUMAB                  2
                                                   Biologic            VEDOLIZUMAB                3
                                                   Biologic  Anti-IL6  TOCILIZUMAB                6
                                                   Biologic  Anti-TNF  ADALIMUMAB                12
                                                   Biologic  Anti-TNF  CERTOLIZUMAB               5
                                                   Biologic  Anti-TNF  ETANERCEPT                11
                                                   Biologic  Anti-TNF  GOLIMUMAB                  6
                                                   Biologic  Anti-TNF  INFLIXIMAB                 2
                                                   Biologic  Bcell     RITUXIMAB                  3
                                                   Biologic  IL12-23   USTEKINUMAB                6
                                                   Biologic  IL17      SECUKINUMAB                4
                                                   Biologic  IL1Ra     ANAKINRA                   6
                                                   Biologic  IL1Ra     CANAKINUMAB                2
                                                   Biologic  Tcell     ABATACEPT                  6
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
319        quit;
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      

320        proc sql;
321          create table Work.indBiologics0 as
322            select A.database, A.patid, A.indexID,
323                   A.begin_date format = mmddyy10. as rxDate,
324                   "HCPCS" as codeType,
325                   A.px as drugCode,
326                   B.gnn as drugName,
327                   B.descript as drugDesc,
328                   . as dispense_sup
329              from UCB.tempPrevPx12mPrior A inner join
330                   Work.biologicsLookup B on (A.px = B.code)
331              where A.px_date < A.indexDate
332            union corr
333            select A.database, A.patid, A.indexID,
334                   A.dispense_date format = mmddyy10. as rxDate,
335                   "NDC" as codeType,
336                   A.ndc as drugCode,
337                   B.gnn as drugName,
338                   B.descript as drugDesc,
339                   A.dispense_sup
340              from UCB.tempPrevRx12mPrior A inner join
341                   Work.biologicsLookup B on (A.ndc = B.code)
342              where A.dispense_date < A.indexDate;
NOTE: Data set UCB.TEMPPREVPX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
NOTE: Data set UCB.TEMPPREVRX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.INDBIOLOGICS0 created, with 33750 rows and 9 columns.

343          select codeType, drugName, count(distinct patid) as countDistinctPatid
344            from Work.indBiologics0
345            group by codeType, drugName;
                                                                  --- AS project ---                                   14:50 Monday, April 9, 2018   3

                                                                                         count
                                                       code                           Distinct
                                                       Type   GNN                        Patid
                                                       ---------------------------------------
                                                       HCPCS  ABATACEPT                    154
                                                       HCPCS  ADALIMUMAB                    18
                                                       HCPCS  CERTOLIZUMAB                  59
                                                       HCPCS  ETANERCEPT                    40
                                                       HCPCS  GOLIMUMAB                     14
                                                       HCPCS  INFLIXIMAB                  1884
                                                       HCPCS  RITUXIMAB                    114
                                                       HCPCS  TOCILIZUMAB                   84
                                                       HCPCS  USTEKINUMAB                    4
                                                       NDC    ABATACEPT                     41
                                                       NDC    ADALIMUMAB                  1854
                                                       NDC    ANAKINRA                       6
                                                       NDC    CERTOLIZUMAB                  90
                                                       NDC    ETANERCEPT                  2301
                                                       NDC    GOLIMUMAB                    327
                                                       NDC    INFLIXIMAB                    94
                                                       NDC    RITUXIMAB                      4
                                                       NDC    TOCILIZUMAB                    8
                                                       NDC    USTEKINUMAB                    8
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
346          create table DT.indBiologics as
347            select distinct
348                   A.database, A.patid, A.indexID,
349                   1 as indBiologics12mPrior
350            from Work.indBiologics0 A;
NOTE: Table DT.INDBIOLOGICS created, with 7552 rows and 4 columns.
6                                                                   The SAS System                                         14:50 Monday, April 9, 2018


351        quit;
NOTE: The PROCEDURE SQL printed page 3.
NOTE: PROCEDURE SQL used (Total process time):
      real time           5.74 seconds
      cpu time            5.71 seconds
      

352        
353        
354        
355        
356        proc sql;
357        /*
358        Oral corticosteroid use
359        Mean outpatient prescribed daily dose of prednisone equivalents in the 6
360        months prior to index date: less than 5 mg/d (low dose), 5 to less than 10
361        mg/d (medium dose), and 10 mg/d or more (high dose)
362         */
363          create table DT.rxOralCorticosteroid as
364            select C.database, C.patid, C.indexID,
365                   1 as indOralCorticosteroid,
366                   sum(C.daysAtRisk * C.prednisodeEquivalentDose) as sumPredEq,
367                   sum(C.daysAtRisk) as sumDaysSupply,
368                   sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 as meanPredEqDose,
369                   case
370                     when 0 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 2.5 then "Low (<2.5 mg/d)"
371                     when 2.5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 5 then "Medium-Low (2.5-5 mg/d)"
372                     when 5 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 < 10 then "Medium-High (5-10 mg/d)"
373                     when 10 <= sum(C.daysAtRisk * C.prednisodeEquivalentDose) / 183 then "High (10+ mg/d)"
374                     else ""
375                     end as meanPredEqDoseCat
376            from (select A.database, A.patid, A.indexID,
377                         A.indexDate - 183 format = mmddyy10. as riskStart,
378                         A.indexDate,
379                         A.dispense_date,
380                         A.dispense_date + A.dispense_sup - 1 format = mmddyy10. as dispense_end,
381                         A.dispense_sup,
382                         case
383                           /* Rx completely in at-risk period */
384                           when (A.indexDate - 183 <= A.dispense_date) & ((A.dispense_date + A.dispense_sup - 1) <= A.indexDate)
385                             then A.dispense_sup
386                           /* Rx begins before at-risk period */
387                           when (A.dispense_date < A.indexDate - 183)
388                             then A.dispense_sup - (A.indexDate - 183 - A.dispense_date)
389                           /* Rx ends after at-risk period */
390                           when (A.indexDate < (A.dispense_date + A.dispense_sup - 1))
391                             then A.dispense_sup - (A.dispense_date + A.dispense_sup - 1 - A.indexDate)
392                           else .
393                           end as daysAtRisk,
394                         B.prednisodeEquivalentDose
395                  from UCB.tempPrevRxAll A inner join
396                       DT.lookupNDC B on (A.ndc = B.ndc)
397                  where ^missing(B.prednisodeEquivalentDose) &
398                        ((A.indexDate - 183 <= A.dispense_date <= A.indexDate) |
399                          (A.indexDate - 183 <= (A.dispense_date + A.dispense_sup - 1) <= A.indexDate))) C
400            group by C.database, C.patid, C.indexID;
NOTE: Data set UCB.TEMPPREVRXALL is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.RXORALCORTICOSTEROID created, with 18717 rows and 8 columns.

401        /*
402        Create diagnosis code indicators from inpatient admissions
403         */
404          create table DT.diagIndicatorsInpatient as
405            select A.database, A.patid, A.indexID,
406                   count(distinct A.admit_date) as countIPAdmits,
407                   case
408                     when count(distinct A.admit_date) > 0 then 1
409                     else 0
410                     end as indIPAdmit12mPrior
7                                                                   The SAS System                                         14:50 Monday, April 9, 2018

411            from UCB.tempPrevDx12mPrior A
412            where A.enc_type = "IP"
413            group by A.database, A.patid, A.indexID;
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table DT.DIAGINDICATORSINPATIENT created, with 17714 rows and 5 columns.

414        /*
415        Count encounters
416         */
417          create table Work.countAVPhysEncounters as
418            select B.database, B.patid, B.indexID,
419                   sum(indAVPhysEncounter) as countAVPhysEncounters
420            from (select distinct A.database, A.patid, A.indexID, A.begin_date,
421                         prxmatch("/(0[1-9])|(1[0-46-8])|(2[02-9])|(3[0346-9])|(4[046])|(66)|(7[26-9])|(8[1-6])|(9[0-489])|(C[03])/",
422                                 A.prov_type) > 0 as indAVPhysEncounter
423                  from UCB.tempPrevDx12mPrior A
424                  where A.enc_type = "AV" & not(missing(A.dx)) & calculated indAVPhysEncounter = 1) B
425            group by B.database, B.patid, B.indexID;
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTAVPHYSENCOUNTERS created, with 58986 rows and 4 columns.

426          create table Work.countAVRheumEncounters as
427            select B.database, B.patid, B.indexID,
428                   sum(indAVRheumEncounter) as countAVRheumEncounters
429            from (select distinct A.database, A.patid, A.indexID, A.begin_date,
430                         A.prov_type = "66" as indAVRheumEncounter
431                  from UCB.tempPrevDx12mPrior A
432                  where A.enc_type = "AV" & not(missing(A.dx)) & calculated indAVRheumEncounter = 1) B
433            group by B.database, B.patid, B.indexID;
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTAVRHEUMENCOUNTERS created, with 29196 rows and 4 columns.

434          create table Work.countEREncounters as
435            select A.database, A.patid, A.indexID,
436                   count(distinct A.begin_date) as countERVisits,
437                   case
438                     when count(distinct A.begin_date) > 0 then 1
439                     else 0
440                     end as indERVisit12mPrior
441            from UCB.tempPrevDx12mPrior A
442            where A.enc_type = "ED"
443            group by A.database, A.patid, A.indexID;
NOTE: Data set UCB.TEMPPREVDX12MPRIOR is in a format that is native to another host. Cross Environment Data Access will be used. This will require 
      additional CPU resources and may reduce performance.
The SAS supervisor will process queries for foreign datasets. No parallel where-clause processing will occur.
NOTE: Table WORK.COUNTERENCOUNTERS created, with 24086 rows and 5 columns.

444          create table DT.countEncounters as
445            select coalesce(A.database, B.database, C.database) as database,
446                   coalesce(A.patid, B.patid, C.patid) as patid,
447                   coalesce(A.indexID, B.indexID, C.indexID) as indexID,
448                   A.countAVPhysEncounters,
449                   B.countAVRheumEncounters,
450                   C.indERVisit12mPrior,
451                   C.countERVisits
452            from Work.countAVPhysEncounters A full join
453                 Work.countAVRheumEncounters B on (A.indexID = B.indexID) full join
454                 Work.countEREncounters C on (A.indexID = C.indexID | B.indexID = C.indexID);
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table DT.COUNTENCOUNTERS created, with 59560 rows and 7 columns.

455          select ^missing(countAVPhysEncounters) as a,
456                 ^missing(countAVRheumEncounters) as b,
457                 ^missing(indERVisit12mPrior) as c,
458                 count(*) as n
459            from DT.countEncounters
8                                                                   The SAS System                                         14:50 Monday, April 9, 2018

460            group by calculated a, calculated b, calculated c;
                                                                  --- AS project ---                                   14:50 Monday, April 9, 2018   4

                                                               a         b         c         n
                                                        --------------------------------------
                                                               0         0         1       574
                                                               1         0         0     17454
                                                               1         0         1     12336
                                                               1         1         0     18020
                                                               1         1         1     11176
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                             queryOtherComorbidities.sas
461        /*
462        Inhaled antibiotics
463        
464        IS A DAYS-SUPPLY CRITERION REQUIRED??
465          create table Work.indInhaledAntibiotics0 as
466            select A.patid, A.episodeID,
467                   A.begin_date format = mmddyy10. as rxDate,
468                   "HCPCS" as codeType,
469                   A.px as drugCode,
470                   "INJECTION" as drugRoute,
471                   B.descript as drugName,
472                   A.px_amt,
473                   . as dispense_sup,
474                   . as dispense_amt
475              from WRK.proccodesHCPCS12mPrior A inner join
476                   DT.lookupJcodes B on (A.px = B.code)
477              where lower(category) = "inhaled antibiotic"
478            union corr
479            select D.patid, D.episodeID,
480                   D.dispense_date format = mmddyy10. as rxDate,
481                   "NDC" as codeType,
482                   E.ndc as drugCode,
483                   D.rt as drugRoute,
484                   D.gnn as drugName,
485                   . as px_amt,
486                   D.dispense_sup,
487                   D.dispense_amt
488              from WRK.rx12mPrior D inner join
489                   DT.lookupNDC E on (D.ndc = E.ndc)
490              where (lower(E.etc_name) like '%antibiotic%' | lower(E.etc_name) like '%polymyxin%') &
491                    lowcase(E.rt) in ("inhalation", "intraven", "injection");
492          select codeType, drugRoute, drugName, count(distinct patid) as countDistinctPatid
493            from Work.indInhaledAntibiotics0
494            group by codeType, drugRoute, drugName;
495          create table Work.indInhaledAntibiotics1 as
496            select distinct
497                   A.patid, A.episodeID,
498                   1 as indInhaledAntibiotics
499            from Work.indInhaledAntibiotics0 A;
500         */
501        quit;
NOTE: The PROCEDURE SQL printed page 4.
NOTE: PROCEDURE SQL used (Total process time):
      real time           53.35 seconds
      cpu time            56.12 seconds
      

502        
503        
504        
505        
506        ods html close;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           1:33.70
      cpu time            1:20.91
      
