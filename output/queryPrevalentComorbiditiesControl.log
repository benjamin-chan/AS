1                                                          The SAS System                          09:27 Thursday, September 7, 2017

NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M1) 
      Licensed to UNIVERSITY OF ALABAMA AT BIRMINGHAM - SFA - T&R, Site 70058223.
NOTE: This session is executing on the W32_ES08R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 13.1
      SAS/ETS 13.1
      SAS/OR 13.1
      SAS/IML 13.1
      SAS/QC 13.1

NOTE: Additional host information:

 W32_ES08R2 WIN 6.1.7601 Service Pack 1 Server

--- PEER News and Updates ---

: SECURITY REMINDER :
Please remember not to copy any data files that contain PHI (protected health identifiers) to any of the shared folders.

 


NOTE: SAS initialization used:
      real time           0.14 seconds
      cpu time            0.12 seconds
      
1          *  University of Alabama at Birmingham                               *
2          *  AS project                                            *
3          **********************************************************************;
4          options pagesize=74 linesize=150 pageno=1 missing=' ' date FORMCHAR="|----|+|---+=|-/\<>*";
5          * Programmer    : Benjamin Chan <chanb@ohsu.edu>
6          * Creation date :
7          * Modify date   :
8          ;
9          %let cmt=queryPrevalentComorbiditiesControl; * type the name of your program here (without the filename extension);
10         %let pgm=&cmt..sas;
11         %include "lib\libname.sas" ;
NOTE: Libref CCW5STD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: h:\studies\osteo\data\CDM\5pct\
NOTE: Libref STD_SABR was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\data\std_SABER\
NOTE: Libref MPSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: h:\studies\mpcd\data\stddata\
NOTE: Libref UCBSTD was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\stddata\
NOTE: Libref UCB was successfully assigned as follows: 
      Engine:        SPDE 
      Physical Name: q:\studies\AS\data\UCB\
NOTE: Libref DT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: V:\studies\AS\data
89         footnote "&pgm.";
90         * footnote2 "%sysfunc(datetime(),datetime14.)";
91         title1 '--- AS project ---';
92         **********************************************************************;
93         options macrogen mlogic mprint symbolgen;
94         options nomacrogen nomlogic nomprint nosymbolgen;
95         
96         
97         ods html
98           body = "output\&cmt..html"
99           style = Statistical;
NOTE: Writing HTML Body file: output\queryPrevalentComorbiditiesControl.html
2                                                                   The SAS System                                   09:27 Thursday, September 7, 2017

100        
101        
102        /*
103        Calculate the prevalence of each comorbidity over various time intervals, by
104        disease cohort (AS vs. non-AS). We will explore how the prevalence of each
105        condition varies according to the amount of data available. Outcomes will be
106        examined in discrete 12 month increments (i.e. using 12 months of data, 24
107        months, 36 months, etc.) using the 6 months baseline plus an additional 6
108        (1st year), 18 (1st and 2nd year), 30 (1st, 2nd, and 3rd year), etc. months
109        of follow-up.
110         */
111        
112        
113        /*
114        See the *Compact Outcome Definition* worksheet in `AS Project Cohort Outcome Codebook-20170410.xlsx`
115         */
116        
117        
118        /*
119        Call interstitial lung disease macro
120         */
121        %include "lib\IPP_2IPSOPplusPX_ILD.sas" / source2;
NOTE: %INCLUDE (level 1) file lib\IPP_2IPSOPplusPX_ILD.sas is file U:\studies\AS\pgms\bchan\lib\IPP_2IPSOPplusPX_ILD.sas.
122       +/*
123       +Interstitial lung disease;
124       +1)  One or more diagnosis codes for ILD from primary discharge
125       +Or
126       +2)  (Two or more diagnosis codes for ILD from secondary discharge or physician EMM ) plus one or more diagnosis tests within 90 days prior
126      !+to (inclusive) one of the diagnosis code for ILD
127       +*/
128       +%macro IPP_2IPSOPplusPX_ILD(outdata=,ids=,Dxs=, Pxs=);
129       +*DXs=diagnosis code in followup, Pxs=CPT code in follow up;
130       +*do not name outData as IPPILD dxIPSILD dxOPILD dxIPSOPILD pxILD dxpxIPSOPILD IPSOPILD;
131       +
132       +data IPPILD dxIPSILD dxOPILD;
133       +set &dxs();
134       +length dx1_date 4;
135       +format dx1_date mmddyy10.;
136       +dx1_date=min(ADMIT_DATE,  BEGIN_DATE);
137       +
138       +if dx in :('515','51630','51631','51632','51633','51634','51635','51636','51637',
139       +           '5164','5165','5166','5168','5169','71481');
140       +
141       +if enc_type='IP' and pdx='P'
142       +    then output IPPILD;
143       +if enc_type='IP' and pdx ne 'P'
144       +    then output dxIPSILD;
145       +if enc_type not in ('IP','IF', 'OT', " ")
146       +    then output dxOPILD;
147       +run;
148       +
149       +data dxIPSOPILD; *ILD from secondary discharge or physician EMM;
150       +set dxIPSILD dxOPILD;
151       +run;
152       +
153       +data pxILD; *diagnosis tests;
154       +set &pxs();
155       +if (px_type='09' and px in ('8741','8742')) or
156       +   (px_type='C1' and px in ('71250','71260','71270','71275','31625','31628',
157       +                             '31629','31632','31633','32095','32096','32097',
158       +                             '32098','32400','32405','32604','32606','32607',
159       +                             '32608','32609'));
160       +run;
161       +proc sort data=pxILD nodupkey; by &IDS px_date;run; * drop duplicate PX date and keep only one;
162       +
163       +proc sql;
164       +/*one or more diagnosis tests within 90 days prior to (inclusive) one of the diagnosis code for ILD*/
165       +create table dxpxIPSOPILD as
166       +select a.* , b.px_date
167       +from dxIPSOPILD as a
168       +    ,
169       +     pxILD as b
3                                                                   The SAS System                                   09:27 Thursday, September 7, 2017

170       +where a.&IDS=b.&IDS and
171       +      min(b.ADMIT_DATE, b.BEGIN_DATE)-90<=b.px_date<=min(b.ADMIT_DATE, b.BEGIN_DATE);
172       +
173       +/* sencond DX code */
174       +create table IPSOPILD as
175       +select a.*, min(b.ADMIT_DATE, b.BEGIN_DATE) as DX2_date length=4 format mmddyy10.
176       +from dxpxIPSOPILD as a
177       +    ,
178       +     dxIPSOPILD(drop=dx1_date) as b
179       +where a.patid=b.patid and
180       +      (a.ADMIT_DATE ne b.ADMIT_DATE and a.BEGIN_DATE ne b.BEGIN_DATE)
181       +order by &IDS,ADMIT_DATE, BEGIN_DATE;
182       +quit;
183       +
184       +
185       +data &outData;
186       +set IPPILD IPSOPILD;
187       +length outcome $20 outcome_date outcome_start_date 4;
188       +format outcome_date outcome_start_date mmddyy10.;
189       +outcome="ILD";
190       +outcome_date=max(dx1_date, dx2_date, px_date);
191       +outcome_start_date=min(dx1_date, dx2_date, px_date);
192       +drop ADMIT_DATE BEGIN_DATE DISCHARGE_DATE END_DATE;
193       +run;
194       +
195       +proc sort data=&outData;
196       +by &IDS outcome_date descending outcome_start_date descending Enc_type;
197       +run;
198       +
199       +data &outData;
200       +set &outData;
201       +by &IDS outcome_date descending outcome_start_date;
202       +if first.outcome_date;
203       +run;
204       +
205       +proc datasets nolist;
206       +delete IPPILD dxIPSILD dxOPILD dxIPSOPILD pxILD dxpxIPSOPILD IPSOPILD;
207       +quit;run;
208       +%mend IPP_2IPSOPplusPX_ILD;
NOTE: %INCLUDE (level 1) ending.
209        %IPP_2IPSOPplusPX_ILD(outdata = Work.outcome_ILD_MPCD,
210                              IDS = controlID,
211                              Dxs = UCB.tempPrevDxMPCDControl,
212                              Pxs = UCB.tempPrevPxMPCDControl);

NOTE: There were 373191 observations read from the data set UCB.TEMPPREVDXMPCDCONTROL.
NOTE: The data set WORK.IPPILD has 0 observations and 25 variables.
NOTE: The data set WORK.DXIPSILD has 0 observations and 25 variables.
NOTE: The data set WORK.DXOPILD has 189 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           1.38 seconds
      cpu time            0.15 seconds
      


NOTE: There were 0 observations read from the data set WORK.DXIPSILD.
NOTE: There were 189 observations read from the data set WORK.DXOPILD.
NOTE: The data set WORK.DXIPSOPILD has 189 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      


NOTE: There were 880584 observations read from the data set UCB.TEMPPREVPXMPCDCONTROL.
NOTE: The data set WORK.PXILD has 1327 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           2.54 seconds
      cpu time            0.07 seconds
      

ERROR: Variable CONTROLID not found.
4                                                                   The SAS System                                   09:27 Thursday, September 7, 2017


NOTE: The SAS System stopped processing this step because of errors.
NOTE: SAS set option OBS=0 and will continue to check statements. This might cause NOTE: No observations in data set.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


ERROR: Column controlID could not be found in the table/view identified with the correlation name A.
ERROR: Column controlID could not be found in the table/view identified with the correlation name B.
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


ERROR: File WORK.IPSOPILD.DATA does not exist.

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK.OUTCOME_ILD_MPCD may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      


ERROR: Variable CONTROLID not found.

NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK.OUTCOME_ILD_MPCD has 0 observations and 26 variables.
WARNING: Data set WORK.OUTCOME_ILD_MPCD was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

213        /* %IPP_2IPSOPplusPX_ILD(outdata = Work.outcome_ILD_SABR,
214                              IDS = controlID,
215                              Dxs = UCB.tempPrevDxSABRControl,
216                              Pxs = UCB.tempPrevPxSABRControl); */
217        
218        /*
219        Process fracture episodes data set
220         */
221        proc sql;
222          create table Work.fractures as
223            select database,
224                   cohort,
225                   patid,
226                   indexDate,
227                   controlID,
228                   age,
229                   sex,
230                   "Osteoporotic fracture" as outcomeCategory,
231                   fractureType as disease,
5                                                                   The SAS System                                   09:27 Thursday, September 7, 2017

232                   fractureEpisodeStart as begin_date
233            from DT.fractureEpisodesPrevControl
234            where ^missing(fractureType);
NOTE: Table WORK.FRACTURES created, with 0 rows and 10 columns.

235        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

236        
237        
238        
239        
240        proc sql;
241        
242          create table Work.defOutcomes as
243            select *
244            from DT.defOutcomes
245            where disease ^in ("Interstitial lung disease");
NOTE: Table WORK.DEFOUTCOMES created, with 0 rows and 6 columns.

246        
247          %let select1 = select A.*, B.outcomeCategory, B.disease;
248          %let join1 = inner join Work.defOutcomes B on (A.codeType = B.codeType & A.code = B.code);
249          %let where1a = where B.disease ^in ("Myocardial infarction", "Hospitalized infection");
250          %let where1b = | (B.disease in ("Myocardial infarction", "Hospitalized infection") & A.enc_type = "IP");
251          %let select2 = select database, cohort, patid, indexDate, controlID, enc_type, age, sex, "Lung disease" as outcomeCategory, "Interstitial
251      !  lung disease" as disease, outcome_start_date as begin_date;
252          create table DT.comorbiditiesControl as
253            select C.database, C.cohort, C.patid, C.indexDate, C.controlID, C.age, C.sex,
254                   C.outcomeCategory,
255                   C.disease,
256                   sum(C.begin_date <= C.indexDate) > 0 as indPrevPriorToIndex,
257                   sum(0 <= C.indexDate  - C.begin_date <= 183 |
258                       0 <= C.begin_date - C.indexDate  <= (183 * 1)) > 0 as indPrev12mo,
259                   sum(0 <= C.indexDate  - C.begin_date <= 183 |
260                       0 <= C.begin_date - C.indexDate  <= (183 * 3)) > 0 as indPrev24mo,
261                   sum(0 <= C.indexDate  - C.begin_date <= 183 |
262                       0 <= C.begin_date - C.indexDate  <= (183 * 5)) > 0 as indPrev36mo
263            from (&select1 from UCB.tempPrevDxMPCDControl A &join1 &where1a &where1b union corr
264                  /* &select1 from UCB.tempPrevDxSABRControl A &join1 &where1a &where1b union corr */
265                  &select1 from UCB.tempPrevPxMPCDControl A &join1 &where1a union corr
266                  /* &select1 from UCB.tempPrevPxSABRControl A &join1 &where1a union corr */
267                  &select2 from Work.outcome_ILD_MPCD union corr
268                  /* &select2 from Work.outcome_ILD_SABR union corr */
269                  select * from Work.fractures) C
270            group by C.database, C.cohort, C.patid, C.indexDate, C.controlID, C.age, C.sex,
271                     C.outcomeCategory,
272                     C.disease
273            having calculated indPrevPriorToIndex > 0 |
274                   calculated indPrev12mo > 0 |
275                   calculated indPrev24mo > 0 |
276                   calculated indPrev36mo > 0;
ERROR: Column cohort could not be found in the table/view identified with the correlation name C.
ERROR: Column controlID could not be found in the table/view identified with the correlation name C.
ERROR: Column cohort could not be found in the table/view identified with the correlation name C.
ERROR: Column controlID could not be found in the table/view identified with the correlation name C.
ERROR: The following columns were not found in the contributing tables: cohort, controlID.
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
277        
278          create table Work.denominator as
279            select database,
280                   cohort,
281                   /* mean(indexDate - ASCohortDate) as meanDaysASCohortToExposure,
282                   min(indexDate - ASCohortDate) as minDaysASCohortToExposure,
283                   max(indexDate - ASCohortDate) as maxDaysASCohortToExposure, */
284                   count(distinct patid) as denomPatid,
285                   count(distinct controlID) as denomControlCohort
286            from DT.controlLookup
287            group by database, cohort;
6                                                                   The SAS System                                   09:27 Thursday, September 7, 2017

NOTE: Statement not executed due to NOEXEC option.
288        
289          create table Work.prev as
290            select A.database, A.cohort, A.outcomeCategory, A.disease,
291                   B.denomPatid,
292                   B.denomControlCohort,
293                   "Prior to index" as timeWindow,
294                   sum(A.indPrevPriorToIndex) as numer,
295                   sum(A.indPrevPriorToIndex) / B.denomControlCohort * 100 as prevPct
296            from DT.comorbiditiesControl A inner join
297                 Work.denominator B on (A.database = B.database & A.cohort = B.cohort)
298            group by A.database, A.cohort, A.outcomeCategory, A.disease, B.denomPatid, B.denomControlCohort
299            union corr
300            select A.database, A.cohort, A.outcomeCategory, A.disease,
301                   B.denomPatid,
302                   B.denomControlCohort,
303                   "12 months" as timeWindow,
304                   sum(A.indPrev12mo) as numer,
305                   sum(A.indPrev12mo) / B.denomControlCohort * 100 as prevPct
306            from DT.comorbiditiesControl A inner join
307                 Work.denominator B on (A.database = B.database & A.cohort = B.cohort)
308            group by A.database, A.cohort, A.outcomeCategory, A.disease, B.denomPatid, B.denomControlCohort
309            union corr
310            select A.database, A.cohort, A.outcomeCategory, A.disease,
311                   B.denomPatid,
312                   B.denomControlCohort,
313                   "24 months" as timeWindow,
314                   sum(A.indPrev24mo) as numer,
315                   sum(A.indPrev24mo) / B.denomControlCohort * 100 as prevPct
316            from DT.comorbiditiesControl A inner join
317                 Work.denominator B on (A.database = B.database & A.cohort = B.cohort)
318            group by A.database, A.cohort, A.outcomeCategory, A.disease, B.denomPatid, B.denomControlCohort
319            union corr
320            select A.database, A.cohort, A.outcomeCategory, A.disease,
321                   B.denomPatid,
322                   B.denomControlCohort,
323                   "36 months" as timeWindow,
324                   sum(A.indPrev36mo) as numer,
325                   sum(A.indPrev36mo) / B.denomControlCohort * 100 as prevPct
326            from DT.comorbiditiesControl A inner join
327                 Work.denominator B on (A.database = B.database & A.cohort = B.cohort)
328            group by A.database, A.cohort, A.outcomeCategory, A.disease, B.denomPatid, B.denomControlCohort;
NOTE: Statement not executed due to NOEXEC option.
329          select * from Work.prev;
ERROR: File WORK.PREV.DATA does not exist.
330        quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      
331        
332        


333        proc export
334          data = Work.prev
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
335          outfile = "data\processed\&cmt..csv"
336          dbms = csv
337          replace;

338          delimiter = ",";
             _________
             180

ERROR 180-322: Statement is not valid or it is used out of proper order.

339        run;
7                                                                   The SAS System                                   09:27 Thursday, September 7, 2017

340        
341        
342        ods html close;
ERROR: Errors printed on pages 3,4,5,6.

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           4.75 seconds
      cpu time            0.71 seconds
      
